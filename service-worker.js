!function(){"use strict";var e={485:function(){try{self["workbox:core:6.5.3"]&&_()}catch(e){}},425:function(){try{self["workbox:expiration:6.5.3"]&&_()}catch(e){}},94:function(){try{self["workbox:precaching:6.5.3"]&&_()}catch(e){}},728:function(){try{self["workbox:routing:6.5.3"]&&_()}catch(e){}},950:function(){try{self["workbox:strategies:6.5.3"]&&_()}catch(e){}}},t={};function s(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,s),r.exports}!function(){s(485);const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};let t=class extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}};const n={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},a=e=>[n.prefix,e,n.suffix].filter((e=>e&&e.length>0)).join("-"),r=e=>e||a(n.googleAnalytics),i=e=>e||a(n.precache),c=()=>n.prefix,o=e=>e||a(n.runtime),h=()=>n.suffix;function l(e,t){const s=t();return e.waitUntil(s),s}s(94);function u(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(n,location.href),r=new URL(n,location.href);return a.searchParams.set("__WB_REVISION__",s),{cacheKey:a.href,url:r.href}}let d=class{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}},f=class{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}};let p;async function g(e,s){let n=null;if(e.url&&(n=new URL(e.url).origin),n!==self.location.origin)throw new t("cross-origin-copy-response",{origin:n});const a=e.clone(),r={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},i=s?s(r):r,c=function(){if(void 0===p){const t=new Response("");if("body"in t)try{new Response(t.body),p=!0}catch(e){p=!1}p=!1}return p}()?a.body:await a.blob();return new Response(c,i)}const m=e=>new URL(String(e),location.href).href.replace(new RegExp(`^${location.origin}`),"");function w(e,t){const s=new URL(e);for(const n of t)s.searchParams.delete(n);return s.href}let y=class{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}};const _=new Set;s(950);function v(e){return"string"==typeof e?new Request(e):e}let b=class{async fetch(e){const{event:s}=this;let n=v(e);if("navigate"===n.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const a=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))n=await e({request:n.clone(),event:s})}catch(i){if(i instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:i.message})}const r=n.clone();try{let e;e=await fetch(n,"navigate"===n.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:r,response:e});return e}catch(c){throw a&&await this.runCallbacks("fetchDidFail",{error:c,event:s,originalRequest:a.clone(),request:r.clone()}),c}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=v(e);let s;const{cacheName:n,matchOptions:a}=this._strategy,r=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},a),{cacheName:n});s=await caches.match(r,i);for(const c of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await c({cacheName:n,matchOptions:a,cachedResponse:s,request:r,event:this.event})||void 0;return s}async cachePut(e,s){const n=v(e);var a;await(a=0,new Promise((e=>setTimeout(e,a))));const r=await this.getCacheKey(n,"write");if(!s)throw new t("cache-put-with-no-response",{url:m(r.url)});const i=await this._ensureResponseSafeToCache(s);if(!i)return!1;const{cacheName:c,matchOptions:o}=this._strategy,h=await self.caches.open(c),l=this.hasCallback("cacheDidUpdate"),u=l?await async function(e,t,s,n){const a=w(t.url,s);if(t.url===a)return e.match(t,n);const r=Object.assign(Object.assign({},n),{ignoreSearch:!0}),i=await e.keys(t,r);for(const c of i)if(a===w(c.url,s))return e.match(c,n)}(h,r.clone(),["__WB_REVISION__"],o):null;try{await h.put(r,l?i.clone():i)}catch(d){if(d instanceof Error)throw"QuotaExceededError"===d.name&&await async function(){for(const e of _)await e()}(),d}for(const t of this.iterateCallbacks("cacheDidUpdate"))await t({cacheName:c,oldResponse:u,newResponse:i.clone(),request:r,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let n=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))n=v(await e({mode:t,request:n,event:this.event,params:this.params}));this._cacheKeys[s]=n}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),n=n=>{const a=Object.assign(Object.assign({},n),{state:s});return t[e](a)};yield n}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const n of this.iterateCallbacks("cacheWillUpdate"))if(t=await n({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new y,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const s of this._plugins)this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}},R=class{handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,n="params"in e?e.params:void 0,a=new b(this,{event:t,request:s,params:n}),r=this._getResponse(a,s,t);return[r,this._awaitComplete(r,a,s,t)]}async _getResponse(e,s,n){let a;await e.runCallbacks("handlerWillStart",{event:n,request:s});try{if(a=await this._handle(s,e),!a||"error"===a.type)throw new t("no-response",{url:s.url})}catch(r){if(r instanceof Error)for(const t of e.iterateCallbacks("handlerDidError"))if(a=await t({error:r,event:n,request:s}),a)break;if(!a)throw r}for(const t of e.iterateCallbacks("handlerWillRespond"))a=await t({event:n,request:s,response:a});return a}async _awaitComplete(e,t,s,n){let a,r;try{a=await e}catch(r){}try{await t.runCallbacks("handlerDidRespond",{event:n,request:s,response:a}),await t.doneWaiting()}catch(i){i instanceof Error&&(r=i)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:s,response:a,error:r}),t.destroy(),r)throw r}constructor(e={}){this.cacheName=o(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}},x=class e extends R{async _handle(e,t){return await t.cacheMatch(e)||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let n;const a=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{const t=a.integrity,r=e.integrity,i=!r||r===t;if(n=await s.fetch(new Request(e,{integrity:"no-cors"!==e.mode?r||t:void 0})),t&&i&&"no-cors"!==e.mode){this._useDefaultCacheabilityPluginIfNeeded();await s.cachePut(e,n.clone())}}return n}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const n=await s.fetch(e);if(!await s.cachePut(e,n.clone()))throw new t("bad-precaching-response",{url:e.url,status:n.status});return n}_useDefaultCacheabilityPluginIfNeeded(){let t=null,s=0;for(const[n,a]of this.plugins.entries())a!==e.copyRedirectedCacheableResponsesPlugin&&(a===e.defaultPrecacheCacheabilityPlugin&&(t=n),a.cacheWillUpdate&&s++);0===s?this.plugins.push(e.defaultPrecacheCacheabilityPlugin):s>1&&null!==t&&this.plugins.splice(t,1)}constructor(t={}){t.cacheName=i(t.cacheName),super(t),this._fallbackToNetwork=!1!==t.fallbackToNetwork,this.plugins.push(e.copyRedirectedCacheableResponsesPlugin)}};x.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},x.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await g(e):e};let C,E=class{get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:a}=u(n),r="string"!=typeof n&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(e,n.integrity)}if(this._urlsToCacheKeys.set(a,e),this._urlsToCacheModes.set(a,r),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return l(e,(async()=>{const t=new d;this.strategy.plugins.push(t);for(const[a,r]of this._urlsToCacheKeys){const t=this._cacheKeysToIntegrities.get(r),s=this._urlsToCacheModes.get(a),n=new Request(a,{integrity:t,cache:s,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:r},request:n,event:e}))}const{updatedURLs:s,notUpdatedURLs:n}=t;return{updatedURLs:s,notUpdatedURLs:n}}))}activate(e){return l(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const a of t)s.has(a.url)||(await e.delete(a),n.push(a.url));return{deletedURLs:n}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new x({cacheName:i(e),plugins:[...t,new f({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}};const L=()=>(C||(C=new E),C);s(728);const D=e=>e&&"object"==typeof e?e:{handle:e};let q,U=class{setCatchHandler(e){this.catchHandler=D(e)}constructor(e,t,s="GET"){this.handler=D(t),this.match=e,this.method=s}},k=class extends U{constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}},T=class{get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:a,route:r}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:s});let i=r&&r.handler;const c=e.method;if(!i&&this._defaultHandlerMap.has(c)&&(i=this._defaultHandlerMap.get(c)),!i)return;let o;try{o=i.handle({url:s,request:e,event:t,params:a})}catch(l){o=Promise.reject(l)}const h=r&&r.catchHandler;return o instanceof Promise&&(this._catchHandler||h)&&(o=o.catch((async n=>{if(h)try{return await h.handle({url:s,request:e,event:t,params:a})}catch(r){r instanceof Error&&(n=r)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw n}))),o}findMatchingRoute({url:e,sameOrigin:t,request:s,event:n}){const a=this._routes.get(s.method)||[];for(const r of a){let a;const i=r.match({url:e,sameOrigin:t,request:s,event:n});if(i)return a=i,(Array.isArray(a)&&0===a.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(a=void 0),{route:r,params:a}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,D(e))}setCatchHandler(e){this._catchHandler=D(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this._routes.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this._routes.get(e.method).splice(s,1)}constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}};const N=()=>(q||(q=new T,q.addFetchListener(),q.addCacheListener()),q);function I(e,s,n){let a;if("string"==typeof e){const t=new URL(e,location.href);0,a=new U((({url:e})=>e.href===t.href),s,n)}else if(e instanceof RegExp)a=new k(e,s,n);else if("function"==typeof e)a=new U(e,s,n);else{if(!(e instanceof U))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}return N().registerRoute(a),a}let K=class extends U{constructor(e,t){super((({request:s})=>{const n=e.getURLsToCacheKeys();for(const a of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:n=!0,urlManipulation:a}={}){const r=new URL(e,location.href);r.hash="",yield r.href;const i=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(r,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=s,yield e.href}if(n){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:r});for(const t of e)yield t.href}}(s.url,t)){const t=n.get(a);if(t)return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}),e.strategy)}};function M(e){e.then((()=>{}))}const P={get googleAnalytics(){return r()},get precache(){return i()},get prefix(){return c()},get runtime(){return o()},get suffix(){return h()}};const A=(e,t)=>t.some((t=>e instanceof t));let O,S;const B=new WeakMap,W=new WeakMap,j=new WeakMap,F=new WeakMap,H=new WeakMap;let $={get(e,t,s){if(e instanceof IDBTransaction){if("done"===t)return W.get(e);if("objectStoreNames"===t)return e.objectStoreNames||j.get(e);if("store"===t)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return Q(e[t])},set:(e,t,s)=>(e[t]=s,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function V(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(S||(S=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(J(this),t),Q(B.get(this))}:function(...t){return Q(e.apply(J(this),t))}:function(t,...s){const n=e.call(J(this),t,...s);return j.set(n,t.sort?t.sort():[t]),Q(n)}}function G(e){return"function"==typeof e?V(e):(e instanceof IDBTransaction&&function(e){if(W.has(e))return;const t=new Promise(((t,s)=>{const n=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",r),e.removeEventListener("abort",r)},a=()=>{t(),n()},r=()=>{s(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",a),e.addEventListener("error",r),e.addEventListener("abort",r)}));W.set(e,t)}(e),A(e,O||(O=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(e,$):e)}function Q(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,s)=>{const n=()=>{e.removeEventListener("success",a),e.removeEventListener("error",r)},a=()=>{t(Q(e.result)),n()},r=()=>{s(e.error),n()};e.addEventListener("success",a),e.addEventListener("error",r)}));return t.then((t=>{t instanceof IDBCursor&&B.set(t,e)})).catch((()=>{})),H.set(t,e),t}(e);if(F.has(e))return F.get(e);const t=G(e);return t!==e&&(F.set(e,t),H.set(t,e)),t}const J=e=>H.get(e);const z=["get","getKey","getAll","getAllKeys","count"],X=["put","add","delete","clear"],Y=new Map;function Z(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(Y.get(t))return Y.get(t);const s=t.replace(/FromIndex$/,""),n=t!==s,a=X.includes(s);if(!(s in(n?IDBIndex:IDBObjectStore).prototype)||!a&&!z.includes(s))return;const r=async function(e,...t){const r=this.transaction(e,a?"readwrite":"readonly");let i=r.store;return n&&(i=i.index(t.shift())),(await Promise.all([i[s](...t),a&&r.done]))[0]};return Y.set(t,r),r}$=(e=>({...e,get:(t,s,n)=>Z(t,s)||e.get(t,s,n),has:(t,s)=>!!Z(t,s)||e.has(t,s)}))($);s(425);const ee=e=>{const t=new URL(e,location.href);return t.hash="",t.href};let te=class{_upgradeDb(e){const t=e.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function(e,{blocked:t}={}){const s=indexedDB.deleteDatabase(e);t&&s.addEventListener("blocked",(e=>t(e.oldVersion,e))),Q(s).then((()=>{}))}(this._cacheName)}async setTimestamp(e,t){const s={url:e=ee(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},n=(await this.getDb()).transaction("cache-entries","readwrite",{durability:"relaxed"});await n.store.put(s),await n.done}async getTimestamp(e){const t=await this.getDb(),s=await t.get("cache-entries",this._getId(e));return null==s?void 0:s.timestamp}async expireEntries(e,t){const s=await this.getDb();let n=await s.transaction("cache-entries").store.index("timestamp").openCursor(null,"prev");const a=[];let r=0;for(;n;){const s=n.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&r>=t?a.push(n.value):r++),n=await n.continue()}const i=[];for(const c of a)await s.delete("cache-entries",c.id),i.push(c.url);return i}_getId(e){return this._cacheName+"|"+ee(e)}async getDb(){return this._db||(this._db=await function(e,t,{blocked:s,upgrade:n,blocking:a,terminated:r}={}){const i=indexedDB.open(e,t),c=Q(i);return n&&i.addEventListener("upgradeneeded",(e=>{n(Q(i.result),e.oldVersion,e.newVersion,Q(i.transaction),e)})),s&&i.addEventListener("blocked",(e=>s(e.oldVersion,e.newVersion,e))),c.then((e=>{r&&e.addEventListener("close",(()=>r())),a&&e.addEventListener("versionchange",(e=>a(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),c}("workbox-expiration",1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}constructor(e){this._db=null,this._cacheName=e}},se=class{async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),s=await self.caches.open(this._cacheName);for(const n of t)await s.delete(n,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,M(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),s=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<s}return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new te(e)}};function ne({hostname:e}){return"app.uniswap.org"===e}function ae({hostname:e}){return"app.corn-staging.com"===e}const re=new RegExp("/[^/?]+\\.[^/]+$"),ie="/yydswaplatest/index.html";function ce({request:e,url:t}){return"navigate"===e.mode&&(!t.pathname.match(re)&&!!(Boolean("localhost"===self.location.hostname||"[::1]"===self.location.hostname||self.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)||self.location.hostname.endsWith(".vercel.app"))||ae(t)||ne(t)))}async function oe({request:e}){if("onLine"in navigator&&!navigator.onLine)return this?.offlineDocument?.clone()||fetch(e);const t=(s=ie,L().getCacheKeyForURL(s));var s;const n=await function(e){return L().matchPrecache(e)}(ie),a=new AbortController;let r;try{if(r=await fetch(t||ie,{cache:"reload",signal:a.signal}),!n)return new Response(r.body,r)}catch(o){if(!n)throw o;return he.from(n)}const i=r?.headers.get("etag"),c=n?.headers.get("etag");return i&&i===c?(a.abort(),he.from(n)):new Response(r.body,r)}class he extends Response{static async from(e){const t=await e.text(),s=new Headers(e.headers);s.set("Content-Type","text/html; charset=utf-8");const n={...e,headers:s};return new he(t.replace("<body>","<body><script>window.__isDocumentCached=true<\/script>"),n)}constructor(e,t){super(e,t)}}self.addEventListener("activate",(()=>self.clients.claim())),self.skipWaiting(),I(new class extends U{constructor(e){super(ce,oe.bind({offlineDocument:e}),"GET")}});const{onDemandEntries:le,precacheEntries:ue}=[{'revision':'34c86fa7987daf1eeb6837ee6b1740e7','url':'/yydswaplatest/index.html'},{'revision':null,'url':'/yydswaplatest/static/css/3346.df1e2eea.chunk.css'},{'revision':null,'url':'/yydswaplatest/static/css/4195.dd34e199.css'},{'revision':null,'url':'/yydswaplatest/static/css/4524.b5e95ebe.chunk.css'},{'revision':null,'url':'/yydswaplatest/static/css/4736.beb396d9.chunk.css'},{'revision':null,'url':'/yydswaplatest/static/css/8654.34e6752f.chunk.css'},{'revision':null,'url':'/yydswaplatest/static/css/891.fb393ba1.chunk.css'},{'revision':null,'url':'/yydswaplatest/static/js/1070.dcf12187.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/1275.474ae0f3.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/1444.e795c651.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/152.53203b9a.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/1624.f4f6d257.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/1641.81319753.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/1699.358dd9d5.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/1769.ba9595c6.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/1846.d8806fc7.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/1871.cdc519c4.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/2057.d726db62.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/2072.742deb8b.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/2075.252ba1a4.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/2077.8da66e7c.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/2278.a587bdd1.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/2333.ddcbe0d8.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/2374.83229df6.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/2595.6026dff3.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/2619.f704247c.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/262.2f7833b3.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/2733.c7f001bc.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/2746.a280d67a.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/3029.6caf0fee.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/3030.222cd660.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/3095.ef70c73e.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/317.3a85e98c.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/3172.d89aae8b.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/3346.40474bd5.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/3374.68c4d121.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/3492.bc32e4f0.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/3668.4fd19de8.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/3676.6b88eb7a.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/4135.361f1d16.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/4195.c955e847.js'},{'revision':null,'url':'/yydswaplatest/static/js/4477.92fa5ffa.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/4524.5c655cc0.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/4567.73ffc04a.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/4639.0c3f3710.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/4666.2cf130cd.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/4726.3d92c459.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/4736.9095aef6.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/4783.e640eecd.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/4894.1fa79297.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/5384.4328cfb2.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/5510.3316f4ec.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/5649.86bce84d.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/5696.b31e5222.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/5830.1fb859a9.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/5883.33696e81.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/6154.b585e4ba.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/6234.a99bc7df.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/624.3d488bd5.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/6421.5979f02a.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/6488.7b1cb5ba.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/6658.7993b010.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/6668.a54dec17.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/6740.2980215d.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/6881.4632891b.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/6965.48766659.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/7015.50b397f4.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/744.43f20b20.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/7549.8219a47c.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/7693.a1df52b6.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/7708.a2f1521a.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/7749.16bcbc2f.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/7790.a457b715.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/791.9643ddac.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/7916.6c11eae4.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8012.63eae108.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/804.15f6ca75.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8113.160c7303.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8120.696dbf18.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8455.e1b6860f.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8533.7b7b1d7b.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8555.56804156.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8561.a0e8043c.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8591.72716615.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8654.67ffcb9c.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8668.7c8edd35.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8683.b0d1905a.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8742.6daeacb0.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/8818.4a4cce0d.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/891.ca2aeb82.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/9017.904abce5.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/9111.a7e08ee1.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/9210.e4b7d2e3.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/9519.95816895.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/958.0338cd40.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/9580.c25b5c70.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/9779.de7ef3b0.chunk.js'},{'revision':null,'url':'/yydswaplatest/static/js/main.edd43afa.js'},{'revision':null,'url':'/yydswaplatest/static/media/404-page-dark.f24684e761633ae99402.png'},{'revision':null,'url':'/yydswaplatest/static/media/404-page-light.c448d3fd36de14609aba.png'},{'revision':null,'url':'/yydswaplatest/static/media/AndroidWallet-Thumbnail-Dark.2652abb9540f85b5c0dd.png'},{'revision':null,'url':'/yydswaplatest/static/media/AndroidWallet-Thumbnail-Light.d9dcf6b217d42df80371.png'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Black.e258f99875304915b846.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Black.ef2d12b9f04d00e319f2.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-BlackItalic.70d2cf354617b8400370.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-BlackItalic.a1ea21b039cc259b6452.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Bold.1c3dfbb05cd4ae02710e.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Bold.a808c21aaa221f6d24f9.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-BoldItalic.32e2b20f6958d2d2b42d.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-BoldItalic.974439652aea7e778bf7.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-ExtraBold.1ca2a2cfb6b4cad40001.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-ExtraBold.30c3d891c030615a228a.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-ExtraBoldItalic.a0a103e5c1d773038d85.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-ExtraBoldItalic.cd6682866c7a0fead62a.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-ExtraLight.21843ac6e40e9c4fd1c6.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-ExtraLight.7b7bd05c50e77a1dea5f.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-ExtraLightItalic.04abe79a58b830b05436.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-ExtraLightItalic.a7a00555699d20ff4912.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Italic.635afeed439bcb3e4823.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Italic.e2f52803eb133261314f.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Light.51f4d17560f77b8a0b38.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Light.c08cfeeb313675a65efc.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-LightItalic.203b9b31308f80781b13.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-LightItalic.8942ebe85375956847c9.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Medium.ba68c34a21c5751a2838.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Medium.f5549f68ca7db479bc7d.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-MediumItalic.2812ec5af03af477a492.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-MediumItalic.d29ef50afbad4a107530.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Regular.6cc68d6b835a3dd06e7e.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Regular.8398b3762d7b06fc3b8c.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-SemiBold.25b1ffc9587070462342.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-SemiBold.625474d6ebbfe4e3b0ae.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-SemiBoldItalic.80d799bef2a34b9d253c.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-SemiBoldItalic.c632fb9629c16866b4b6.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Thin.de9194d1cf4ce0dd3b56.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-Thin.fcc912460dcaea1ee8d4.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-ThinItalic.6b5565d76adf0660b406.woff'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-ThinItalic.ec0fcc99e9d879db77ba.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-italic.var.b27297c148a7ef314ce2.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter-roman.var.b65534c5223684261945.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/Inter.var.9df5db385c3370707c5b.woff2'},{'revision':null,'url':'/yydswaplatest/static/media/airdopBackground.7f54f314ceca6a012b57.png'},{'revision':'d74817d9f63e9c17e50702c14bf42566','url':'/yydswaplatest/static/media/arbitrum.8e9b1f5582c6cb36ea202afb210e6d67.svg'},{'revision':'452920d07d82a7f674995b50874134d2','url':'/yydswaplatest/static/media/avax.078fa91df3aed7c91b5740e9aba458be.svg'},{'revision':'bea17c505747126921ea37ce217d9622','url':'/yydswaplatest/static/media/avax_logo.cccd7fc1b8cc3508f945300068d80ba3.svg'},{'revision':'e9023ccd29e0f67973a4f8b7b110a640','url':'/yydswaplatest/static/media/base.7e6d24bf4ce775562eaff72d903da13d.svg'},{'revision':null,'url':'/yydswaplatest/static/media/big_unicorn.595c49962d708abbaaec.png'},{'revision':'c9d4315664443cfbf90d12db0369c289','url':'/yydswaplatest/static/media/blank_token.1870729478dcddb2cac513635621d4c9.svg'},{'revision':'904b44c2b22eb2d49f618396e6f2db1a','url':'/yydswaplatest/static/media/blue-loader.249140daf016adc355cfb029ec67de19.svg'},{'revision':'1aa88810b9f05826b0ce034c0799f7e6','url':'/yydswaplatest/static/media/bnb-logo.797868eb94521320b78e3967134febbe.svg'},{'revision':'5e425406a78f5c0ac2d9dc6657ac017c','url':'/yydswaplatest/static/media/bnb.e6b5dbb55094fe29b2ee5dd34be41508.svg'},{'revision':'a742fcfcc61e9c1bc351906deb7d08ca','url':'/yydswaplatest/static/media/bolt.2f107ece38a7328ecebd282d2c3884d6.svg'},{'revision':'ec95aec81c093fd24af0dd3c753afbec','url':'/yydswaplatest/static/media/brave-icon.91e0081d6d5d0001a27211aa0bdf8f37.svg'},{'revision':'d210e0119ae86ad96cc822e3e7a4839c','url':'/yydswaplatest/static/media/browser-wallet-dark.257c8f5da352c06afbfad5e277146406.svg'},{'revision':'dc81f09336349a0e0a479fc3dd804764','url':'/yydswaplatest/static/media/browser-wallet-light.a43bf67e7318b333e0664b16b816410b.svg'},{'revision':'cf4ac95c92500589b93cfae7cb4243b9','url':'/yydswaplatest/static/media/celo.3ec5ec2a6b1bb4566400d9323049cbdc.svg'},{'revision':'69fd9db4f5b5e2a995d12819bb9de008','url':'/yydswaplatest/static/media/celo_light.8a1d66c13556279ce59a7cb25919a834.svg'},{'revision':'f1af089baededa225cd877aebc77917e','url':'/yydswaplatest/static/media/celo_logo.e95fad7be41e27771a1729f111f11ec9.svg'},{'revision':'801715a804509ca9b412a89abe97058d','url':'/yydswaplatest/static/media/coinbase-icon.6870e62fb40f1d213198361a1b3d5521.svg'},{'revision':'1cd7e5b722faa7e20ef7ecf948b74791','url':'/yydswaplatest/static/media/contract-interaction.c6167131a8fe6fcb2ccf88699a2ef4f5.svg'},{'revision':'3a34c42d38a1de213d41433f6265f549','url':'/yydswaplatest/static/media/discord.293ffb0f8360028d0f021f1d6f413ef6.svg'},{'revision':'1472213754ea9ab845a4407baa9d1bfc','url':'/yydswaplatest/static/media/dot_line.41984deedf7551ac719792666e0f44c8.svg'},{'revision':'7d32d2fa19d17d6ab9f0e0067bebaf96','url':'/yydswaplatest/static/media/dropdown.fef18eeb100831b750bb2101c7ed956f.svg'},{'revision':'9b3fd22cb2e726e29fcd4348907174a2','url':'/yydswaplatest/static/media/ethereum.def956bb6849d9c686ce74c24da62537.svg'},{'revision':'47a0bc6ae6308cf1c9bc038f89a0b19b','url':'/yydswaplatest/static/media/expando-icon-closed.49a1da88f1f181b232aa5f068c7505ef.svg'},{'revision':'4bd9e42e20fda0b0f7d282474c7177ad','url':'/yydswaplatest/static/media/expando-icon-opened.8a35ef80ccf745864b8104986b436f90.svg'},{'revision':'1232a3248873b8d54e68d3ac54540f1f','url':'/yydswaplatest/static/media/eye.0b7e1ea0bf8a719e75d97cfc5cd4e72d.svg'},{'revision':'8dc66f6f6f62dcd1661b79ac93910a05','url':'/yydswaplatest/static/media/github.3b21c250a99986431958daaa9246a45a.svg'},{'revision':'98bb15f7996f04d245c0870dbc07ec92','url':'/yydswaplatest/static/media/ledger-icon.e85018863afe4a8e0e1a19a7d24bc792.svg'},{'revision':'5177e25b4f448f2ada7bde0e8730743b','url':'/yydswaplatest/static/media/logo.09cebba0710c0e185f863677b438d29d.svg'},{'revision':'f0c188080fbbb71fc494466939839cd4','url':'/yydswaplatest/static/media/matic-token-icon.efed2ee4e843195b44bf68ffc7439403.svg'},{'revision':'4f2c4440e19ed9428d0caae5d9840df6','url':'/yydswaplatest/static/media/menu.79681e1fce984681ebcb77a55d52d4de.svg'},{'revision':'801a9c289da055ef8693ba23dc23a5b2','url':'/yydswaplatest/static/media/metamask-icon.c8b2298e68e585a7f4d9c7b7e6320715.svg'},{'revision':'0b65502be7c50c8f5add7f804be66345','url':'/yydswaplatest/static/media/moonpay.bcc919b9af05187393277c9b2f420cfa.svg'},{'revision':null,'url':'/yydswaplatest/static/media/nftCard.ec17cbfb46691a05720c.png'},{'revision':null,'url':'/yydswaplatest/static/media/noise.3c7efafc83614205bd1a.png'},{'revision':'01b35719be4aec89a0fe53323e221c11','url':'/yydswaplatest/static/media/optimism.cd72924bce33646667c409e3437d7255.svg'},{'revision':'c5b5e4e65841af29e61a19ad5d0457b7','url':'/yydswaplatest/static/media/papers-text.59088c60908213059fe247224711a962.svg'},{'revision':'6edf2c80e93f0a7c208835b672be71cd','url':'/yydswaplatest/static/media/polygon.339f2393b315d299ac894f14f9d48116.svg'},{'revision':'fc3459f5b1a52a382efd905f10e9b3af','url':'/yydswaplatest/static/media/rabby-icon.529c59c12dcafffcb062cd7cdb994b3f.svg'},{'revision':'3fb7ced50fded7ae88a8cd1708178f34','url':'/yydswaplatest/static/media/search.3d4b96e3a9ccded7bfd728a818c83611.svg'},{'revision':'73a0afd86bf23a6b4a63b987c720d62d','url':'/yydswaplatest/static/media/socks.e6b0bda323ae546a877a5c49b95201cb.svg'},{'revision':null,'url':'/yydswaplatest/static/media/swapCard.1a0376fd97213efb0859.png'},{'revision':'d5ec1b70e83b4bb5c01e64cef1563414','url':'/yydswaplatest/static/media/tooltip_triangle.50e53ca86366852445bb688bcffdfddb.svg'},{'revision':'99faf049de08e5e52e7078fc82939ef8','url':'/yydswaplatest/static/media/trustwallet-icon.941137891bdeaeeddd010948171cea0f.svg'},{'revision':'1e541baa1f95175f1048604456db0220','url':'/yydswaplatest/static/media/twitter-safe.55cffd589d2838bd191cfd3ed211b200.svg'},{'revision':null,'url':'/yydswaplatest/static/media/unicornEmbossDark.76cdd4c5ce5fec4c8edb.png'},{'revision':null,'url':'/yydswaplatest/static/media/unicornEmbossLight.e4b75bb4a1a1989e8967.png'},{'revision':null,'url':'/yydswaplatest/static/media/uniswap-wallet-icon.12b3568891522db07d59.png'},{'revision':'bbae9adaf9ce5668a7544ab978c32746','url':'/yydswaplatest/static/media/uniswap_app_logo.1a457f134081090e6005284b37c2883f.svg'},{'revision':'ffda6fc09a6e1619f792fa987ad1c621','url':'/yydswaplatest/static/media/uniswapx_error.cfa0e5729278c91682b88eff55afda98.svg'},{'revision':null,'url':'/yydswaplatest/static/media/uniwallet_modal_icon.e17cdec93dd86d3fe3b7.png'},{'revision':'9fa15534c32f49de5036121568f98b4a','url':'/yydswaplatest/static/media/walletconnect-icon.bd207ef6f3632304cd1b6e772271cb43.svg'},{'revision':'349ea360ddf10442df3576572317bb24','url':'/yydswaplatest/static/media/x.381ead042e56a19cb5bcac9d00c29e05.svg'},{'revision':null,'url':'/yydswaplatest/static/media/xl_uni.9c9e061bed67e15ad3c8.png'}].reduce((({onDemandEntries:e,precacheEntries:t},s)=>"string"===typeof s||s.url.includes("/media/")?{precacheEntries:t,onDemandEntries:[...e,s]}:s.revision?{precacheEntries:[...t,s],onDemandEntries:e}:{precacheEntries:t,onDemandEntries:[...e,s]}),{onDemandEntries:[],precacheEntries:[]});const de=le.map((e=>"string"===typeof e?e:e.url)),fe=`${P.prefix}-on-demand-${P.suffix}`;I(new U((({url:e})=>de.includes("."+e.pathname)),new class extends R{async _handle(e,s){let n,a=await s.cacheMatch(e);if(a);else try{a=await s.fetchAndCachePut(e)}catch(r){r instanceof Error&&(n=r)}if(!a)throw new t("no-response",{url:e.url,error:n});return a}}({cacheName:fe,plugins:[new class{_getCacheExpiration(e){if(e===o())throw new t("expire-custom-caches-only");let s=this._cacheExpirations.get(e);return s||(s=new se(e,this._config),this._cacheExpirations.set(e,s)),s}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);return null===t||t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}constructor(e={}){this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const a=this._isResponseDateFresh(n),r=this._getCacheExpiration(s);M(r.expireEntries());const i=r.updateTimestamp(t.url);if(e)try{e.waitUntil(i)}catch(c){}return a?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this._getCacheExpiration(e);await s.updateTimestamp(t.url),await s.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&function(e){_.add(e)}((()=>this.deleteCacheAndMetadata()))}}({maxEntries:64})]}))),function(e,t){(function(e){L().precache(e)})(e),function(e){const t=L();I(new K(t,e))}(t)}(ue),self.addEventListener("activate",(()=>async function(e,{usedCaches:t}){(await e.keys()).filter((e=>!t.includes(e))).forEach((t=>e.delete(t)))}(self.caches,{usedCaches:[P.precache,fe]})))}()}();
//# sourceMappingURL=service-worker.js.map