{"version":3,"file":"static/js/4135.361f1d16.chunk.js","mappings":"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","sources":["components/Icons/Etherscan.tsx","components/Icons/Share.tsx","components/Tokens/TokenDetails/About.tsx","components/Tokens/TokenDetails/BreadcrumbNavLink.tsx","components/Charts/AnimatedInLineChart.tsx","components/Charts/FadeInLineChart.tsx","components/Charts/PriceChart/ChartModel.ts","components/Charts/PriceChart/format.ts","components/Charts/PriceChart/index.tsx","components/Tokens/TokenDetails/TimeSelector.tsx","components/Tokens/TokenDetails/ChartSection.tsx","components/Tokens/TokenDetails/Resource.tsx","components/swap/SwapSkeleton.tsx","components/Tokens/TokenDetails/Skeleton.tsx","components/Tokens/TokenDetails/StatsSection.tsx","components/Tokens/TokenDetails/shared.ts","components/Tokens/TokenDetails/AddressSection.tsx","components/Tokens/TokenDetails/ShareButton.tsx","components/TokenSafety/TokenSafetyMessage.tsx","hooks/useGlobalChainSwitch.ts","components/Tokens/TokenDetails/BalanceSummary.tsx","assets/svg/eye.svg","components/Tokens/TokenDetails/InvalidTokenDetails.tsx","components/Tokens/TokenDetails/MobileBalanceSummaryFooter.tsx","components/Icons/Globe.tsx","components/Icons/TwitterX.tsx","components/Tokens/TokenDetails/TokenDescription.tsx","components/Tokens/TokenDetails/index.tsx","pages/TokenDetails/index.tsx","utils/addressesAreEquivalent.ts"],"sourcesContent":["import { ComponentProps } from 'react'\n\nexport const EtherscanLogo = (props: ComponentProps<'svg'>) => (\n  <svg\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    stroke=\"transparent\"\n    {...props}\n  >\n    <path\n      d=\"M5.08042 8.66148C5.08043 8.58693 5.09517 8.51313 5.12378 8.44429C5.1524 8.37546 5.19432 8.31297 5.24716 8.26038C5.30001 8.2078 5.3627 8.16617 5.43167 8.13788C5.50064 8.1096 5.57452 8.09522 5.64907 8.09557L6.59187 8.09865C6.74218 8.09865 6.88635 8.15836 6.99263 8.26465C7.09893 8.37094 7.15865 8.5151 7.15865 8.66543V12.2303C7.26478 12.1988 7.4011 12.1652 7.55026 12.1301C7.65387 12.1058 7.74621 12.0471 7.8123 11.9637C7.87839 11.8803 7.91434 11.777 7.91432 11.6705V7.24848C7.91432 7.09814 7.97403 6.95397 8.08032 6.84766C8.1866 6.74135 8.33077 6.68162 8.4811 6.68158H9.42577C9.57609 6.68162 9.72026 6.74135 9.82655 6.84766C9.93284 6.95397 9.99255 7.09814 9.99255 7.24848V11.3526C9.99255 11.3526 10.2291 11.2569 10.4595 11.1596C10.545 11.1234 10.6181 11.0629 10.6694 10.9854C10.7208 10.908 10.7482 10.8172 10.7483 10.7242V5.83152C10.7483 5.68122 10.808 5.53707 10.9143 5.43078C11.0206 5.32449 11.1647 5.26478 11.315 5.26474H12.2597C12.41 5.26474 12.5542 5.32445 12.6604 5.43075C12.7667 5.53704 12.8265 5.6812 12.8265 5.83152V9.86056C13.6455 9.267 14.4754 8.55315 15.1341 7.69474C15.2297 7.57015 15.2929 7.42383 15.3181 7.26887C15.3434 7.1139 15.3299 6.95509 15.2788 6.8066C14.9739 5.9294 14.4894 5.12551 13.856 4.44636C13.2226 3.76722 12.4544 3.22777 11.6005 2.86256C10.7467 2.49734 9.82602 2.31439 8.89742 2.32542C7.96882 2.33645 7.05275 2.54121 6.20783 2.9266C5.36291 3.31199 4.60774 3.86952 3.99066 4.56352C3.37358 5.25751 2.90817 6.07269 2.62422 6.95689C2.34027 7.84107 2.24403 8.7748 2.34166 9.69832C2.43929 10.6218 2.72863 11.5148 3.19118 12.3201C3.27176 12.459 3.39031 12.572 3.53289 12.6459C3.67548 12.7198 3.83618 12.7514 3.99614 12.7372C4.17482 12.7215 4.3973 12.6992 4.66181 12.6681C4.77695 12.655 4.88326 12.6001 4.96048 12.5137C5.0377 12.4273 5.08043 12.3155 5.08053 12.1996L5.08042 8.66148Z\"\n      fill={props.fill ?? '#607BEE'}\n    />\n    <path\n      d=\"M5.05957 14.3792C6.05531 15.1036 7.23206 15.5384 8.45961 15.6356C9.68716 15.7326 10.9176 15.4883 12.0149 14.9294C13.1122 14.3705 14.0334 13.519 14.6768 12.4691C15.3201 11.4191 15.6605 10.2116 15.6601 8.98024C15.6601 8.82658 15.653 8.67457 15.6428 8.52344C13.2041 12.1605 8.70139 13.8609 5.05978 14.3786\"\n      fill={props.fill ?? '#607BEE'}\n    />\n  </svg>\n)\n","import { ComponentProps } from 'react'\n\nexport const Share = (props: ComponentProps<'svg'>) => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\n    <path\n      d=\"M13 4.99092C13 4.09592 14.094 3.66096 14.709 4.31196L20.637 10.582C21.121 11.094 21.121 11.894 20.637 12.406L14.709 18.676C14.094 19.326 13 18.891 13 17.997V14.4919C5.437 14.4919 4.93602 16.962 4.96802 19.529C4.97402 20.019 4.32501 20.1811 4.08301 19.7561C3.46701 18.6751 3 17.1999 3 15.4909C3 8.99592 10 8.49702 13 8.49702V4.99092Z\"\n      fill=\"#9B9B9B\"\n    />\n  </svg>\n)\n","import { Trans } from '@lingui/macro'\nimport { ChainId } from '@uniswap/sdk-core'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\n\nimport Resource from './Resource'\nimport { NoInfoAvailable, TRUNCATE_CHARACTER_COUNT, truncateDescription, TruncateDescriptionButton } from './shared'\n\nconst TokenDescriptionContainer = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  max-height: fit-content;\n  padding-top: 16px;\n  line-height: 24px;\n  white-space: pre-wrap;\n`\n\nexport const AboutContainer = styled.div`\n  gap: 16px;\n  padding: 24px 0px;\n  ${textFadeIn}\n`\nexport const AboutHeader = styled(ThemedText.MediumHeader)`\n  font-size: 28px !important;\n`\n\nconst ResourcesContainer = styled.div`\n  display: flex;\n  padding-top: 12px;\n  gap: 14px;\n`\n\ntype AboutSectionProps = {\n  address: string\n  chainId: ChainId\n  description?: string | null\n  homepageUrl?: string | null\n  twitterName?: string | null\n}\n\nexport function AboutSection({ address, chainId, description, homepageUrl, twitterName }: AboutSectionProps) {\n  const [isDescriptionTruncated, setIsDescriptionTruncated] = useState(true)\n  const shouldTruncate = !!description && description.length > TRUNCATE_CHARACTER_COUNT\n\n  const tokenDescription = shouldTruncate && isDescriptionTruncated ? truncateDescription(description) : description\n\n  const { explorer, infoLink } = getChainInfo(chainId)\n\n  return (\n    <AboutContainer data-testid=\"token-details-about-section\">\n      <AboutHeader>\n        <Trans>About</Trans>\n      </AboutHeader>\n      <TokenDescriptionContainer>\n        {!description && (\n          <NoInfoAvailable>\n            <Trans>No token information available</Trans>\n          </NoInfoAvailable>\n        )}\n        {tokenDescription}\n        {shouldTruncate && (\n          <TruncateDescriptionButton onClick={() => setIsDescriptionTruncated(!isDescriptionTruncated)}>\n            {isDescriptionTruncated ? <Trans>Show more</Trans> : <Trans>Hide</Trans>}\n          </TruncateDescriptionButton>\n        )}\n      </TokenDescriptionContainer>\n      <br />\n      <ThemedText.SubHeaderSmall>\n        <Trans>Links</Trans>\n      </ThemedText.SubHeaderSmall>\n      <ResourcesContainer data-cy=\"resources-container\">\n        <Resource\n          name={chainId === ChainId.MAINNET ? 'Etherscan' : 'Block Explorer'}\n          link={`${explorer}${address === 'NATIVE' ? '' : 'address/' + address}`}\n        />\n        <Resource name=\"More analytics\" link={`${infoLink}tokens/${address}`} />\n        {homepageUrl && <Resource name=\"Website\" link={homepageUrl} />}\n        {twitterName && <Resource name=\"Twitter\" link={`https://twitter.com/${twitterName}`} />}\n      </ResourcesContainer>\n    </AboutContainer>\n  )\n}\n","import { Link } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\n\nexport const BreadcrumbNav = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  display: flex;\n  color: ${({ theme }) => theme.neutral1};\n  ${({ isInfoTDPEnabled }) =>\n    isInfoTDPEnabled\n      ? css`\n          font-size: 16px;\n          line-height: 24px;\n        `\n      : css`\n          font-size: 14px;\n          line-height: 20px;\n        `}\n  align-items: center;\n  gap: 4px;\n  margin-bottom: 16px;\n  width: fit-content;\n`\n\nexport const BreadcrumbNavLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.neutral2};\n  transition-duration: ${({ theme }) => theme.transition.duration.fast};\n  text-decoration: none;\n\n  &:hover {\n    color: ${({ theme }) => theme.neutral3};\n  }\n`\n","import { Group } from '@visx/group'\nimport { LinePath } from '@visx/shape'\nimport { easeSinOut } from 'd3'\nimport ms from 'ms'\nimport React from 'react'\nimport { useEffect, useRef, useState } from 'react'\nimport { animated, useSpring } from 'react-spring'\nimport { useTheme } from 'styled-components'\n\nimport { LineChartProps } from './LineChart'\n\ntype AnimatedInLineChartProps<T> = Omit<LineChartProps<T>, 'height' | 'width' | 'children'>\n\nconst config = {\n  duration: ms(`0.8s`),\n  easing: easeSinOut,\n}\n\n// code reference: https://airbnb.io/visx/lineradial\n\nfunction AnimatedInLineChart<T>({\n  data,\n  getX,\n  getY,\n  marginTop,\n  curve,\n  color,\n  strokeWidth,\n}: AnimatedInLineChartProps<T>) {\n  const lineRef = useRef<SVGPathElement>(null)\n  const [lineLength, setLineLength] = useState(0)\n  const [shouldAnimate, setShouldAnimate] = useState(false)\n  const [hasAnimatedIn, setHasAnimatedIn] = useState(false)\n\n  const spring = useSpring({\n    frame: shouldAnimate ? 0 : 1,\n    config,\n    onRest: () => {\n      setShouldAnimate(false)\n      setHasAnimatedIn(true)\n    },\n  })\n\n  // We need to check to see after the \"invisble\" line has been drawn\n  // what the length is to be able to animate in the line for the first time\n  // This will run on each render to see if there is a new line length\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (lineRef.current) {\n      const length = lineRef.current.getTotalLength()\n      if (length !== lineLength) {\n        setLineLength(length)\n      }\n      if (length > 0 && !shouldAnimate && !hasAnimatedIn) {\n        setShouldAnimate(true)\n      }\n    }\n  })\n  const theme = useTheme()\n  const lineColor = color ?? theme.accent1\n\n  return (\n    <Group top={marginTop}>\n      <LinePath curve={curve} x={getX} y={getY}>\n        {({ path }) => {\n          const d = path(data) || ''\n          return (\n            <>\n              <animated.path\n                d={d}\n                ref={lineRef}\n                strokeWidth={strokeWidth}\n                strokeOpacity={hasAnimatedIn ? 1 : 0}\n                fill=\"none\"\n                stroke={lineColor}\n              />\n              {shouldAnimate && lineLength !== 0 && (\n                <animated.path\n                  d={d}\n                  strokeWidth={strokeWidth}\n                  fill=\"none\"\n                  stroke={lineColor}\n                  strokeDashoffset={spring.frame.to((v) => v * lineLength)}\n                  strokeDasharray={lineLength}\n                />\n              )}\n            </>\n          )\n        }}\n      </LinePath>\n    </Group>\n  )\n}\n\nexport default React.memo(AnimatedInLineChart) as typeof AnimatedInLineChart\n","import { Group } from '@visx/group'\nimport { LinePath } from '@visx/shape'\nimport { easeCubicInOut } from 'd3'\nimport React from 'react'\nimport { useEffect, useRef, useState } from 'react'\nimport { animated, useSpring } from 'react-spring'\nimport { useTheme } from 'styled-components'\n\nimport { LineChartProps } from './LineChart'\n\ntype FadedInLineChartProps<T> = Omit<LineChartProps<T>, 'height' | 'width' | 'children'> & { dashed?: boolean }\n\nconst config = {\n  duration: 3000,\n  easing: easeCubicInOut,\n}\n\n// code reference: https://airbnb.io/visx/lineradial\n\nfunction FadedInLineChart<T>({\n  data,\n  getX,\n  getY,\n  marginTop,\n  curve,\n  color,\n  strokeWidth,\n  dashed,\n}: FadedInLineChartProps<T>) {\n  const lineRef = useRef<SVGPathElement>(null)\n  const [lineLength, setLineLength] = useState(0)\n  const [shouldAnimate, setShouldAnimate] = useState(false)\n  const [hasAnimatedIn, setHasAnimatedIn] = useState(false)\n\n  const spring = useSpring({\n    frame: shouldAnimate ? 0 : 1,\n    config,\n    onRest: () => {\n      setShouldAnimate(false)\n      setHasAnimatedIn(true)\n    },\n  })\n\n  // We need to check to see after the \"invisble\" line has been drawn\n  // what the length is to be able to animate in the line for the first time\n  // This will run on each render to see if there is a new line length\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => {\n    if (lineRef.current) {\n      const length = lineRef.current.getTotalLength()\n      if (length !== lineLength) {\n        setLineLength(length)\n      }\n      if (length > 0 && !shouldAnimate && !hasAnimatedIn) {\n        setShouldAnimate(true)\n      }\n    }\n  })\n  const theme = useTheme()\n  const lineColor = color ?? theme.accent1\n\n  return (\n    <Group top={marginTop}>\n      <LinePath curve={curve} x={getX} y={getY}>\n        {({ path }) => {\n          const d = path(data) || ''\n          return (\n            <>\n              <animated.path\n                d={d}\n                ref={lineRef}\n                strokeWidth={strokeWidth}\n                strokeOpacity={hasAnimatedIn ? 1 : spring.frame.to((v) => 1 - v)}\n                fill=\"none\"\n                stroke={lineColor}\n                strokeDasharray={dashed ? '4,4' : undefined}\n              />\n            </>\n          )\n        }}\n      </LinePath>\n    </Group>\n  )\n}\n\nexport default React.memo(FadedInLineChart) as typeof FadedInLineChart\n","import { ScaleLinear, scaleLinear } from 'd3'\nimport { PricePoint } from 'graphql/data/util'\n\nimport { cleanPricePoints, getPriceBounds } from './utils'\n\nexport enum ChartErrorType {\n  NO_DATA_AVAILABLE,\n  NO_RECENT_VOLUME,\n  INVALID_CHART,\n}\n\ntype ChartDimensions = {\n  width: number\n  height: number\n  marginTop: number\n  marginBottom: number\n}\n\nexport type ErroredChartModel = { error: ChartErrorType; dimensions: ChartDimensions }\n\nexport type ChartModel = {\n  prices: PricePoint[]\n  startingPrice: PricePoint\n  endingPrice: PricePoint\n  lastValidPrice: PricePoint\n  blanks: PricePoint[][]\n  timeScale: ScaleLinear<number, number>\n  priceScale: ScaleLinear<number, number>\n  dimensions: ChartDimensions\n  error: undefined\n}\n\ntype ChartModelArgs = { prices?: PricePoint[]; dimensions: ChartDimensions }\nexport function buildChartModel({ dimensions, prices }: ChartModelArgs): ChartModel | ErroredChartModel {\n  if (!prices) {\n    return { error: ChartErrorType.NO_DATA_AVAILABLE, dimensions }\n  }\n\n  const innerHeight = dimensions.height - dimensions.marginTop - dimensions.marginBottom\n  if (innerHeight < 0) {\n    return { error: ChartErrorType.INVALID_CHART, dimensions }\n  }\n\n  const { prices: fixedPrices, blanks, lastValidPrice } = cleanPricePoints(prices)\n  if (fixedPrices.length < 2 || !lastValidPrice) {\n    return { error: ChartErrorType.NO_RECENT_VOLUME, dimensions }\n  }\n\n  const startingPrice = prices[0]\n  const endingPrice = prices[prices.length - 1]\n  const { min, max } = getPriceBounds(prices)\n\n  // x-axis scale\n  const timeScale = scaleLinear().domain([startingPrice.timestamp, endingPrice.timestamp]).range([0, dimensions.width])\n\n  // y-axis scale\n  const priceScale = scaleLinear().domain([min, max]).range([innerHeight, 0])\n\n  return {\n    prices: fixedPrices,\n    startingPrice,\n    endingPrice,\n    lastValidPrice,\n    blanks,\n    timeScale,\n    priceScale,\n    dimensions,\n    error: undefined,\n  }\n}\n","import { NumberValue } from 'd3'\nimport { TimePeriod } from 'graphql/data/util'\n\nconst HOUR_OPTIONS = { hour: 'numeric', minute: 'numeric', hour12: true } as const // e.g. '12:00 PM'\nconst DAY_HOUR_OPTIONS = { month: 'short', day: 'numeric', hour: 'numeric', minute: '2-digit', hour12: true } as const // e.g. 'Jul 4, 12:00 PM'\nconst MONTH_DAY_OPTIONS = { month: 'long', day: 'numeric' } as const // e.g. 'July 4'\nconst MONTH_YEAR_DAY_OPTIONS = { month: 'short', year: 'numeric', day: 'numeric' } as const // e.g. 'Jul 4, 2021'\nconst MONTH_OPTIONS = { month: 'long' } as const // e.g. 'July'\nconst WEEK_OPTIONS = { weekday: 'long' } as const // e.g. 'Sunday'\n\n// Timestamps are formatted differently based on their location/usage in charts\nexport enum TimestampFormatterType {\n  TICK = 'tick',\n  CROSSHAIR = 'crosshair',\n}\n\nconst TIME_PERIOD_TO_FORMAT_OPTIONS: Record<TimePeriod, Record<TimestampFormatterType, Intl.DateTimeFormatOptions>> = {\n  [TimePeriod.HOUR]: {\n    [TimestampFormatterType.TICK]: HOUR_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: DAY_HOUR_OPTIONS,\n  },\n  [TimePeriod.DAY]: {\n    [TimestampFormatterType.TICK]: HOUR_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: DAY_HOUR_OPTIONS,\n  },\n  [TimePeriod.WEEK]: {\n    [TimestampFormatterType.TICK]: WEEK_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: DAY_HOUR_OPTIONS,\n  },\n  [TimePeriod.MONTH]: {\n    [TimestampFormatterType.TICK]: MONTH_DAY_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: DAY_HOUR_OPTIONS,\n  },\n  [TimePeriod.YEAR]: {\n    [TimestampFormatterType.TICK]: MONTH_OPTIONS,\n    [TimestampFormatterType.CROSSHAIR]: MONTH_YEAR_DAY_OPTIONS,\n  },\n}\n\n/**\n * Returns a function to format timestamps, specialized by timePeriod and type to display ('tick' or 'crosshair'),\n * localized for the given locale.\n */\nexport function getTimestampFormatter(\n  timePeriod: TimePeriod,\n  locale: string,\n  formatterType: TimestampFormatterType\n): (n: NumberValue) => string {\n  // Choose appropriate formatting options based on type and timePeriod\n  const options = TIME_PERIOD_TO_FORMAT_OPTIONS[timePeriod][formatterType]\n  const dateTimeFormatter = new Intl.DateTimeFormat(locale, options)\n\n  return (timestamp: NumberValue): string => {\n    const epochTimeInMilliseconds = timestamp.valueOf() * 1000\n    return dateTimeFormatter.format(epochTimeInMilliseconds)\n  }\n}\n","import { Trans } from '@lingui/macro'\nimport { AxisBottom } from '@visx/axis'\nimport { localPoint } from '@visx/event'\nimport { EventType } from '@visx/event/lib/types'\nimport { GlyphCircle } from '@visx/glyph'\nimport { Line } from '@visx/shape'\nimport AnimatedInLineChart from 'components/Charts/AnimatedInLineChart'\nimport FadedInLineChart from 'components/Charts/FadeInLineChart'\nimport { buildChartModel, ChartErrorType, ChartModel, ErroredChartModel } from 'components/Charts/PriceChart/ChartModel'\nimport { getTimestampFormatter, TimestampFormatterType } from 'components/Charts/PriceChart/format'\nimport { getNearestPricePoint, getTicks } from 'components/Charts/PriceChart/utils'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport { curveCardinal } from 'd3'\nimport { PricePoint, TimePeriod } from 'graphql/data/util'\nimport { useActiveLocale } from 'hooks/useActiveLocale'\nimport { ReactNode, useCallback, useEffect, useMemo, useState } from 'react'\nimport { Info } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\nimport { useFormatter } from 'utils/formatNumbers'\n\nimport { calculateDelta, DeltaArrow } from '../../Tokens/TokenDetails/Delta'\n\nconst CHART_MARGIN = { top: 100, bottom: 48, crosshair: 72 }\n\nconst ChartHeaderWrapper = styled.div<{ stale?: boolean }>`\n  position: absolute;\n  ${textFadeIn};\n  animation-duration: ${({ theme }) => theme.transition.duration.medium};\n  ${({ theme, stale }) => stale && `color: ${theme.neutral2}`};\n`\nconst PriceContainer = styled.div`\n  display: flex;\n  gap: 6px;\n  font-size: 24px;\n  line-height: 44px;\n`\nconst DeltaContainer = styled.div`\n  height: 16px;\n  display: flex;\n  align-items: center;\n  margin-top: 4px;\n  color: ${({ theme }) => theme.neutral2};\n`\n\ninterface ChartDeltaProps {\n  startingPrice: PricePoint\n  endingPrice: PricePoint\n  noColor?: boolean\n}\n\nfunction ChartDelta({ startingPrice, endingPrice, noColor }: ChartDeltaProps) {\n  const delta = calculateDelta(startingPrice.value, endingPrice.value)\n  const { formatDelta } = useFormatter()\n\n  return (\n    <DeltaContainer>\n      {formatDelta(delta)}\n      <DeltaArrow delta={delta} noColor={noColor} />\n    </DeltaContainer>\n  )\n}\n\ninterface ChartHeaderProps {\n  crosshairPrice?: PricePoint\n  chart: ChartModel\n}\n\nfunction ChartHeader({ crosshairPrice, chart }: ChartHeaderProps) {\n  const { formatFiatPrice } = useFormatter()\n\n  const { startingPrice, endingPrice, lastValidPrice } = chart\n\n  const priceOutdated = lastValidPrice !== endingPrice\n  const displayPrice = crosshairPrice ?? (priceOutdated ? lastValidPrice : endingPrice)\n\n  const displayIsStale = priceOutdated && !crosshairPrice\n  return (\n    <ChartHeaderWrapper data-cy=\"chart-header\" stale={displayIsStale}>\n      <PriceContainer>\n        <ThemedText.HeadlineLarge color=\"inherit\">\n          {formatFiatPrice({ price: displayPrice.value })}\n        </ThemedText.HeadlineLarge>\n        {displayIsStale && (\n          <MouseoverTooltip text={<Trans>This price may not be up-to-date due to low trading volume.</Trans>}>\n            <Info size={16} data-testid=\"chart-stale-icon\" />\n          </MouseoverTooltip>\n        )}\n      </PriceContainer>\n      <ChartDelta startingPrice={startingPrice} endingPrice={displayPrice} noColor={priceOutdated} />\n    </ChartHeaderWrapper>\n  )\n}\n\nfunction ChartBody({ chart, timePeriod }: { chart: ChartModel; timePeriod: TimePeriod }) {\n  const locale = useActiveLocale()\n\n  const { prices, blanks, timeScale, priceScale, dimensions } = chart\n\n  const { ticks, tickTimestampFormatter, crosshairTimestampFormatter } = useMemo(() => {\n    // Limits the number of ticks based on graph width\n    const maxTicks = Math.floor(dimensions.width / 100)\n\n    const ticks = getTicks(chart.startingPrice.timestamp, chart.endingPrice.timestamp, timePeriod, maxTicks)\n    const tickTimestampFormatter = getTimestampFormatter(timePeriod, locale, TimestampFormatterType.TICK)\n    const crosshairTimestampFormatter = getTimestampFormatter(timePeriod, locale, TimestampFormatterType.CROSSHAIR)\n\n    return { ticks, tickTimestampFormatter, crosshairTimestampFormatter }\n  }, [dimensions.width, chart.startingPrice.timestamp, chart.endingPrice.timestamp, timePeriod, locale])\n\n  const theme = useTheme()\n  const [crosshair, setCrosshair] = useState<{ x: number; y: number; price: PricePoint }>()\n  const resetCrosshair = useCallback(() => setCrosshair(undefined), [setCrosshair])\n\n  const setCrosshairOnHover = useCallback(\n    (event: Element | EventType) => {\n      const { x } = localPoint(event) || { x: 0 }\n      const price = getNearestPricePoint(x, prices, timeScale)\n\n      if (price) {\n        const x = timeScale(price.timestamp)\n        const y = priceScale(price.value)\n        setCrosshair({ x, y, price })\n      }\n    },\n    [priceScale, timeScale, prices]\n  )\n\n  // Resets the crosshair when the time period is changed, to avoid stale UI\n  useEffect(() => resetCrosshair(), [resetCrosshair, timePeriod])\n\n  const crosshairEdgeMax = dimensions.width * 0.85\n  const crosshairAtEdge = !!crosshair && crosshair.x > crosshairEdgeMax\n\n  // Default curve doesn't look good for the HOUR chart.\n  // Higher values make the curve more rigid, lower values smooth the curve but make it less \"sticky\" to real data points,\n  // making it unacceptable for shorter durations / smaller variances.\n  const curveTension = timePeriod === TimePeriod.HOUR ? 1 : 0.9\n\n  const getX = useCallback((p: PricePoint) => timeScale(p.timestamp), [timeScale])\n  const getY = useCallback((p: PricePoint) => priceScale(p.value), [priceScale])\n  const curve = useMemo(() => curveCardinal.tension(curveTension), [curveTension])\n\n  return (\n    <>\n      <ChartHeader chart={chart} crosshairPrice={crosshair?.price} />\n      <svg data-cy=\"price-chart\" width={dimensions.width} height={dimensions.height} style={{ minWidth: '100%' }}>\n        <AnimatedInLineChart\n          data={prices}\n          getX={getX}\n          getY={getY}\n          marginTop={dimensions.marginTop}\n          curve={curve}\n          strokeWidth={2}\n        />\n        {blanks.map((blank, index) => (\n          <FadedInLineChart\n            key={index}\n            data={blank}\n            getX={getX}\n            getY={getY}\n            marginTop={dimensions.marginTop}\n            curve={curve}\n            strokeWidth={2}\n            color={theme.neutral3}\n            dashed\n          />\n        ))}\n        {crosshair !== undefined ? (\n          <g>\n            <AxisBottom\n              top={dimensions.height - 1}\n              scale={timeScale}\n              stroke={theme.surface3}\n              hideTicks={true}\n              tickValues={ticks}\n              tickFormat={tickTimestampFormatter}\n              tickLabelProps={() => ({\n                fill: theme.neutral2,\n                fontSize: 12,\n                textAnchor: 'middle',\n                transform: 'translate(0 -29)',\n              })}\n            />\n            <text\n              x={crosshair.x + (crosshairAtEdge ? -4 : 4)}\n              y={CHART_MARGIN.crosshair + 10}\n              textAnchor={crosshairAtEdge ? 'end' : 'start'}\n              fontSize={12}\n              fill={theme.neutral2}\n            >\n              {crosshairTimestampFormatter(crosshair.price.timestamp)}\n            </text>\n            <Line\n              from={{ x: crosshair.x, y: CHART_MARGIN.crosshair }}\n              to={{ x: crosshair.x, y: dimensions.height }}\n              stroke={theme.surface3}\n              strokeWidth={1}\n              pointerEvents=\"none\"\n              strokeDasharray=\"4,4\"\n            />\n            <GlyphCircle\n              left={crosshair.x}\n              top={crosshair.y + dimensions.marginTop}\n              size={50}\n              fill={theme.accent1}\n              stroke={theme.surface3}\n              strokeWidth={0.5}\n            />\n          </g>\n        ) : (\n          <AxisBottom\n            hideAxisLine={true}\n            scale={timeScale}\n            stroke={theme.surface3}\n            top={dimensions.height - 1}\n            hideTicks\n          />\n        )}\n        {!dimensions.width && (\n          // Ensures an axis is drawn even if the width is not yet initialized.\n          <line\n            x1={0}\n            y1={dimensions.height - 1}\n            x2=\"100%\"\n            y2={dimensions.height - 1}\n            fill=\"transparent\"\n            shapeRendering=\"crispEdges\"\n            stroke={theme.surface3}\n            strokeWidth={1}\n          />\n        )}\n        <rect\n          x={0}\n          y={0}\n          width={dimensions.width}\n          height={dimensions.height}\n          fill=\"transparent\"\n          onTouchStart={setCrosshairOnHover}\n          onTouchMove={setCrosshairOnHover}\n          onMouseMove={setCrosshairOnHover}\n          onMouseLeave={resetCrosshair}\n        />\n      </svg>\n    </>\n  )\n}\n\nconst CHART_ERROR_MESSAGES: Record<ChartErrorType, ReactNode> = {\n  [ChartErrorType.NO_DATA_AVAILABLE]: <Trans>Missing chart data</Trans>,\n  [ChartErrorType.NO_RECENT_VOLUME]: <Trans>Missing price data due to recently low trading volume on Uniswap v3</Trans>,\n  [ChartErrorType.INVALID_CHART]: <Trans>Invalid chart</Trans>,\n}\n\nfunction MissingPriceChart({ chart }: { chart: ErroredChartModel }) {\n  const theme = useTheme()\n  const midPoint = chart.dimensions.height / 2 + 45\n\n  return (\n    <>\n      <ChartHeaderWrapper data-cy=\"chart-header\">\n        <ThemedText.HeadlineLarge fontSize={24} color=\"neutral3\">\n          Price unavailable\n        </ThemedText.HeadlineLarge>\n        <ThemedText.BodySmall color=\"neutral3\">{CHART_ERROR_MESSAGES[chart.error]}</ThemedText.BodySmall>\n      </ChartHeaderWrapper>\n      <svg\n        data-cy=\"missing-chart\"\n        width={chart.dimensions.width}\n        height={chart.dimensions.height}\n        style={{ minWidth: '100%' }}\n      >\n        <path\n          d={`M 0 ${midPoint} Q 104 ${midPoint - 70}, 208 ${midPoint} T 416 ${midPoint}\n          M 416 ${midPoint} Q 520 ${midPoint - 70}, 624 ${midPoint} T 832 ${midPoint}`}\n          stroke={theme.surface3}\n          fill=\"transparent\"\n          strokeWidth=\"2\"\n        />\n      </svg>\n    </>\n  )\n}\n\ninterface PriceChartProps {\n  width: number\n  height: number\n  prices?: PricePoint[]\n  timePeriod: TimePeriod\n}\n\nexport function PriceChart({ width, height, prices, timePeriod }: PriceChartProps) {\n  const chart = useMemo(\n    () =>\n      buildChartModel({\n        dimensions: { width, height, marginBottom: CHART_MARGIN.bottom, marginTop: CHART_MARGIN.top },\n        prices,\n      }),\n    [width, height, prices]\n  )\n\n  if (chart.error !== undefined) {\n    return <MissingPriceChart chart={chart} />\n  }\n\n  return <ChartBody chart={chart} timePeriod={timePeriod} />\n}\n","import { useAtom } from 'jotai'\nimport { pageTimePeriodAtom } from 'pages/TokenDetails'\nimport styled from 'styled-components'\n\nimport { MEDIUM_MEDIA_BREAKPOINT } from '../constants'\nimport { DISPLAYS, ORDERED_TIMES } from '../TokenTable/TimeSelector'\n\nconst TimeOptionsWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n`\nconst TimeOptionsContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 4px;\n  gap: 4px;\n  border-radius: 16px;\n  height: 40px;\n  padding: 4px;\n  width: fit-content;\n\n  @media only screen and (max-width: ${MEDIUM_MEDIA_BREAKPOINT}) {\n    width: 100%;\n    justify-content: space-between;\n    border: none;\n  }\n`\nconst TimeButton = styled.button<{ active: boolean }>`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, active }) => (active ? theme.surface3 : 'transparent')};\n  font-weight: 535;\n  font-size: 16px;\n  padding: 6px 12px;\n  border-radius: 12px;\n  line-height: 20px;\n  border: none;\n  cursor: pointer;\n  color: ${({ theme, active }) => (active ? theme.neutral1 : theme.neutral2)};\n  transition-duration: ${({ theme }) => theme.transition.duration.fast};\n  :hover {\n    ${({ active, theme }) => !active && `opacity: ${theme.opacity.hover};`}\n  }\n`\n\nexport default function TimePeriodSelector() {\n  const [timePeriod, setTimePeriod] = useAtom(pageTimePeriodAtom)\n  return (\n    <TimeOptionsWrapper>\n      <TimeOptionsContainer>\n        {ORDERED_TIMES.map((time) => (\n          <TimeButton key={DISPLAYS[time]} active={timePeriod === time} onClick={() => setTimePeriod(time)}>\n            {DISPLAYS[time]}\n          </TimeButton>\n        ))}\n      </TimeOptionsContainer>\n    </TimeOptionsWrapper>\n  )\n}\n","import { ParentSize } from '@visx/responsive'\nimport { LoadingChart } from 'components/Tokens/TokenDetails/Skeleton'\nimport { TokenPriceQuery } from 'graphql/data/TokenPrice'\nimport { isPricePoint, PricePoint } from 'graphql/data/util'\nimport { useAtomValue } from 'jotai/utils'\nimport { pageTimePeriodAtom } from 'pages/TokenDetails'\nimport { Suspense, useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { PriceChart } from '../../Charts/PriceChart'\nimport TimePeriodSelector from './TimeSelector'\n\nexport const ChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 436px;\n  margin-bottom: 24px;\n  align-items: flex-start;\n  width: 100%;\n`\n\nfunction usePriceHistory(tokenPriceData: TokenPriceQuery): PricePoint[] | undefined {\n  // Appends the current price to the end of the priceHistory array\n  const priceHistory = useMemo(() => {\n    const market = tokenPriceData.token?.market\n    const priceHistory = market?.priceHistory?.filter(isPricePoint)\n    const currentPrice = market?.price?.value\n    if (Array.isArray(priceHistory) && currentPrice !== undefined) {\n      const timestamp = Date.now() / 1000\n      return [...priceHistory, { timestamp, value: currentPrice }]\n    }\n    return priceHistory\n  }, [tokenPriceData])\n\n  return priceHistory\n}\nexport default function ChartSection({ tokenPriceQuery }: { tokenPriceQuery?: TokenPriceQuery }) {\n  if (!tokenPriceQuery) {\n    return <LoadingChart />\n  }\n\n  return (\n    <Suspense fallback={<LoadingChart />}>\n      <ChartContainer data-testid=\"chart-container\">\n        <Chart tokenPriceQuery={tokenPriceQuery} />\n        <TimePeriodSelector />\n      </ChartContainer>\n    </Suspense>\n  )\n}\n\nfunction Chart({ tokenPriceQuery }: { tokenPriceQuery: TokenPriceQuery }) {\n  const prices = usePriceHistory(tokenPriceQuery)\n  const timePeriod = useAtomValue(pageTimePeriodAtom)\n\n  return (\n    <ParentSize>\n      {({ width }) => <PriceChart prices={prices} width={width} height={392} timePeriod={timePeriod} />}\n    </ParentSize>\n  )\n}\n","import { darken } from 'polished'\nimport styled from 'styled-components'\nimport { ExternalLink } from 'theme/components'\n\nconst ResourceLink = styled(ExternalLink)`\n  display: flex;\n  color: ${({ theme }) => theme.accent1};\n  font-weight: 535;\n  font-size: 14px;\n  line-height: 20px;\n  gap: 4px;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => darken(0.1, theme.accent1)};\n    text-decoration: none;\n  }\n`\nexport default function Resource({ name, link }: { name: string; link: string }) {\n  return (\n    <ResourceLink href={link}>\n      {name}\n      <sup>↗</sup>\n    </ResourceLink>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ArrowContainer } from 'pages/Swap'\nimport { ArrowDown } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { ArrowWrapper } from './styled'\n\nconst StyledArrowWrapper = styled(ArrowWrapper)`\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0;\n`\n\nconst LoadingWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  justify-content: space-between;\n\n  padding: 8px;\n  border: ${({ theme }) => `1px solid ${theme.surface3}`};\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.surface1};\n`\n\nconst Blob = styled.div<{ width?: number; radius?: number }>`\n  background-color: ${({ theme }) => theme.surface2};\n  border-radius: ${({ radius }) => (radius ?? 4) + 'px'};\n  height: 56px;\n  width: ${({ width }) => (width ? width + 'px' : '100%')};\n`\n\nconst ModuleBlob = styled(Blob)`\n  background-color: ${({ theme }) => theme.surface3};\n  height: 36px;\n`\n\nconst TitleColumn = styled.div`\n  padding: 8px;\n`\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst InputColumn = styled.div`\n  display: flex;\n  flex-flow: column;\n  background-color: ${({ theme }) => theme.surface2};\n  border-radius: 16px;\n  display: flex;\n  gap: 30px;\n  padding: 48px 12px;\n`\n\nconst OutputWrapper = styled.div`\n  position: relative;\n`\n\nfunction Title() {\n  return (\n    <TitleColumn>\n      <ThemedText.SubHeader>\n        <Trans>Swap</Trans>\n      </ThemedText.SubHeader>\n    </TitleColumn>\n  )\n}\n\nfunction FloatingInput() {\n  return (\n    <Row>\n      <ModuleBlob width={60} />\n      <ModuleBlob width={100} radius={16} />\n    </Row>\n  )\n}\n\nfunction FloatingButton() {\n  return <Blob radius={16} />\n}\n\nexport function SwapSkeleton() {\n  const theme = useTheme()\n\n  return (\n    <LoadingWrapper>\n      <Title />\n      <InputColumn>\n        <FloatingInput />\n      </InputColumn>\n      <OutputWrapper>\n        <StyledArrowWrapper clickable={false}>\n          <ArrowContainer>\n            <ArrowDown size=\"16\" color={theme.neutral3} />\n          </ArrowContainer>\n        </StyledArrowWrapper>\n        <InputColumn>\n          <FloatingInput />\n        </InputColumn>\n      </OutputWrapper>\n      <FloatingButton />\n    </LoadingWrapper>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { SwapSkeleton } from 'components/swap/SwapSkeleton'\nimport { useInfoExplorePageEnabled } from 'featureFlags/flags/infoExplore'\nimport { useInfoTDPEnabled } from 'featureFlags/flags/infoTDP'\nimport { ArrowLeft, ChevronRight } from 'react-feather'\nimport { useParams } from 'react-router-dom'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\n\nimport { LoadingBubble } from '../loading'\nimport { AboutContainer, AboutHeader } from './About'\nimport { BreadcrumbNav, BreadcrumbNavLink } from './BreadcrumbNavLink'\nimport { ChartContainer } from './ChartSection'\nimport { StatPair, StatsWrapper, StatWrapper } from './StatsSection'\n\nconst SWAP_COMPONENT_WIDTH = 360\n\nexport const Hr = styled.hr`\n  background-color: ${({ theme }) => theme.surface3};\n  border: none;\n  height: 0.5px;\n`\nexport const TokenDetailsLayout = styled.div`\n  display: flex;\n  padding: 0 8px 52px;\n  justify-content: center;\n  width: 100%;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    gap: 16px;\n    padding: 0 16px 52px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    gap: 40px;\n    padding: 48px 20px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.xl}px) {\n    gap: 60px;\n  }\n`\nexport const LeftPanel = styled.div`\n  flex: 1;\n  max-width: 780px;\n  overflow: hidden;\n`\nexport const RightPanel = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  display: none;\n  flex-direction: column;\n  gap: ${({ isInfoTDPEnabled }) => (isInfoTDPEnabled ? 40 : 20)}px;\n  width: ${SWAP_COMPONENT_WIDTH}px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    display: flex;\n  }\n`\nconst LoadingChartContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  height: 100%;\n  margin-bottom: 44px;\n  padding-bottom: 66px;\n  overflow: hidden;\n`\nexport const TokenInfoContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n  ${textFadeIn};\n  animation-duration: ${({ theme }) => theme.transition.duration.medium};\n`\nexport const TokenNameCell = styled.div`\n  display: flex;\n  gap: 8px;\n  font-size: 20px;\n  line-height: 28px;\n  align-items: center;\n`\n/* Loading state bubbles */\nconst DetailBubble = styled(LoadingBubble)`\n  height: 16px;\n  width: 180px;\n`\nconst SquaredBubble = styled(DetailBubble)`\n  height: 32px;\n  border-radius: 8px;\n`\nconst NavBubble = styled(DetailBubble)`\n  width: 169px;\n`\nconst TokenLogoBubble = styled(DetailBubble)`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`\nconst TitleBubble = styled(DetailBubble)`\n  width: 136px;\n`\nconst PriceBubble = styled(SquaredBubble)`\n  margin-top: 4px;\n  height: 40px;\n`\n\nconst SectionBubble = styled(SquaredBubble)`\n  width: 120px;\n`\nconst StatTitleBubble = styled(DetailBubble)`\n  width: 80px;\n  margin-bottom: 4px;\n`\nconst StatBubble = styled(SquaredBubble)`\n  width: 116px;\n`\nconst WideBubble = styled(DetailBubble)`\n  margin-bottom: 6px;\n  width: 100%;\n`\n\nconst ThinTitleBubble = styled(WideBubble)`\n  width: 120px;\n`\n\nconst HalfWideBubble = styled(WideBubble)`\n  width: 50%;\n`\n\nconst StatsLoadingContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst ExtraDetailsContainer = styled.div`\n  padding-top: 24px;\n`\n\nconst ChartAnimation = styled.div`\n  animation: wave 8s cubic-bezier(0.36, 0.45, 0.63, 0.53) infinite;\n  display: flex;\n  overflow: hidden;\n  margin-top: 90px;\n\n  @keyframes wave {\n    0% {\n      margin-left: 0;\n    }\n    100% {\n      margin-left: -800px;\n    }\n  }\n`\nconst Space = styled.div<{ heightSize: number }>`\n  height: ${({ heightSize }) => `${heightSize}px`};\n`\n\nfunction Wave() {\n  const theme = useTheme()\n  return (\n    <svg width=\"416\" height=\"160\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M 0 80 Q 104 10, 208 80 T 416 80\" stroke={theme.surface3} fill=\"transparent\" strokeWidth=\"2\" />\n    </svg>\n  )\n}\n\nexport function LoadingChart() {\n  return (\n    <ChartContainer>\n      <ThemedText.HeadlineLarge>\n        <PriceBubble />\n      </ThemedText.HeadlineLarge>\n      <Space heightSize={6} />\n      <LoadingChartContainer>\n        <div>\n          <ChartAnimation>\n            <Wave />\n            <Wave />\n            <Wave />\n            <Wave />\n            <Wave />\n          </ChartAnimation>\n        </div>\n      </LoadingChartContainer>\n    </ChartContainer>\n  )\n}\n\nfunction LoadingStats() {\n  return (\n    <StatsWrapper>\n      <SectionBubble />\n      <StatsLoadingContainer>\n        <StatPair>\n          <StatWrapper>\n            <StatTitleBubble />\n            <StatBubble />\n          </StatWrapper>\n          <StatWrapper>\n            <StatTitleBubble />\n            <StatBubble />\n          </StatWrapper>\n        </StatPair>\n        <StatPair>\n          <StatWrapper>\n            <StatTitleBubble />\n            <StatBubble />\n          </StatWrapper>\n          <StatWrapper>\n            <StatTitleBubble />\n            <StatBubble />\n          </StatWrapper>\n        </StatPair>\n      </StatsLoadingContainer>\n    </StatsWrapper>\n  )\n}\n\n/* Loading State: row component with loading bubbles */\nexport default function TokenDetailsSkeleton() {\n  const { chainName } = useParams<{ chainName?: string }>()\n  const isInfoExplorePageEnabled = useInfoExplorePageEnabled()\n  const isInfoTDPEnabled = useInfoTDPEnabled()\n\n  return (\n    <LeftPanel>\n      {isInfoTDPEnabled ? (\n        <BreadcrumbNav isInfoTDPEnabled>\n          <BreadcrumbNavLink to={`${isInfoExplorePageEnabled ? '/explore' : ''}/tokens/${chainName}`}>\n            <Trans>Explore</Trans> <ChevronRight size={14} /> <Trans>Tokens</Trans> <ChevronRight size={14} />\n          </BreadcrumbNavLink>{' '}\n          <NavBubble />\n        </BreadcrumbNav>\n      ) : (\n        <BreadcrumbNav>\n          <BreadcrumbNavLink\n            to={(isInfoExplorePageEnabled ? '/explore' : '') + (chainName ? `/tokens/${chainName}` : `/tokens`)}\n          >\n            <ArrowLeft size={14} /> Tokens\n          </BreadcrumbNavLink>\n        </BreadcrumbNav>\n      )}\n      <TokenInfoContainer>\n        <TokenNameCell>\n          <TokenLogoBubble />\n          <TitleBubble />\n        </TokenNameCell>\n      </TokenInfoContainer>\n      <LoadingChart />\n\n      <Space heightSize={4} />\n      <LoadingStats />\n      <Hr />\n      <AboutContainer>\n        <AboutHeader>\n          <SectionBubble />\n        </AboutHeader>\n      </AboutContainer>\n      <WideBubble />\n      <WideBubble />\n      <HalfWideBubble style={{ marginBottom: '24px' }} />\n      <ExtraDetailsContainer>\n        <ThinTitleBubble />\n        <HalfWideBubble />\n      </ExtraDetailsContainer>\n      <ExtraDetailsContainer>\n        <ThinTitleBubble />\n        <HalfWideBubble />\n      </ExtraDetailsContainer>\n    </LeftPanel>\n  )\n}\n\nexport function TokenDetailsPageSkeleton() {\n  return (\n    <TokenDetailsLayout>\n      <TokenDetailsSkeleton />\n      <RightPanel>\n        <SwapSkeleton />\n      </RightPanel>\n    </TokenDetailsLayout>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ChainId } from '@uniswap/sdk-core'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { useInfoTDPEnabled } from 'featureFlags/flags/infoTDP'\nimport { TokenQueryData } from 'graphql/data/Token'\nimport { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { ExternalLink, ThemedText } from 'theme/components'\nimport { textFadeIn } from 'theme/styles'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { UNSUPPORTED_METADATA_CHAINS } from '../constants'\nimport { TokenSortMethod } from '../state'\nimport { HEADER_DESCRIPTIONS } from '../TokenTable/TokenRow'\n\nexport const StatWrapper = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 14px;\n  min-width: 121px;\n  flex: 1;\n  padding: 24px 0px;\n\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    min-width: 168px;\n  }\n`\nconst TokenStatsSection = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\nexport const StatPair = styled.div`\n  display: flex;\n  flex: 1;\n  flex-wrap: wrap;\n`\n\nconst Header = styled(ThemedText.MediumHeader)`\n  font-size: 28px !important;\n`\n\nconst StatPrice = styled.div`\n  margin-top: 4px;\n  font-size: 28px;\n  color: ${({ theme }) => theme.neutral1};\n`\nconst NoData = styled.div`\n  color: ${({ theme }) => theme.neutral3};\n`\nexport const StatsWrapper = styled.div`\n  gap: 16px;\n  ${textFadeIn}\n`\n\ntype NumericStat = number | undefined | null\n\nfunction Stat({\n  dataCy,\n  value,\n  title,\n  description,\n}: {\n  dataCy: string\n  value: NumericStat\n  title: ReactNode\n  description?: ReactNode\n}) {\n  const { formatNumber } = useFormatter()\n\n  return (\n    <StatWrapper data-cy={`${dataCy}`}>\n      <MouseoverTooltip text={description}>{title}</MouseoverTooltip>\n      <StatPrice>\n        {formatNumber({\n          input: value,\n          type: NumberType.FiatTokenStats,\n        })}\n      </StatPrice>\n    </StatWrapper>\n  )\n}\n\ntype StatsSectionProps = {\n  chainId: ChainId\n  address: string\n  tokenQueryData: TokenQueryData\n}\nexport default function StatsSection(props: StatsSectionProps) {\n  const { chainId, address, tokenQueryData } = props\n  const { label, infoLink } = getChainInfo(chainId)\n  const isInfoTDPEnabled = useInfoTDPEnabled()\n\n  const tokenMarketInfo = tokenQueryData?.market\n  const tokenProjectMarketInfo = tokenQueryData?.project?.markets?.[0] // aggregated market price from CoinGecko\n\n  const FDV = tokenProjectMarketInfo?.fullyDilutedValuation?.value\n  const marketCap = tokenProjectMarketInfo?.marketCap?.value\n  const TVL = tokenMarketInfo?.totalValueLocked?.value\n  const volume24H = tokenMarketInfo?.volume24H?.value\n  const priceHigh52W = tokenMarketInfo?.priceHigh52W?.value\n  const priceLow52W = tokenMarketInfo?.priceLow52W?.value\n\n  const hasStats = isInfoTDPEnabled\n    ? TVL || FDV || marketCap || volume24H\n    : TVL || volume24H || priceLow52W || priceHigh52W\n\n  if (hasStats) {\n    return (\n      <StatsWrapper data-testid=\"token-details-stats\">\n        <Header>\n          <Trans>Stats</Trans>\n        </Header>\n        <TokenStatsSection>\n          {isInfoTDPEnabled ? (\n            <>\n              <StatPair>\n                <Stat\n                  dataCy=\"tvl\"\n                  value={TVL}\n                  description={HEADER_DESCRIPTIONS[TokenSortMethod.TOTAL_VALUE_LOCKED]}\n                  title={<Trans>TVL</Trans>}\n                />\n                <Stat\n                  dataCy=\"market-cap\"\n                  value={marketCap}\n                  description={\n                    <Trans>\n                      Market capitalization is the total market value of an asset&apos;s circulating supply.\n                    </Trans>\n                  }\n                  title={<Trans>Market cap</Trans>}\n                />\n              </StatPair>\n              <StatPair>\n                <Stat\n                  dataCy=\"fdv\"\n                  value={FDV}\n                  description={HEADER_DESCRIPTIONS[TokenSortMethod.FULLY_DILUTED_VALUATION]}\n                  title={<Trans>FDV</Trans>}\n                />\n                <Stat\n                  dataCy=\"volume-24h\"\n                  value={volume24H}\n                  description={\n                    <Trans>\n                      1 day volume is the amount of the asset that has been traded on Uniswap v3 during the past 24\n                      hours.\n                    </Trans>\n                  }\n                  title={<Trans>1 day volume</Trans>}\n                />\n              </StatPair>\n            </>\n          ) : (\n            <>\n              <StatPair>\n                <Stat\n                  dataCy=\"tvl\"\n                  value={TVL}\n                  description={HEADER_DESCRIPTIONS[TokenSortMethod.TOTAL_VALUE_LOCKED]}\n                  title={<Trans>TVL</Trans>}\n                />\n                <Stat\n                  dataCy=\"volume-24h\"\n                  value={volume24H}\n                  description={\n                    <Trans>\n                      24H volume is the amount of the asset that has been traded on Uniswap v3 during the past 24 hours.\n                    </Trans>\n                  }\n                  title={<Trans>24H volume</Trans>}\n                />\n              </StatPair>\n              <StatPair>\n                <Stat dataCy=\"52w-low\" value={priceLow52W} title={<Trans>52W low</Trans>} />\n                <Stat dataCy=\"52w-high\" value={priceHigh52W} title={<Trans>52W high</Trans>} />\n              </StatPair>\n            </>\n          )}\n        </TokenStatsSection>\n      </StatsWrapper>\n    )\n  } else {\n    return UNSUPPORTED_METADATA_CHAINS.includes(chainId) ? (\n      <>\n        <Header>\n          <Trans>Stats</Trans>\n        </Header>\n        <ThemedText.BodySecondary paddingTop=\"12px\">\n          <Trans>\n            Token stats and charts for {label} are available on{' '}\n            <ExternalLink color=\"currentColor\" href={`${infoLink}tokens/${address}`}>\n              info.uniswap.org\n            </ExternalLink>\n          </Trans>\n        </ThemedText.BodySecondary>\n      </>\n    ) : (\n      <NoData>No stats available</NoData>\n    )\n  }\n}\n","import { darken } from 'polished'\nimport styled from 'styled-components'\n\nexport const NoInfoAvailable = styled.span`\n  color: ${({ theme }) => theme.neutral3};\n  font-weight: 485;\n  font-size: 16px;\n`\n\nexport const TruncateDescriptionButton = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n  font-weight: 485;\n  font-size: 0.85em;\n  padding-top: 0.5em;\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => darken(0.1, theme.neutral2)};\n    cursor: pointer;\n  }\n`\n\nexport const truncateDescription = (desc: string, maxCharacterCount = TRUNCATE_CHARACTER_COUNT) => {\n  //trim the string to the maximum length\n  let tokenDescriptionTruncated = desc.slice(0, maxCharacterCount)\n  //re-trim if we are in the middle of a word\n  tokenDescriptionTruncated = `${tokenDescriptionTruncated.slice(\n    0,\n    Math.min(tokenDescriptionTruncated.length, tokenDescriptionTruncated.lastIndexOf(' '))\n  )}...`\n  return tokenDescriptionTruncated\n}\n\nexport const TRUNCATE_CHARACTER_COUNT = 400\n","import { Trans } from '@lingui/macro'\nimport styled from 'styled-components'\nimport { CopyContractAddress, ThemedText } from 'theme/components'\nimport { shortenAddress } from 'utils/addresses'\n\nconst ContractAddressSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 0.9em;\n  gap: 4px;\n  padding: 4px 0px;\n`\n\nconst ContractAddress = styled.button`\n  display: flex;\n  color: ${({ theme }) => theme.neutral1};\n  gap: 10px;\n  align-items: center;\n  background: transparent;\n  border: none;\n  min-height: 38px;\n  padding: 0px;\n`\n\nexport default function AddressSection({ address }: { address: string }) {\n  return (\n    <ContractAddressSection>\n      <ThemedText.SubHeaderSmall>\n        <Trans>Contract address</Trans>\n      </ThemedText.SubHeaderSmall>\n      <ContractAddress>\n        <CopyContractAddress address={address} truncatedAddress={shortenAddress(address, 2, 3)} />\n      </ContractAddress>\n    </ContractAddressSection>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { Share as ShareIcon } from 'components/Icons/Share'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { chainIdToBackendName } from 'graphql/data/util'\nimport useDisableScrolling from 'hooks/useDisableScrolling'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { useRef } from 'react'\nimport { Link, Twitter } from 'react-feather'\nimport { useModalIsOpen, useToggleModal } from 'state/application/hooks'\nimport { ApplicationModal } from 'state/application/reducer'\nimport styled, { useTheme } from 'styled-components'\nimport { colors } from 'theme/colors'\nimport { ClickableStyle, CopyHelperRefType } from 'theme/components'\nimport { CopyHelper } from 'theme/components'\nimport { opacify } from 'theme/utils'\nimport { Z_INDEX } from 'theme/zIndex'\n\nconst TWITTER_WIDTH = 560\nconst TWITTER_HEIGHT = 480\n\nconst ShareButtonDisplay = styled.div`\n  display: flex;\n  position: relative;\n`\n\nconst Share = styled(ShareIcon)<{ open: boolean }>`\n  height: 24px;\n  width: 24px;\n  ${ClickableStyle}\n  ${({ open, theme }) => open && `opacity: ${theme.opacity.click} !important`};\n`\n\nconst ShareActions = styled.div`\n  position: absolute;\n  z-index: ${Z_INDEX.dropdown};\n  width: 240px;\n  top: 36px;\n  right: 0px;\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n  padding: 8px;\n  background-color: ${({ theme }) => theme.surface1};\n  border: 0.5px solid ${({ theme }) => theme.surface3};\n  box-shadow: ${({ theme }) => theme.deprecated_deepShadow};\n  border-radius: 12px;\n`\nconst ShareAction = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  border-radius: 8px;\n  font-size: 16px;\n  font-weight: 485;\n  gap: 12px;\n  height: 40px;\n  color: ${({ theme }) => theme.neutral1};\n  cursor: pointer;\n  :hover {\n    background-color: ${({ theme }) => opacify(10, theme.darkMode ? colors.gray200 : colors.gray300)};\n  }\n`\n\nexport default function ShareButton({ currency }: { currency: Currency }) {\n  const theme = useTheme()\n  const node = useRef<HTMLDivElement | null>(null)\n  const open = useModalIsOpen(ApplicationModal.SHARE)\n  const toggleShare = useToggleModal(ApplicationModal.SHARE)\n  useOnClickOutside(node, open ? toggleShare : undefined)\n  const positionX = (window.screen.width - TWITTER_WIDTH) / 2\n  const positionY = (window.screen.height - TWITTER_HEIGHT) / 2\n  const address = currency.isNative ? NATIVE_CHAIN_ID : currency.wrapped.address\n  useDisableScrolling(open)\n\n  const shareTweet = () => {\n    toggleShare()\n    window.open(\n      `https://twitter.com/intent/tweet?text=Check%20out%20${currency.name}%20(${\n        currency.symbol\n      })%20https://app.uniswap.org/%23/tokens/${chainIdToBackendName(\n        currency.chainId\n      ).toLowerCase()}/${address}%20via%20@uniswap`,\n      'newwindow',\n      `left=${positionX}, top=${positionY}, width=${TWITTER_WIDTH}, height=${TWITTER_HEIGHT}`\n    )\n  }\n\n  const copyHelperRef = useRef<CopyHelperRefType>(null)\n\n  return (\n    <ShareButtonDisplay ref={node}>\n      <Share onClick={toggleShare} aria-label=\"ShareOptions\" open={open} />\n      {open && (\n        <ShareActions>\n          <ShareAction onClick={() => copyHelperRef.current?.forceCopy()}>\n            <CopyHelper\n              InitialIcon={Link}\n              color={theme.neutral1}\n              iconPosition=\"left\"\n              gap={12}\n              toCopy={window.location.href}\n              ref={copyHelperRef}\n            >\n              <Trans>Copy Link</Trans>\n            </CopyHelper>\n          </ShareAction>\n\n          <ShareAction onClick={shareTweet}>\n            <Twitter color={theme.neutral1} size={20} strokeWidth={1.5} />\n            <Trans>Share to Twitter</Trans>\n          </ShareAction>\n        </ShareActions>\n      )}\n    </ShareButtonDisplay>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { displayWarningLabel, getWarningCopy, TOKEN_SAFETY_ARTICLE, Warning } from 'constants/tokenSafety'\nimport { useTokenWarningColor, useTokenWarningTextColor } from 'hooks/useTokenWarningColor'\nimport { AlertTriangle, Slash } from 'react-feather'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport { ExternalLink } from 'theme/components'\n\nconst Label = styled.div<{ color: string; backgroundColor: string }>`\n  width: 100%;\n  padding: 12px 20px 16px;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  border-radius: 16px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  color: ${({ color }) => color};\n`\n\nconst TitleRow = styled.div`\n  align-items: center;\n  font-weight: 535;\n  display: inline-flex;\n`\n\nconst Title = styled(Text)`\n  font-weight: 535;\n  font-size: 16px;\n  line-height: 24px;\n  margin-left: 7px;\n`\n\nconst DetailsRow = styled.div`\n  margin-top: 8px;\n  font-size: 12px;\n  line-height: 16px;\n  color: ${({ theme }) => theme.neutral2};\n`\n\nconst StyledLink = styled(ExternalLink)`\n  color: ${({ theme }) => theme.accent1};\n\n  font-weight: 535;\n`\n\ntype TokenSafetyMessageProps = {\n  warning: Warning\n  tokenAddress: string\n}\n\nexport default function TokenSafetyMessage({ warning, tokenAddress }: TokenSafetyMessageProps) {\n  const backgroundColor = useTokenWarningColor(warning.level)\n  const textColor = useTokenWarningTextColor(warning.level)\n  const { heading, description } = getWarningCopy(warning)\n\n  return (\n    <Label data-cy=\"token-safety-message\" color={textColor} backgroundColor={backgroundColor}>\n      {displayWarningLabel(warning) && (\n        <TitleRow>\n          {warning.canProceed ? <AlertTriangle size=\"16px\" /> : <Slash size=\"16px\" />}\n          <Title marginLeft=\"7px\">{warning.message}</Title>\n        </TitleRow>\n      )}\n\n      <DetailsRow>\n        {heading}\n        {Boolean(heading) && ' '}\n        {description}\n        {Boolean(description) && ' '}\n        {tokenAddress && (\n          <StyledLink href={TOKEN_SAFETY_ARTICLE}>\n            <Trans>Learn more</Trans>\n          </StyledLink>\n        )}\n      </DetailsRow>\n    </Label>\n  )\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { Chain } from 'graphql/data/__generated__/types-and-hooks'\nimport { chainIdToBackendName } from 'graphql/data/util'\nimport { useEffect, useRef } from 'react'\n\nexport const useOnGlobalChainSwitch = (callback: (chain: Chain) => void) => {\n  const { chainId: connectedChainId } = useWeb3React()\n  const globalChainName = chainIdToBackendName(connectedChainId)\n  const prevGlobalChainRef = useRef(globalChainName)\n  useEffect(() => {\n    if (prevGlobalChainRef.current !== globalChainName) {\n      callback(globalChainName)\n    }\n    prevGlobalChainRef.current = globalChainName\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [globalChainName])\n}\n","import { Trans } from '@lingui/macro'\nimport { ChainId, Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { PortfolioLogo } from 'components/AccountDrawer/MiniPortfolio/PortfolioLogo'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { asSupportedChain } from 'constants/chains'\nimport { useInfoExplorePageEnabled } from 'featureFlags/flags/infoExplore'\nimport { useInfoTDPEnabled } from 'featureFlags/flags/infoTDP'\nimport { Chain, PortfolioTokenBalancePartsFragment } from 'graphql/data/__generated__/types-and-hooks'\nimport { getTokenDetailsURL, gqlToCurrency, supportedChainIdFromGQLChain } from 'graphql/data/util'\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice'\nimport useCurrencyBalance from 'lib/hooks/useCurrencyBalance'\nimport { useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nimport { MultiChainMap } from '.'\n\nconst BalancesCard = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  color: ${({ theme }) => theme.neutral1};\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  height: fit-content;\n  ${({ isInfoTDPEnabled }) => !isInfoTDPEnabled && 'padding: 16px;'}\n  width: 100%;\n\n  // 768 hardcoded to match NFT-redesign navbar breakpoints\n  // src/nft/css/sprinkles.css.ts\n  // change to match theme breakpoints when this navbar is updated\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`\nconst BalanceSection = styled.div`\n  height: fit-content;\n  width: 100%;\n`\nconst BalanceRow = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  margin-top: 12px;\n`\nconst BalanceItem = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst BalanceContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 8px;\n  flex: 1;\n`\n\nconst BalanceAmountsContainer = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  ${({ isInfoTDPEnabled }) => isInfoTDPEnabled && 'margin-left: 12px;'}\n`\n\nconst StyledNetworkLabel = styled.div`\n  color: ${({ color }) => color};\n  font-size: 12px;\n  line-height: 16px;\n`\n\ninterface BalanceProps {\n  currency?: Currency\n  chainId?: ChainId\n  balance?: CurrencyAmount<Currency> // TODO(WEB-3026): only used for pre-Info-project calculations, should remove after project goes live\n  gqlBalance?: PortfolioTokenBalancePartsFragment\n  onClick?: () => void\n}\nconst Balance = ({ currency, chainId = ChainId.MAINNET, balance, gqlBalance, onClick }: BalanceProps) => {\n  const { formatCurrencyAmount, formatNumber } = useFormatter()\n  const { label: chainName, color } = getChainInfo(asSupportedChain(chainId) ?? ChainId.MAINNET)\n  const currencies = useMemo(() => [currency], [currency])\n  const isInfoTDPEnabled = useInfoExplorePageEnabled()\n\n  const formattedBalance = formatCurrencyAmount({\n    amount: balance,\n    type: NumberType.TokenNonTx,\n  })\n  const formattedUsdValue = formatCurrencyAmount({\n    amount: useStablecoinValue(balance),\n    type: NumberType.PortfolioBalance,\n  })\n  const formattedGqlBalance = formatNumber({\n    input: gqlBalance?.quantity,\n    type: NumberType.TokenNonTx,\n  })\n  const formattedUsdGqlValue = formatNumber({\n    input: gqlBalance?.denominatedValue?.value,\n    type: NumberType.PortfolioBalance,\n  })\n\n  if (isInfoTDPEnabled) {\n    return (\n      <BalanceRow onClick={onClick}>\n        <PortfolioLogo currencies={currencies} chainId={chainId} size=\"2rem\" />\n        <BalanceAmountsContainer isInfoTDPEnabled>\n          <BalanceItem>\n            <ThemedText.BodyPrimary>{formattedUsdGqlValue}</ThemedText.BodyPrimary>\n          </BalanceItem>\n          <BalanceItem>\n            <ThemedText.BodySecondary>{formattedGqlBalance}</ThemedText.BodySecondary>\n          </BalanceItem>\n        </BalanceAmountsContainer>\n      </BalanceRow>\n    )\n  } else {\n    return (\n      <BalanceRow>\n        <PortfolioLogo currencies={currencies} chainId={chainId} size=\"2rem\" />\n        <BalanceContainer>\n          <BalanceAmountsContainer>\n            <BalanceItem>\n              <ThemedText.SubHeader>\n                {formattedBalance} {currency?.symbol}\n              </ThemedText.SubHeader>\n            </BalanceItem>\n            <BalanceItem>\n              <ThemedText.BodyPrimary>{formattedUsdValue}</ThemedText.BodyPrimary>\n            </BalanceItem>\n          </BalanceAmountsContainer>\n          <StyledNetworkLabel color={color}>{chainName}</StyledNetworkLabel>\n        </BalanceContainer>\n      </BalanceRow>\n    )\n  }\n}\n\nconst ConnectedChainBalanceSummary = ({\n  connectedChainBalance,\n}: {\n  connectedChainBalance?: CurrencyAmount<Currency>\n}) => {\n  const { chainId: connectedChainId } = useWeb3React()\n  if (!connectedChainId || !connectedChainBalance || !connectedChainBalance.greaterThan(0)) return null\n  const token = connectedChainBalance.currency\n  const { label: chainName } = getChainInfo(asSupportedChain(connectedChainId) ?? ChainId.MAINNET)\n  return (\n    <BalanceSection>\n      <ThemedText.SubHeaderSmall color=\"neutral1\">\n        <Trans>Your balance on {chainName}</Trans>\n      </ThemedText.SubHeaderSmall>\n      <Balance currency={token} chainId={connectedChainId} balance={connectedChainBalance} />\n    </BalanceSection>\n  )\n}\n\nconst PageChainBalanceSummary = ({ pageChainBalance }: { pageChainBalance?: PortfolioTokenBalancePartsFragment }) => {\n  if (!pageChainBalance || !pageChainBalance.token) return null\n  const currency = gqlToCurrency(pageChainBalance.token)\n  return (\n    <BalanceSection>\n      <ThemedText.HeadlineSmall color=\"neutral1\">\n        <Trans>Your balance</Trans>\n      </ThemedText.HeadlineSmall>\n      <Balance currency={currency} chainId={currency?.chainId} gqlBalance={pageChainBalance} />\n    </BalanceSection>\n  )\n}\n\nconst OtherChainsBalanceSummary = ({\n  otherChainBalances,\n  hasPageChainBalance,\n}: {\n  otherChainBalances: readonly PortfolioTokenBalancePartsFragment[]\n  hasPageChainBalance: boolean\n}) => {\n  const navigate = useNavigate()\n  const isInfoExplorePageEnabled = useInfoExplorePageEnabled()\n\n  if (!otherChainBalances.length) return null\n  return (\n    <BalanceSection>\n      {hasPageChainBalance ? (\n        <ThemedText.SubHeaderSmall>\n          <Trans>On other networks</Trans>\n        </ThemedText.SubHeaderSmall>\n      ) : (\n        <ThemedText.HeadlineSmall>\n          <Trans>Balance on other networks</Trans>\n        </ThemedText.HeadlineSmall>\n      )}\n      {otherChainBalances.map((balance) => {\n        const currency = balance.token && gqlToCurrency(balance.token)\n        const chainId = (balance.token && supportedChainIdFromGQLChain(balance.token.chain)) ?? ChainId.MAINNET\n        return (\n          <Balance\n            key={balance.id}\n            currency={currency}\n            chainId={chainId}\n            gqlBalance={balance}\n            onClick={() =>\n              navigate(\n                getTokenDetailsURL({\n                  address: balance.token?.address,\n                  chain: balance.token?.chain ?? Chain.Ethereum,\n                  isInfoExplorePageEnabled,\n                })\n              )\n            }\n          />\n        )\n      })}\n    </BalanceSection>\n  )\n}\n\nexport default function BalanceSummary({\n  currency,\n  chain,\n  multiChainMap,\n}: {\n  currency: Currency\n  chain: Chain\n  multiChainMap: MultiChainMap\n}) {\n  const { account } = useWeb3React()\n\n  const isInfoTDPEnabled = useInfoTDPEnabled()\n\n  const connectedChainBalance = useCurrencyBalance(account, currency)\n\n  const pageChainBalance = multiChainMap[chain].balance\n  const otherChainBalances: PortfolioTokenBalancePartsFragment[] = []\n  for (const [key, value] of Object.entries(multiChainMap)) {\n    if (key !== chain && value.balance !== undefined) {\n      otherChainBalances.push(value.balance)\n    }\n  }\n  const hasBalances = pageChainBalance || Boolean(otherChainBalances.length)\n\n  if (!account || !hasBalances) {\n    return null\n  }\n  return (\n    <BalancesCard isInfoTDPEnabled={isInfoTDPEnabled}>\n      {!isInfoTDPEnabled && <ConnectedChainBalanceSummary connectedChainBalance={connectedChainBalance} />}\n      {isInfoTDPEnabled && (\n        <>\n          <PageChainBalanceSummary pageChainBalance={pageChainBalance} />\n          <OtherChainsBalanceSummary otherChainBalances={otherChainBalances} hasPageChainBalance={!!pageChainBalance} />\n        </>\n      )}\n    </BalancesCard>\n  )\n}\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgEye(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.75 12C14.75 13.517 13.517 14.75 12 14.75C10.483 14.75 9.25004 13.517 9.25004 12C9.25004 11.651 9.32196 11.32 9.44096 11.012C9.63496 11.166 9.86903 11.272 10.136 11.272C10.763 11.272 11.272 10.763 11.272 10.136C11.272 9.86899 11.166 9.63492 11.012 9.44092C11.32 9.32192 11.651 9.25 12 9.25C13.517 9.25 14.75 10.483 14.75 12ZM20.5921 13.4771C19.3651 15.5311 16.609 19 12 19C7.39104 19 4.635 15.5311 3.408 13.4771C2.864 12.5671 2.864 11.4329 3.408 10.5229C4.635 8.46895 7.39104 5 12 5C16.609 5 19.3651 8.46895 20.5921 10.5229C21.1361 11.4329 21.1361 12.5671 20.5921 13.4771ZM16.25 12C16.25 9.657 14.344 7.75 12 7.75C9.65604 7.75 7.75004 9.657 7.75004 12C7.75004 14.343 9.65604 16.25 12 16.25C14.344 16.25 16.25 14.343 16.25 12Z\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEye);\nexport default __webpack_public_path__ + \"static/media/eye.0b7e1ea0bf8a719e75d97cfc5cd4e72d.svg\";\nexport { ForwardRef as ReactComponent };","import { Trans } from '@lingui/macro'\nimport { ChainId } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { ButtonPrimary } from 'components/Button'\nimport { getChainInfo } from 'constants/chainInfo'\nimport useSelectChain from 'hooks/useSelectChain'\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { ReactComponent as EyeIcon } from '../../../assets/svg/eye.svg'\n\nconst InvalidDetailsContainer = styled.div`\n  padding-top: 128px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst InvalidDetailsText = styled.span`\n  margin-top: 28px;\n  margin-bottom: 20px;\n\n  text-align: center;\n\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 20px;\n  font-weight: 535;\n  line-height: 28px;\n`\n\nconst TokenExploreButton = styled(ButtonPrimary)`\n  width: fit-content;\n  padding: 12px 16px;\n  border-radius: 12px;\n\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 16px;\n  font-weight: 535;\n`\n\nexport default function InvalidTokenDetails({\n  pageChainId,\n  isInvalidAddress,\n}: {\n  pageChainId: ChainId\n  isInvalidAddress?: boolean\n}) {\n  const { chainId } = useWeb3React()\n  const navigate = useNavigate()\n  const selectChain = useSelectChain()\n\n  // if the token's address is valid and the chains match, it's a non-existant token\n  const isNonExistantToken = !isInvalidAddress && pageChainId === chainId\n\n  const connectedChainLabel = chainId ? getChainInfo(chainId)?.label : undefined\n\n  return (\n    <InvalidDetailsContainer>\n      <EyeIcon />\n      {isInvalidAddress || isNonExistantToken ? (\n        <>\n          <InvalidDetailsText>\n            <Trans>This token doesn&apos;t exist</Trans>\n          </InvalidDetailsText>\n          <TokenExploreButton onClick={() => navigate('/tokens')}>\n            <ThemedText.SubHeader>\n              <Trans>Explore tokens</Trans>\n            </ThemedText.SubHeader>\n          </TokenExploreButton>\n        </>\n      ) : (\n        <>\n          {connectedChainLabel && (\n            <InvalidDetailsText>\n              <Trans>This token doesn&apos;t exist on {connectedChainLabel}</Trans>\n            </InvalidDetailsText>\n          )}\n          <TokenExploreButton onClick={() => selectChain(pageChainId)}>\n            <ThemedText.SubHeader>\n              <Trans>Switch to {getChainInfo(pageChainId).label}</Trans>\n            </ThemedText.SubHeader>\n          </TokenExploreButton>\n        </>\n      )}\n    </InvalidDetailsContainer>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { useInfoTDPEnabled } from 'featureFlags/flags/infoTDP'\nimport { PortfolioTokenBalancePartsFragment } from 'graphql/data/__generated__/types-and-hooks'\nimport { CHAIN_ID_TO_BACKEND_NAME } from 'graphql/data/util'\nimport { useStablecoinValue } from 'hooks/useStablecoinPrice'\nimport useCurrencyBalance from 'lib/hooks/useCurrencyBalance'\nimport styled, { css } from 'styled-components'\nimport { StyledInternalLink, ThemedText } from 'theme/components'\nimport { NumberType, useFormatter } from 'utils/formatNumbers'\n\nconst Wrapper = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  align-content: center;\n  align-items: center;\n  background-color: ${({ theme }) => theme.surface1};\n  border: 1px solid ${({ theme }) => theme.surface3};\n  color: ${({ theme }) => theme.neutral2};\n  display: flex;\n  flex-direction: row;\n  font-weight: 535;\n  font-size: 14px;\n  height: fit-content;\n  justify-content: space-between;\n  left: 0;\n  line-height: 20px;\n  position: fixed;\n\n  ${({ isInfoTDPEnabled }) =>\n    isInfoTDPEnabled\n      ? css`\n          border-radius: 20px;\n          bottom: 56px;\n          margin: 8px;\n          padding: 12px 32px;\n          width: calc(100vw - 16px);\n        `\n      : css`\n          border-bottom: none;\n          border-radius: 20px 20px 0px 0px;\n          bottom: 52px;\n          padding: 12px 16px;\n          width: 100%;\n        `}\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.md}px) {\n    bottom: 0px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.lg}px) {\n    display: none;\n  }\n`\nconst BalanceValue = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 20px;\n  line-height: ${({ isInfoTDPEnabled }) => (isInfoTDPEnabled ? '20px' : '28px')};\n  display: flex;\n  gap: 8px;\n`\nconst Balance = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  align-items: ${({ isInfoTDPEnabled }) => (isInfoTDPEnabled ? 'flex-end' : 'center')};\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 8px;\n`\nconst BalanceInfo = styled.div<{ isInfoTDPEnabled?: boolean }>`\n  display: flex;\n  flex: 10 1 auto;\n  flex-direction: column;\n  justify-content: flex-start;\n  ${({ isInfoTDPEnabled }) => isInfoTDPEnabled && 'gap: 6px;'}\n`\nconst FiatValue = styled(ThemedText.Caption)<{ isInfoTDPEnabled?: boolean }>`\n  ${({ isInfoTDPEnabled, theme }) => !isInfoTDPEnabled && `color: ${theme.neutral2};`}\n  font-size: 12px;\n  line-height: 16px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint.sm}px) {\n    line-height: 24px;\n  }\n`\nconst SwapButton = styled(StyledInternalLink)<{ isInfoTDPEnabled?: boolean }>`\n  background-color: ${({ theme }) => theme.accent1};\n  border: none;\n  border-radius: ${({ isInfoTDPEnabled }) => (isInfoTDPEnabled ? '22px' : '12px')};\n  color: ${({ theme }) => theme.deprecated_accentTextLightPrimary};\n  display: flex;\n  flex: 1 1 auto;\n  padding: 12px 16px;\n  font-size: ${({ isInfoTDPEnabled }) => (isInfoTDPEnabled ? '16px' : '1em')};\n  font-weight: 535;\n  height: 44px;\n  justify-content: center;\n  margin: auto;\n  max-width: 100vw;\n`\n\nexport default function MobileBalanceSummaryFooter({\n  currency,\n  pageChainBalance,\n}: {\n  currency: Currency\n  pageChainBalance?: PortfolioTokenBalancePartsFragment\n}) {\n  const isInfoTDPEnabled = useInfoTDPEnabled()\n\n  const { account } = useWeb3React()\n  const balance = useCurrencyBalance(account, currency)\n  const { formatCurrencyAmount, formatNumber } = useFormatter()\n  const formattedBalance = formatCurrencyAmount({\n    amount: balance,\n    type: NumberType.TokenNonTx,\n  })\n  const formattedUsdValue = formatCurrencyAmount({\n    amount: useStablecoinValue(balance),\n    type: NumberType.FiatTokenStats,\n  })\n  const formattedGqlBalance = formatNumber({\n    input: pageChainBalance?.quantity,\n    type: NumberType.TokenNonTx,\n  })\n  const formattedUsdGqlValue = formatNumber({\n    input: pageChainBalance?.denominatedValue?.value,\n    type: NumberType.PortfolioBalance,\n  })\n  const chain = CHAIN_ID_TO_BACKEND_NAME[currency.chainId].toLowerCase()\n\n  return (\n    <Wrapper isInfoTDPEnabled={isInfoTDPEnabled}>\n      {Boolean(account && (isInfoTDPEnabled ? pageChainBalance : balance)) && (\n        <BalanceInfo isInfoTDPEnabled={isInfoTDPEnabled}>\n          {isInfoTDPEnabled ? <Trans>Your balance</Trans> : <Trans>Your {currency.symbol} balance</Trans>}\n          <Balance isInfoTDPEnabled={isInfoTDPEnabled}>\n            <BalanceValue isInfoTDPEnabled={isInfoTDPEnabled}>\n              {isInfoTDPEnabled ? formattedGqlBalance : formattedBalance} {currency.symbol}\n            </BalanceValue>\n            <FiatValue isInfoTDPEnabled={isInfoTDPEnabled}>\n              {isInfoTDPEnabled ? `(${formattedUsdGqlValue})` : formattedUsdValue}\n            </FiatValue>\n          </Balance>\n        </BalanceInfo>\n      )}\n      <SwapButton\n        isInfoTDPEnabled={isInfoTDPEnabled}\n        to={`/swap?chainName=${chain}&outputCurrency=${currency.isNative ? NATIVE_CHAIN_ID : currency.address}`}\n      >\n        <Trans>Swap</Trans>\n      </SwapButton>\n    </Wrapper>\n  )\n}\n","import { ComponentProps } from 'react'\n\nexport const Globe = (props: ComponentProps<'svg'>) => (\n  <svg\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    stroke=\"transparent\"\n    {...props}\n  >\n    <path\n      d=\"M5.12245 9.5625C5.23495 11.8725 6.01495 14.2275 7.37245 16.32C4.19245 15.615 1.76996 12.8925 1.52246 9.5625H5.12245ZM7.37245 1.67999C4.19245 2.38499 1.76996 5.1075 1.52246 8.4375H5.12245C5.23495 6.1275 6.01495 3.77249 7.37245 1.67999ZM9.14997 1.5H8.84995L8.62496 1.82249C7.19996 3.84749 6.36745 6.1725 6.24745 8.4375H11.7525C11.6325 6.1725 10.8 3.84749 9.37496 1.82249L9.14997 1.5ZM6.24745 9.5625C6.36745 11.8275 7.19996 14.1525 8.62496 16.1775L8.84995 16.5H9.14997L9.37496 16.1775C10.8 14.1525 11.6325 11.8275 11.7525 9.5625H6.24745ZM12.8775 9.5625C12.765 11.8725 11.985 14.2275 10.6275 16.32C13.8075 15.615 16.23 12.8925 16.4775 9.5625H12.8775ZM16.4775 8.4375C16.23 5.1075 13.8075 2.38499 10.6275 1.67999C11.985 3.77249 12.765 6.1275 12.8775 8.4375H16.4775Z\"\n      fill={props.fill ?? '#607BEE'}\n    />\n  </svg>\n)\n","import { ComponentProps } from 'react'\n\nexport const TwitterXLogo = (props: ComponentProps<'svg'>) => (\n  <svg\n    width=\"18\"\n    height=\"18\"\n    viewBox=\"0 0 18 18\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    stroke=\"transparent\"\n    {...props}\n  >\n    <path\n      d=\"M12.8761 3H14.9451L10.4251 8.16609L15.7425 15.196H11.579L8.31797 10.9324L4.58662 15.196H2.51644L7.35104 9.67026L2.25 3H6.51922L9.46689 6.89708L12.8761 3ZM12.15 13.9576H13.2964L5.89628 4.17332H4.66605L12.15 13.9576Z\"\n      fill={props.fill ?? '#607BEE'}\n    />\n  </svg>\n)\n","import { Trans } from '@lingui/macro'\nimport { ChainId } from '@uniswap/sdk-core'\nimport Column from 'components/Column'\nimport { EtherscanLogo } from 'components/Icons/Etherscan'\nimport { Globe } from 'components/Icons/Globe'\nimport { TwitterXLogo } from 'components/Icons/TwitterX'\nimport Row from 'components/Row'\nimport { FOTTooltipContent } from 'components/swap/SwapLineItem'\nimport { NoInfoAvailable, truncateDescription, TruncateDescriptionButton } from 'components/Tokens/TokenDetails/shared'\nimport { MouseoverTooltip, TooltipSize } from 'components/Tooltip'\nimport { useTokenProjectQuery } from 'graphql/data/__generated__/types-and-hooks'\nimport { chainIdToBackendName } from 'graphql/data/util'\nimport useCopyClipboard from 'hooks/useCopyClipboard'\nimport { useSwapTaxes } from 'hooks/useSwapTaxes'\nimport { useCallback, useReducer } from 'react'\nimport { Copy } from 'react-feather'\nimport styled, { useTheme } from 'styled-components'\nimport { BREAKPOINTS } from 'theme'\nimport { ClickableStyle, EllipsisStyle, ExternalLink, ThemedText } from 'theme/components'\nimport { opacify } from 'theme/utils'\nimport { shortenAddress } from 'utils'\nimport { useFormatter } from 'utils/formatNumbers'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\nimport { getNativeTokenDBAddress } from 'utils/nativeTokens'\n\nconst TokenInfoSection = styled(Column)`\n  gap: 16px;\n  width: 100%;\n\n  @media (max-width: ${BREAKPOINTS.lg - 1}px) and (min-width: ${BREAKPOINTS.sm}px) {\n    max-width: 45%;\n  }\n`\n\nconst TokenNameRow = styled(Row)`\n  gap: 8px;\n  width: 100%;\n`\n\nconst TokenButtonRow = styled(TokenNameRow)`\n  flex-wrap: wrap;\n`\n\nconst TokenInfoButton = styled(Row)<{ tokenColor: string }>`\n  gap: 8px;\n  padding: 8px 12px;\n  border-radius: 20px;\n  color: ${({ tokenColor }) => tokenColor};\n  background-color: ${({ tokenColor }) => opacify(12, tokenColor)};\n  font-size: 14px;\n  font-weight: 535;\n  line-height: 16px;\n  width: max-content;\n  ${ClickableStyle}\n`\n\nconst TokenDescriptionContainer = styled(ThemedText.BodyPrimary)`\n  ${EllipsisStyle}\n  max-width: 100%;\n  // max-height: fit-content;\n  line-height: 24px;\n  white-space: pre-wrap;\n`\n\nconst DescriptionVisibilityWrapper = styled.span<{ $visible: boolean }>`\n  display: ${({ $visible }) => ($visible ? 'inline' : 'none')};\n`\n\nconst TRUNCATE_CHARACTER_COUNT = 75\n\nexport function TokenDescription({\n  tokenAddress,\n  chainId = ChainId.MAINNET,\n  isNative = false,\n  characterCount = TRUNCATE_CHARACTER_COUNT,\n}: {\n  tokenAddress: string\n  chainId?: number\n  isNative?: boolean\n  characterCount?: number\n}) {\n  const color = useTheme().neutral1\n  const chainName = chainIdToBackendName(chainId)\n  const { data: tokenQuery } = useTokenProjectQuery({\n    variables: {\n      address: isNative ? getNativeTokenDBAddress(chainName) : tokenAddress,\n      chain: chainName,\n    },\n    errorPolicy: 'all',\n  })\n  const tokenProject = tokenQuery?.token?.project\n  const description = tokenProject?.description\n  const explorerUrl = getExplorerLink(\n    chainId,\n    tokenAddress,\n    isNative ? ExplorerDataType.NATIVE : ExplorerDataType.TOKEN\n  )\n\n  const [, setCopied] = useCopyClipboard()\n  const copy = useCallback(() => {\n    setCopied(tokenAddress)\n  }, [tokenAddress, setCopied])\n\n  const [isDescriptionTruncated, toggleIsDescriptionTruncated] = useReducer((x) => !x, true)\n  const truncatedDescription = truncateDescription(description ?? '', characterCount)\n  const shouldTruncate = !!description && description.length > characterCount\n  const showTruncatedDescription = shouldTruncate && isDescriptionTruncated\n  const { inputTax: sellFee, outputTax: buyFee } = useSwapTaxes(tokenAddress, tokenAddress)\n  const { formatPercent } = useFormatter()\n  const { sellFeeString, buyFeeString } = {\n    sellFeeString: formatPercent(sellFee),\n    buyFeeString: formatPercent(buyFee),\n  }\n  const hasFee = Boolean(parseFloat(sellFeeString)) || Boolean(parseFloat(buyFee.toFixed(2)))\n  const sameFee = sellFeeString === buyFeeString\n\n  return (\n    <TokenInfoSection>\n      <ThemedText.HeadlineSmall>\n        <Trans>Info</Trans>\n      </ThemedText.HeadlineSmall>\n      <TokenButtonRow>\n        {!isNative && (\n          <TokenInfoButton tokenColor={color} onClick={copy}>\n            <Copy width=\"18px\" height=\"18px\" color={color} />\n            {shortenAddress(tokenAddress)}\n          </TokenInfoButton>\n        )}\n        <ExternalLink href={explorerUrl}>\n          <TokenInfoButton tokenColor={color}>\n            <EtherscanLogo width=\"18px\" height=\"18px\" fill={color} />\n            {chainId === ChainId.MAINNET ? <Trans>Etherscan</Trans> : <Trans>Explorer</Trans>}\n          </TokenInfoButton>\n        </ExternalLink>\n        {!!tokenProject?.homepageUrl && (\n          <ExternalLink href={tokenProject.homepageUrl}>\n            <TokenInfoButton tokenColor={color}>\n              <Globe width=\"18px\" height=\"18px\" fill={color} />\n              <Trans>Website</Trans>\n            </TokenInfoButton>\n          </ExternalLink>\n        )}\n        {!!tokenProject?.twitterName && (\n          <ExternalLink href={`https://x.com/${tokenProject.twitterName}`}>\n            <TokenInfoButton tokenColor={color}>\n              <TwitterXLogo width=\"18px\" height=\"18px\" fill={color} />\n              <Trans>Twitter</Trans>\n            </TokenInfoButton>\n          </ExternalLink>\n        )}\n      </TokenButtonRow>\n      <TokenDescriptionContainer>\n        {!description && (\n          <NoInfoAvailable>\n            <Trans>No token information available</Trans>\n          </NoInfoAvailable>\n        )}\n        {description && (\n          <>\n            <DescriptionVisibilityWrapper data-testid=\"token-description-full\" $visible={!showTruncatedDescription}>\n              {description}\n            </DescriptionVisibilityWrapper>\n            <DescriptionVisibilityWrapper data-testid=\"token-description-truncated\" $visible={showTruncatedDescription}>\n              {truncatedDescription}\n            </DescriptionVisibilityWrapper>\n          </>\n        )}\n        {shouldTruncate && (\n          <TruncateDescriptionButton\n            onClick={toggleIsDescriptionTruncated}\n            data-testid=\"token-description-show-more-button\"\n          >\n            {isDescriptionTruncated ? <Trans>Show more</Trans> : <Trans>Hide</Trans>}\n          </TruncateDescriptionButton>\n        )}\n      </TokenDescriptionContainer>\n      {hasFee && (\n        <MouseoverTooltip\n          placement=\"left\"\n          size={TooltipSize.Small}\n          text={\n            <ThemedText.Caption color=\"neutral2\">\n              <FOTTooltipContent />\n            </ThemedText.Caption>\n          }\n        >\n          <Column gap=\"sm\">\n            {sameFee ? (\n              <ThemedText.BodyPrimary>\n                {tokenQuery?.token?.symbol}&nbsp;\n                <Trans>fee:</Trans>&nbsp;{sellFeeString}\n              </ThemedText.BodyPrimary>\n            ) : (\n              <>\n                <ThemedText.BodyPrimary>\n                  {tokenQuery?.token?.symbol}&nbsp;\n                  <Trans>buy fee:</Trans>&nbsp;{buyFeeString}\n                </ThemedText.BodyPrimary>{' '}\n                <ThemedText.BodyPrimary>\n                  {tokenQuery?.token?.symbol}&nbsp;\n                  <Trans>sell fee:</Trans>&nbsp;{sellFeeString}\n                </ThemedText.BodyPrimary>{' '}\n              </>\n            )}\n          </Column>\n        </MouseoverTooltip>\n      )}\n    </TokenInfoSection>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { InterfacePageName } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { Trace } from 'analytics'\nimport { PortfolioLogo } from 'components/AccountDrawer/MiniPortfolio/PortfolioLogo'\nimport { useCachedPortfolioBalancesQuery } from 'components/PrefetchBalancesWrapper/PrefetchBalancesWrapper'\nimport { AboutSection } from 'components/Tokens/TokenDetails/About'\nimport AddressSection from 'components/Tokens/TokenDetails/AddressSection'\nimport { BreadcrumbNav, BreadcrumbNavLink } from 'components/Tokens/TokenDetails/BreadcrumbNavLink'\nimport ChartSection from 'components/Tokens/TokenDetails/ChartSection'\nimport ShareButton from 'components/Tokens/TokenDetails/ShareButton'\nimport TokenDetailsSkeleton, {\n  Hr,\n  LeftPanel,\n  RightPanel,\n  TokenDetailsLayout,\n  TokenInfoContainer,\n  TokenNameCell,\n} from 'components/Tokens/TokenDetails/Skeleton'\nimport StatsSection from 'components/Tokens/TokenDetails/StatsSection'\nimport TokenSafetyMessage from 'components/TokenSafety/TokenSafetyMessage'\nimport TokenSafetyModal from 'components/TokenSafety/TokenSafetyModal'\nimport { NATIVE_CHAIN_ID, nativeOnChain } from 'constants/tokens'\nimport { checkWarning } from 'constants/tokenSafety'\nimport { useInfoExplorePageEnabled } from 'featureFlags/flags/infoExplore'\nimport { useInfoTDPEnabled } from 'featureFlags/flags/infoTDP'\nimport {\n  Chain,\n  PortfolioTokenBalancePartsFragment,\n  TokenPriceQuery,\n  TokenQuery,\n} from 'graphql/data/__generated__/types-and-hooks'\nimport { TokenQueryData } from 'graphql/data/Token'\nimport { getTokenDetailsURL, gqlToCurrency, InterfaceGqlChain, supportedChainIdFromGQLChain } from 'graphql/data/util'\nimport { useOnGlobalChainSwitch } from 'hooks/useGlobalChainSwitch'\nimport { UNKNOWN_TOKEN_SYMBOL, useTokenFromActiveNetwork } from 'lib/hooks/useCurrency'\nimport { Swap } from 'pages/Swap'\nimport { useCallback, useMemo, useState, useTransition } from 'react'\nimport { ArrowLeft, ChevronRight } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport { Field } from 'state/swap/actions'\nimport { SwapState } from 'state/swap/reducer'\nimport styled from 'styled-components'\nimport { CopyContractAddress } from 'theme/components'\nimport { isAddress, shortenAddress } from 'utils'\nimport { addressesAreEquivalent } from 'utils/addressesAreEquivalent'\n\nimport BalanceSummary from './BalanceSummary'\nimport InvalidTokenDetails from './InvalidTokenDetails'\nimport MobileBalanceSummaryFooter from './MobileBalanceSummaryFooter'\nimport { TokenDescription } from './TokenDescription'\n\nconst TokenSymbol = styled.span`\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.neutral2};\n  margin-left: 8px;\n`\nconst TokenActions = styled.div`\n  display: flex;\n  gap: 16px;\n  color: ${({ theme }) => theme.neutral2};\n`\nconst TokenTitle = styled.div`\n  display: flex;\n  @media screen and (max-width: ${({ theme }) => theme.breakpoint.md}px) {\n    display: inline;\n  }\n`\n\nfunction useOnChainToken(address: string | undefined, skip: boolean) {\n  const token = useTokenFromActiveNetwork(skip || !address ? undefined : address)\n\n  if (skip || !address || (token && token?.symbol === UNKNOWN_TOKEN_SYMBOL)) {\n    return undefined\n  } else {\n    return token\n  }\n}\n\n// Selects most relevant token based on data available, preferring native > query > on-chain\n// Token will be null if still loading from on-chain, and undefined if unavailable\nfunction useRelevantToken(\n  address: string | undefined,\n  pageChainId: number,\n  tokenQueryData: TokenQueryData | undefined\n) {\n  const { chainId: activeChainId } = useWeb3React()\n  const queryToken = useMemo(() => {\n    if (!address) return undefined\n    if (address === NATIVE_CHAIN_ID) return nativeOnChain(pageChainId)\n    if (tokenQueryData) return gqlToCurrency(tokenQueryData)\n    return undefined\n  }, [pageChainId, address, tokenQueryData])\n  // fetches on-chain token if query data is missing and page chain matches global chain (else fetch won't work)\n  const skipOnChainFetch = Boolean(queryToken) || pageChainId !== activeChainId\n  const onChainToken = useOnChainToken(address, skipOnChainFetch)\n\n  return useMemo(\n    () => ({ token: queryToken ?? onChainToken, didFetchFromChain: !queryToken }),\n    [onChainToken, queryToken]\n  )\n}\nexport type MultiChainMap = { [chain: string]: { address?: string; balance?: PortfolioTokenBalancePartsFragment } }\ntype TokenDetailsProps = {\n  urlAddress?: string\n  inputTokenAddress?: string\n  chain: InterfaceGqlChain\n  tokenQuery: TokenQuery\n  tokenPriceQuery?: TokenPriceQuery\n}\nexport default function TokenDetails({\n  urlAddress,\n  inputTokenAddress,\n  chain,\n  tokenQuery,\n  tokenPriceQuery,\n}: TokenDetailsProps) {\n  if (!urlAddress) {\n    throw new Error('Invalid token details route: tokenAddress param is undefined')\n  }\n  const address = useMemo(\n    () => (urlAddress === NATIVE_CHAIN_ID ? urlAddress : isAddress(urlAddress) || undefined),\n    [urlAddress]\n  )\n\n  const { account, chainId: connectedChainId } = useWeb3React()\n  const pageChainId = supportedChainIdFromGQLChain(chain)\n  const tokenQueryData = tokenQuery.token\n  const { data: balanceQuery } = useCachedPortfolioBalancesQuery({ account })\n  const multiChainMap = useMemo(() => {\n    const tokenBalances = balanceQuery?.portfolios?.[0].tokenBalances\n    const tokensAcrossChains = tokenQueryData?.project?.tokens\n    if (!tokensAcrossChains) return {}\n    return tokensAcrossChains.reduce((map, current) => {\n      if (current) {\n        if (!map[current.chain]) {\n          map[current.chain] = {}\n        }\n        map[current.chain].address = current.address\n        map[current.chain].balance = tokenBalances?.find((tokenBalance) => tokenBalance.token?.id === current.id)\n      }\n      return map\n    }, {} as MultiChainMap)\n  }, [balanceQuery?.portfolios, tokenQueryData?.project?.tokens])\n\n  const { token: detailedToken, didFetchFromChain } = useRelevantToken(address, pageChainId, tokenQueryData)\n\n  const tokenWarning = address ? checkWarning(address) : null\n  const isBlockedToken = tokenWarning?.canProceed === false\n  const navigate = useNavigate()\n\n  const isInfoExplorePageEnabled = useInfoExplorePageEnabled()\n  const isInfoTDPEnabled = useInfoTDPEnabled()\n\n  // Wrapping navigate in a transition prevents Suspense from unnecessarily showing fallbacks again.\n  const [isPending, startTokenTransition] = useTransition()\n  const navigateToTokenForChain = useCallback(\n    (update: Chain) => {\n      if (!address) return\n      const bridgedAddress = multiChainMap[update].address\n      if (bridgedAddress) {\n        startTokenTransition(() =>\n          navigate(\n            getTokenDetailsURL({\n              address: bridgedAddress,\n              chain: update,\n              isInfoExplorePageEnabled,\n            })\n          )\n        )\n      } else if (didFetchFromChain || detailedToken?.isNative) {\n        startTokenTransition(() => navigate(getTokenDetailsURL({ address, chain: update, isInfoExplorePageEnabled })))\n      }\n    },\n    [address, multiChainMap, didFetchFromChain, detailedToken?.isNative, navigate, isInfoExplorePageEnabled]\n  )\n  useOnGlobalChainSwitch(navigateToTokenForChain)\n\n  const handleCurrencyChange = useCallback(\n    (tokens: Pick<SwapState, Field.INPUT | Field.OUTPUT>) => {\n      if (\n        addressesAreEquivalent(tokens[Field.INPUT]?.currencyId, address) ||\n        addressesAreEquivalent(tokens[Field.OUTPUT]?.currencyId, address)\n      ) {\n        return\n      }\n\n      const newDefaultTokenID = tokens[Field.OUTPUT]?.currencyId ?? tokens[Field.INPUT]?.currencyId\n      startTokenTransition(() =>\n        navigate(\n          getTokenDetailsURL({\n            // The function falls back to \"NATIVE\" if the address is null\n            address: newDefaultTokenID === 'ETH' ? null : newDefaultTokenID,\n            chain,\n            inputAddress:\n              // If only one token was selected before we navigate, then it was the default token and it's being replaced.\n              // On the new page, the *new* default token becomes the output, and we don't have another option to set as the input token.\n              tokens[Field.INPUT] && tokens[Field.INPUT]?.currencyId !== newDefaultTokenID\n                ? tokens[Field.INPUT]?.currencyId\n                : null,\n            isInfoExplorePageEnabled,\n          })\n        )\n      )\n    },\n    [address, chain, isInfoExplorePageEnabled, navigate]\n  )\n\n  const [continueSwap, setContinueSwap] = useState<{ resolve: (value: boolean | PromiseLike<boolean>) => void }>()\n\n  const [openTokenSafetyModal, setOpenTokenSafetyModal] = useState(false)\n\n  const onResolveSwap = useCallback(\n    (value: boolean) => {\n      continueSwap?.resolve(value)\n      setContinueSwap(undefined)\n    },\n    [continueSwap, setContinueSwap]\n  )\n\n  // address will never be undefined if token is defined; address is checked here to appease typechecker\n  if (detailedToken === undefined || !address) {\n    return <InvalidTokenDetails pageChainId={pageChainId} isInvalidAddress={!address} />\n  }\n  const tokenSymbolName = detailedToken && (detailedToken.symbol ?? <Trans>Symbol not found</Trans>)\n  return (\n    <Trace\n      page={InterfacePageName.TOKEN_DETAILS_PAGE}\n      properties={{ tokenAddress: address, tokenName: detailedToken?.name }}\n      shouldLogImpression\n    >\n      <TokenDetailsLayout>\n        {detailedToken && !isPending ? (\n          <LeftPanel>\n            {isInfoTDPEnabled ? (\n              <BreadcrumbNav isInfoTDPEnabled>\n                <BreadcrumbNavLink to={`${isInfoExplorePageEnabled ? '/explore' : ''}/tokens/${chain.toLowerCase()}`}>\n                  <Trans>Explore</Trans> <ChevronRight size={14} /> <Trans>Tokens</Trans> <ChevronRight size={14} />\n                </BreadcrumbNavLink>{' '}\n                {tokenSymbolName}{' '}\n                {!detailedToken.isNative && (\n                  <>\n                    (\n                    <CopyContractAddress\n                      address={address}\n                      showTruncatedOnly\n                      truncatedAddress={shortenAddress(address)}\n                    />\n                    )\n                  </>\n                )}\n              </BreadcrumbNav>\n            ) : (\n              <BreadcrumbNav>\n                <BreadcrumbNavLink to={`${isInfoExplorePageEnabled ? '/explore' : ''}/tokens/${chain.toLowerCase()}`}>\n                  <ArrowLeft data-testid=\"token-details-return-button\" size={14} /> Tokens\n                </BreadcrumbNavLink>\n              </BreadcrumbNav>\n            )}\n            <TokenInfoContainer data-testid=\"token-info-container\">\n              <TokenNameCell>\n                <PortfolioLogo currencies={[detailedToken]} chainId={detailedToken.chainId} size=\"32px\" />\n                <TokenTitle>\n                  {detailedToken.name ?? <Trans>Name not found</Trans>}\n                  <TokenSymbol>{tokenSymbolName}</TokenSymbol>\n                </TokenTitle>\n              </TokenNameCell>\n              <TokenActions>\n                <ShareButton currency={detailedToken} />\n              </TokenActions>\n            </TokenInfoContainer>\n            <ChartSection tokenPriceQuery={tokenPriceQuery} />\n\n            <StatsSection chainId={pageChainId} address={address} tokenQueryData={tokenQueryData} />\n            <Hr />\n            <AboutSection\n              address={address}\n              chainId={pageChainId}\n              description={tokenQueryData?.project?.description}\n              homepageUrl={tokenQueryData?.project?.homepageUrl}\n              twitterName={tokenQueryData?.project?.twitterName}\n            />\n            {!detailedToken.isNative && <AddressSection address={address} />}\n          </LeftPanel>\n        ) : (\n          <TokenDetailsSkeleton />\n        )}\n\n        <RightPanel isInfoTDPEnabled={isInfoTDPEnabled} onClick={() => isBlockedToken && setOpenTokenSafetyModal(true)}>\n          <div style={{ pointerEvents: isBlockedToken ? 'none' : 'auto' }}>\n            <Swap\n              chainId={pageChainId}\n              initialInputCurrencyId={inputTokenAddress}\n              initialOutputCurrencyId={address === NATIVE_CHAIN_ID ? 'ETH' : address}\n              onCurrencyChange={handleCurrencyChange}\n              disableTokenInputs={pageChainId !== connectedChainId}\n            />\n          </div>\n          {tokenWarning && <TokenSafetyMessage tokenAddress={address} warning={tokenWarning} />}\n          {detailedToken && <BalanceSummary currency={detailedToken} chain={chain} multiChainMap={multiChainMap} />}\n          {isInfoTDPEnabled && (\n            <TokenDescription\n              tokenAddress={address}\n              chainId={pageChainId}\n              isNative={detailedToken?.isNative}\n              characterCount={200}\n            />\n          )}\n        </RightPanel>\n        {detailedToken && (\n          <MobileBalanceSummaryFooter currency={detailedToken} pageChainBalance={multiChainMap[chain].balance} />\n        )}\n\n        <TokenSafetyModal\n          isOpen={openTokenSafetyModal || !!continueSwap}\n          tokenAddress={address}\n          onContinue={() => onResolveSwap(true)}\n          onBlocked={() => {\n            setOpenTokenSafetyModal(false)\n          }}\n          onCancel={() => onResolveSwap(false)}\n          showCancel={true}\n        />\n      </TokenDetailsLayout>\n    </Trace>\n  )\n}\n","import PrefetchBalancesWrapper from 'components/PrefetchBalancesWrapper/PrefetchBalancesWrapper'\nimport TokenDetails from 'components/Tokens/TokenDetails'\nimport { TokenDetailsPageSkeleton } from 'components/Tokens/TokenDetails/Skeleton'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { useTokenPriceQuery, useTokenQuery } from 'graphql/data/__generated__/types-and-hooks'\nimport { TimePeriod, toHistoryDuration, validateUrlChainParam } from 'graphql/data/util'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { atomWithStorage, useAtomValue } from 'jotai/utils'\nimport { useEffect, useMemo, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { getNativeTokenDBAddress } from 'utils/nativeTokens'\n\nexport const pageTimePeriodAtom = atomWithStorage<TimePeriod>('tokenDetailsTimePeriod', TimePeriod.DAY)\n\nconst StyledPrefetchBalancesWrapper = styled(PrefetchBalancesWrapper)`\n  display: contents;\n`\n\nexport default function TokenDetailsPage() {\n  const { tokenAddress, chainName } = useParams<{\n    tokenAddress: string\n    chainName?: string\n  }>()\n  const chain = validateUrlChainParam(chainName)\n  const isNative = tokenAddress === NATIVE_CHAIN_ID\n  const timePeriod = useAtomValue(pageTimePeriodAtom)\n  const [detailedTokenAddress, duration] = useMemo(\n    // tokenAddress will always be defined in the path for for this page to render, but useParams will always\n    // return optional arguments; nullish coalescing operator is present here to appease typechecker\n    () => [isNative ? getNativeTokenDBAddress(chain) : tokenAddress ?? '', toHistoryDuration(timePeriod)],\n    [chain, isNative, timePeriod, tokenAddress]\n  )\n\n  const parsedQs = useParsedQueryString()\n\n  const parsedInputTokenAddress: string | undefined = useMemo(() => {\n    return typeof parsedQs.inputCurrency === 'string' ? (parsedQs.inputCurrency as string) : undefined\n  }, [parsedQs])\n\n  const { data: tokenQuery } = useTokenQuery({\n    variables: {\n      address: detailedTokenAddress,\n      chain,\n    },\n    errorPolicy: 'all',\n  })\n\n  const { data: tokenPriceQuery } = useTokenPriceQuery({\n    variables: {\n      address: detailedTokenAddress,\n      chain,\n      duration,\n    },\n    errorPolicy: 'all',\n  })\n\n  // Saves already-loaded chart data into state to display while tokenPriceQuery is undefined timePeriod input changes\n  const [currentPriceQuery, setCurrentPriceQuery] = useState(tokenPriceQuery)\n  useEffect(() => {\n    if (tokenPriceQuery) setCurrentPriceQuery(tokenPriceQuery)\n  }, [setCurrentPriceQuery, tokenPriceQuery])\n\n  if (!tokenQuery) return <TokenDetailsPageSkeleton />\n\n  return (\n    <StyledPrefetchBalancesWrapper shouldFetchOnAccountUpdate={true} shouldFetchOnHover={false}>\n      <TokenDetails\n        urlAddress={tokenAddress}\n        chain={chain}\n        tokenQuery={tokenQuery}\n        tokenPriceQuery={currentPriceQuery}\n        inputTokenAddress={parsedInputTokenAddress}\n      />\n    </StyledPrefetchBalancesWrapper>\n  )\n}\n","export function addressesAreEquivalent(a: string | null | undefined, b: string | null | undefined) {\n  if (!a || !b) return false\n  return a === b || a.toLowerCase() === b.toLowerCase()\n}\n"],"names":["EtherscanLogo","props","svg","width","height","viewBox","fill","xmlns","stroke","path","d","Share","TokenDescriptionContainer","styled","div","AboutContainer","textFadeIn","AboutHeader","ThemedText","MediumHeader","ResourcesContainer","AboutSection","address","chainId","description","homepageUrl","twitterName","isDescriptionTruncated","setIsDescriptionTruncated","useState","shouldTruncate","length","TRUNCATE_CHARACTER_COUNT","tokenDescription","truncateDescription","explorer","infoLink","getChainInfo","data-testid","NoInfoAvailable","TruncateDescriptionButton","onClick","br","SubHeaderSmall","data-cy","Resource","name","ChainId","MAINNET","link","BreadcrumbNav","theme","neutral1","isInfoTDPEnabled","css","BreadcrumbNavLink","Link","neutral2","transition","duration","fast","neutral3","config","ms","easing","easeSinOut","AnimatedInLineChart","data","getX","getY","marginTop","curve","color","strokeWidth","lineRef","useRef","lineLength","setLineLength","shouldAnimate","setShouldAnimate","hasAnimatedIn","setHasAnimatedIn","spring","useSpring","frame","onRest","useEffect","current","getTotalLength","useTheme","lineColor","accent1","Group","top","LinePath","x","y","animated","ref","strokeOpacity","strokeDashoffset","to","v","strokeDasharray","React","easeCubicInOut","FadedInLineChart","dashed","undefined","ChartErrorType","NO_DATA_AVAILABLE","NO_RECENT_VOLUME","INVALID_CHART","HOUR_OPTIONS","hour","minute","hour12","DAY_HOUR_OPTIONS","month","day","TimestampFormatterType","TICK","CROSSHAIR","TIME_PERIOD_TO_FORMAT_OPTIONS","TimePeriod","HOUR","DAY","WEEK","weekday","MONTH","YEAR","year","getTimestampFormatter","timePeriod","locale","formatterType","options","dateTimeFormatter","Intl","DateTimeFormat","timestamp","epochTimeInMilliseconds","valueOf","format","CHART_MARGIN","bottom","crosshair","ChartHeaderWrapper","medium","stale","PriceContainer","DeltaContainer","ChartDelta","startingPrice","endingPrice","noColor","delta","calculateDelta","value","formatDelta","useFormatter","DeltaArrow","ChartHeader","crosshairPrice","chart","formatFiatPrice","lastValidPrice","priceOutdated","displayPrice","displayIsStale","HeadlineLarge","price","MouseoverTooltip","text","Info","size","ChartBody","useActiveLocale","prices","blanks","timeScale","priceScale","dimensions","ticks","tickTimestampFormatter","crosshairTimestampFormatter","useMemo","maxTicks","Math","floor","getTicks","setCrosshair","resetCrosshair","useCallback","setCrosshairOnHover","event","localPoint","getNearestPricePoint","crosshairEdgeMax","crosshairAtEdge","curveTension","p","curveCardinal","tension","style","minWidth","map","blank","index","g","AxisBottom","scale","surface3","hideTicks","tickValues","tickFormat","tickLabelProps","fontSize","textAnchor","transform","Line","from","pointerEvents","GlyphCircle","left","hideAxisLine","line","x1","y1","x2","y2","shapeRendering","rect","onTouchStart","onTouchMove","onMouseMove","onMouseLeave","CHART_ERROR_MESSAGES","MissingPriceChart","midPoint","BodySmall","error","PriceChart","innerHeight","marginBottom","fixedPrices","cleanPricePoints","min","max","getPriceBounds","scaleLinear","domain","range","buildChartModel","TimeOptionsWrapper","TimeOptionsContainer","MEDIUM_MEDIA_BREAKPOINT","TimeButton","button","active","opacity","hover","TimePeriodSelector","setTimePeriod","useAtom","pageTimePeriodAtom","ORDERED_TIMES","time","DISPLAYS","ChartContainer","ChartSection","tokenPriceQuery","Suspense","fallback","LoadingChart","Chart","tokenPriceData","market","token","priceHistory","filter","isPricePoint","currentPrice","Array","isArray","Date","now","useAtomValue","ParentSize","ResourceLink","ExternalLink","darken","href","sup","StyledArrowWrapper","ArrowWrapper","LoadingWrapper","surface1","Blob","surface2","radius","ModuleBlob","TitleColumn","Row","InputColumn","OutputWrapper","Title","SubHeader","FloatingInput","FloatingButton","SwapSkeleton","clickable","ArrowContainer","ArrowDown","Hr","hr","TokenDetailsLayout","breakpoint","sm","md","xl","LeftPanel","RightPanel","lg","LoadingChartContainer","TokenInfoContainer","TokenNameCell","DetailBubble","LoadingBubble","SquaredBubble","NavBubble","TokenLogoBubble","TitleBubble","PriceBubble","SectionBubble","StatTitleBubble","StatBubble","WideBubble","ThinTitleBubble","HalfWideBubble","StatsLoadingContainer","ExtraDetailsContainer","ChartAnimation","Space","heightSize","Wave","LoadingStats","StatsWrapper","StatPair","StatWrapper","TokenDetailsSkeleton","chainName","useParams","isInfoExplorePageEnabled","useInfoExplorePageEnabled","useInfoTDPEnabled","ChevronRight","ArrowLeft","TokenDetailsPageSkeleton","TokenStatsSection","Header","StatPrice","NoData","Stat","dataCy","title","formatNumber","input","type","NumberType","FiatTokenStats","StatsSection","tokenQueryData","label","tokenMarketInfo","tokenProjectMarketInfo","project","markets","FDV","fullyDilutedValuation","marketCap","TVL","totalValueLocked","volume24H","priceHigh52W","priceLow52W","HEADER_DESCRIPTIONS","TokenSortMethod","TOTAL_VALUE_LOCKED","FULLY_DILUTED_VALUATION","UNSUPPORTED_METADATA_CHAINS","includes","BodySecondary","paddingTop","span","desc","maxCharacterCount","tokenDescriptionTruncated","slice","lastIndexOf","ContractAddressSection","ContractAddress","AddressSection","CopyContractAddress","truncatedAddress","shortenAddress","TWITTER_WIDTH","TWITTER_HEIGHT","ShareButtonDisplay","ShareIcon","ClickableStyle","open","click","ShareActions","Z_INDEX","dropdown","deprecated_deepShadow","ShareAction","opacify","darkMode","colors","gray200","gray300","ShareButton","currency","node","useModalIsOpen","ApplicationModal","SHARE","toggleShare","useToggleModal","useOnClickOutside","positionX","window","screen","positionY","isNative","NATIVE_CHAIN_ID","wrapped","useDisableScrolling","copyHelperRef","aria-label","forceCopy","CopyHelper","InitialIcon","iconPosition","gap","toCopy","location","symbol","chainIdToBackendName","toLowerCase","Twitter","Label","backgroundColor","TitleRow","Text","DetailsRow","StyledLink","TokenSafetyMessage","warning","tokenAddress","useTokenWarningColor","level","textColor","useTokenWarningTextColor","heading","getWarningCopy","displayWarningLabel","canProceed","AlertTriangle","Slash","marginLeft","message","Boolean","TOKEN_SAFETY_ARTICLE","useOnGlobalChainSwitch","callback","connectedChainId","useWeb3React","globalChainName","prevGlobalChainRef","BalancesCard","BalanceSection","BalanceRow","BalanceItem","BalanceContainer","BalanceAmountsContainer","StyledNetworkLabel","Balance","balance","gqlBalance","formatCurrencyAmount","asSupportedChain","currencies","formattedBalance","amount","TokenNonTx","formattedUsdValue","useStablecoinValue","PortfolioBalance","formattedGqlBalance","quantity","formattedUsdGqlValue","denominatedValue","PortfolioLogo","BodyPrimary","ConnectedChainBalanceSummary","connectedChainBalance","greaterThan","PageChainBalanceSummary","pageChainBalance","gqlToCurrency","HeadlineSmall","OtherChainsBalanceSummary","otherChainBalances","hasPageChainBalance","navigate","useNavigate","supportedChainIdFromGQLChain","chain","getTokenDetailsURL","Chain","Ethereum","id","BalanceSummary","multiChainMap","account","useCurrencyBalance","key","Object","entries","push","hasBalances","_path","_extends","assign","bind","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","SvgEye","_ref","svgRef","titleId","ForwardRef","InvalidDetailsContainer","InvalidDetailsText","TokenExploreButton","ButtonPrimary","InvalidTokenDetails","pageChainId","isInvalidAddress","selectChain","useSelectChain","isNonExistantToken","connectedChainLabel","EyeIcon","Wrapper","BalanceValue","BalanceInfo","FiatValue","Caption","SwapButton","StyledInternalLink","deprecated_accentTextLightPrimary","MobileBalanceSummaryFooter","CHAIN_ID_TO_BACKEND_NAME","Globe","TwitterXLogo","TokenInfoSection","Column","BREAKPOINTS","TokenNameRow","TokenButtonRow","TokenInfoButton","tokenColor","EllipsisStyle","DescriptionVisibilityWrapper","$visible","TokenDescription","characterCount","tokenQuery","useTokenProjectQuery","variables","getNativeTokenDBAddress","errorPolicy","tokenProject","explorerUrl","getExplorerLink","ExplorerDataType","NATIVE","TOKEN","setCopied","useCopyClipboard","copy","toggleIsDescriptionTruncated","useReducer","truncatedDescription","showTruncatedDescription","inputTax","sellFee","outputTax","buyFee","useSwapTaxes","formatPercent","sellFeeString","buyFeeString","hasFee","parseFloat","toFixed","sameFee","Copy","placement","TooltipSize","Small","FOTTooltipContent","TokenSymbol","TokenActions","TokenTitle","useRelevantToken","activeChainId","queryToken","nativeOnChain","skipOnChainFetch","onChainToken","skip","useTokenFromActiveNetwork","UNKNOWN_TOKEN_SYMBOL","useOnChainToken","didFetchFromChain","TokenDetails","urlAddress","inputTokenAddress","Error","isAddress","balanceQuery","useCachedPortfolioBalancesQuery","tokenBalances","portfolios","tokensAcrossChains","tokens","reduce","find","tokenBalance","detailedToken","tokenWarning","checkWarning","isBlockedToken","isPending","startTokenTransition","useTransition","navigateToTokenForChain","update","bridgedAddress","handleCurrencyChange","addressesAreEquivalent","Field","INPUT","currencyId","OUTPUT","newDefaultTokenID","inputAddress","continueSwap","setContinueSwap","openTokenSafetyModal","setOpenTokenSafetyModal","onResolveSwap","resolve","tokenSymbolName","Trace","page","InterfacePageName","TOKEN_DETAILS_PAGE","properties","tokenName","shouldLogImpression","showTruncatedOnly","Swap","initialInputCurrencyId","initialOutputCurrencyId","onCurrencyChange","disableTokenInputs","TokenSafetyModal","isOpen","onContinue","onBlocked","onCancel","showCancel","atomWithStorage","StyledPrefetchBalancesWrapper","PrefetchBalancesWrapper","TokenDetailsPage","validateUrlChainParam","detailedTokenAddress","toHistoryDuration","parsedQs","useParsedQueryString","parsedInputTokenAddress","inputCurrency","useTokenQuery","useTokenPriceQuery","currentPriceQuery","setCurrentPriceQuery","shouldFetchOnAccountUpdate","shouldFetchOnHover","a","b"],"sourceRoot":""}