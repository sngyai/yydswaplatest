{"version":3,"file":"static/js/5510.3316f4ec.chunk.js","mappings":"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","sources":["components/PositionCard/index.tsx","components/V2Unsupported/index.tsx","components/earn/styled.tsx","constants/tokenColors.ts","utils/getColor.ts","hooks/useColor.ts","hooks/useNetworkSupportsV2.ts","hooks/useTotalSupply.ts","hooks/useV2Pairs.ts","utils/unwrappedToken.ts"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { CurrencyAmount, Percent, Token } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport { transparentize } from 'polished'\nimport { useState } from 'react'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport { ExternalLink, ThemedText } from 'theme/components'\n\nimport { BIG_INT_ZERO } from '../../constants/misc'\nimport { useColor } from '../../hooks/useColor'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { useTokenBalance } from '../../state/connection/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/unwrappedToken'\nimport { ButtonEmpty, ButtonPrimary, ButtonSecondary } from '../Button'\nimport { GrayCard, LightCard } from '../Card'\nimport { AutoColumn } from '../Column'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { CardNoise } from '../earn/styled'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\nimport { Dots } from '../swap/styled'\n\nexport const FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\nconst StyledPositionCard = styled(LightCard)<{ bgColor: any }>`\n  border: none;\n  background: ${({ theme, bgColor }) =>\n    `radial-gradient(91.85% 100% at 1.84% 0%, ${transparentize(0.8, bgColor)} 0%, ${theme.surface2} 100%) `};\n  position: relative;\n  overflow: hidden;\n`\n\ninterface PositionCardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n  border?: string\n  stakedBalance?: CurrencyAmount<Token> // optional balance to indicate that liquidity is deposited in mining pool\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false, border }: PositionCardProps) {\n  const { account } = useWeb3React()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.quotient, JSBI.BigInt(0)) ? (\n        <GrayCard border={border}>\n          <AutoColumn gap=\"md\">\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontWeight={535} fontSize={16}>\n                  <Trans>Your position</Trans>\n                </Text>\n              </RowFixed>\n            </FixedHeightRow>\n            <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n              <RowFixed>\n                <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin={true} size={20} />\n                <Text fontWeight={535} fontSize={20}>\n                  {currency0.symbol}/{currency1.symbol}\n                </Text>\n              </RowFixed>\n              <RowFixed>\n                <Text fontWeight={535} fontSize={20}>\n                  {userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}\n                </Text>\n              </RowFixed>\n            </FixedHeightRow>\n            <AutoColumn gap=\"4px\">\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={535}>\n                  <Trans>Your pool share:</Trans>\n                </Text>\n                <Text fontSize={16} fontWeight={535}>\n                  {poolTokenPercentage ? poolTokenPercentage.toFixed(6) + '%' : '-'}\n                </Text>\n              </FixedHeightRow>\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={535}>\n                  {currency0.symbol}:\n                </Text>\n                {token0Deposited ? (\n                  <RowFixed>\n                    <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                      {token0Deposited?.toSignificant(6)}\n                    </Text>\n                  </RowFixed>\n                ) : (\n                  '-'\n                )}\n              </FixedHeightRow>\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={535}>\n                  {currency1.symbol}:\n                </Text>\n                {token1Deposited ? (\n                  <RowFixed>\n                    <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                      {token1Deposited?.toSignificant(6)}\n                    </Text>\n                  </RowFixed>\n                ) : (\n                  '-'\n                )}\n              </FixedHeightRow>\n            </AutoColumn>\n          </AutoColumn>\n        </GrayCard>\n      ) : (\n        <LightCard>\n          <ThemedText.DeprecatedSubHeader style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"wizard-icon\">\n              ⭐️\n            </span>{' '}\n            <Trans>\n              By adding liquidity you&apos;ll earn 0.3% of all trades on this pair proportional to your share of the\n              pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\n            </Trans>{' '}\n          </ThemedText.DeprecatedSubHeader>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, border, stakedBalance }: PositionCardProps) {\n  const { account } = useWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userDefaultPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  // if staked balance balance provided, add to standard liquidity amount\n  const userPoolBalance = stakedBalance ? userDefaultPoolBalance?.add(stakedBalance) : userDefaultPoolBalance\n\n  const poolTokenPercentage =\n    !!userPoolBalance &&\n    !!totalPoolTokens &&\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? new Percent(userPoolBalance.quotient, totalPoolTokens.quotient)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.quotient, userPoolBalance.quotient)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  const backgroundColor = useColor(pair?.token0)\n\n  return (\n    <StyledPositionCard border={border} bgColor={backgroundColor}>\n      <CardNoise />\n      <AutoColumn gap=\"md\">\n        <FixedHeightRow>\n          <AutoRow gap=\"8px\" style={{ marginLeft: '8px' }}>\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text fontWeight={535} fontSize={20}>\n              {!currency0 || !currency1 ? (\n                <Dots>\n                  <Trans>Loading</Trans>\n                </Dots>\n              ) : (\n                `${currency0.symbol}/${currency1.symbol}`\n              )}\n            </Text>\n          </AutoRow>\n          <RowFixed gap=\"8px\" style={{ marginRight: '4px' }}>\n            <ButtonEmpty padding=\"6px 8px\" $borderRadius=\"12px\" width=\"100%\" onClick={() => setShowMore(!showMore)}>\n              {showMore ? (\n                <>\n                  <Trans>Manage</Trans>\n                  <ChevronUp size=\"20\" style={{ marginLeft: '8px', height: '20px', minWidth: '20px' }} />\n                </>\n              ) : (\n                <>\n                  <Trans>Manage</Trans>\n                  <ChevronDown size=\"20\" style={{ marginLeft: '8px', height: '20px', minWidth: '20px' }} />\n                </>\n              )}\n            </ButtonEmpty>\n          </RowFixed>\n        </FixedHeightRow>\n\n        {showMore && (\n          <AutoColumn gap=\"sm\">\n            <FixedHeightRow>\n              <Text fontSize={16} fontWeight={535}>\n                <Trans>Your total pool tokens:</Trans>\n              </Text>\n              <Text fontSize={16} fontWeight={535}>\n                {userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}\n              </Text>\n            </FixedHeightRow>\n            {stakedBalance && (\n              <FixedHeightRow>\n                <Text fontSize={16} fontWeight={535}>\n                  <Trans>Pool tokens in rewards pool:</Trans>\n                </Text>\n                <Text fontSize={16} fontWeight={535}>\n                  {stakedBalance.toSignificant(4)}\n                </Text>\n              </FixedHeightRow>\n            )}\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontSize={16} fontWeight={535}>\n                  <Trans>Pooled {currency0.symbol}:</Trans>\n                </Text>\n              </RowFixed>\n              {token0Deposited ? (\n                <RowFixed>\n                  <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                    {token0Deposited?.toSignificant(6)}\n                  </Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency0} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <RowFixed>\n                <Text fontSize={16} fontWeight={535}>\n                  <Trans>Pooled {currency1.symbol}:</Trans>\n                </Text>\n              </RowFixed>\n              {token1Deposited ? (\n                <RowFixed>\n                  <Text fontSize={16} fontWeight={535} marginLeft=\"6px\">\n                    {token1Deposited?.toSignificant(6)}\n                  </Text>\n                  <CurrencyLogo size=\"20px\" style={{ marginLeft: '8px' }} currency={currency1} />\n                </RowFixed>\n              ) : (\n                '-'\n              )}\n            </FixedHeightRow>\n\n            <FixedHeightRow>\n              <Text fontSize={16} fontWeight={535}>\n                <Trans>Your pool share:</Trans>\n              </Text>\n              <Text fontSize={16} fontWeight={535}>\n                {poolTokenPercentage ? (\n                  <Trans>\n                    {poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)} %\n                  </Trans>\n                ) : (\n                  '-'\n                )}\n              </Text>\n            </FixedHeightRow>\n\n            <ButtonSecondary padding=\"8px\" $borderRadius=\"8px\">\n              <ExternalLink\n                style={{ width: '100%', textAlign: 'center' }}\n                href={`https://v2.info.uniswap.org/account/${account}`}\n              >\n                <Trans>\n                  View accrued fees and analytics<span style={{ fontSize: '11px' }}>↗</span>\n                </Trans>\n              </ExternalLink>\n            </ButtonSecondary>\n            {userDefaultPoolBalance && JSBI.greaterThan(userDefaultPoolBalance.quotient, BIG_INT_ZERO) && (\n              <RowBetween marginTop=\"10px\">\n                <ButtonPrimary\n                  padding=\"8px\"\n                  $borderRadius=\"8px\"\n                  as={Link}\n                  to={`/migrate/v2/${pair.liquidityToken.address}`}\n                  width=\"32%\"\n                >\n                  <Trans>Migrate</Trans>\n                </ButtonPrimary>\n                <ButtonPrimary\n                  padding=\"8px\"\n                  $borderRadius=\"8px\"\n                  as={Link}\n                  to={`/add/v2/${currencyId(currency0)}/${currencyId(currency1)}`}\n                  width=\"32%\"\n                >\n                  <Trans>Add</Trans>\n                </ButtonPrimary>\n                <ButtonPrimary\n                  padding=\"8px\"\n                  $borderRadius=\"8px\"\n                  as={Link}\n                  width=\"32%\"\n                  to={`/remove/v2/${currencyId(currency0)}/${currencyId(currency1)}`}\n                >\n                  <Trans>Remove</Trans>\n                </ButtonPrimary>\n              </RowBetween>\n            )}\n            {stakedBalance && JSBI.greaterThan(stakedBalance.quotient, BIG_INT_ZERO) && (\n              <ButtonPrimary\n                padding=\"8px\"\n                $borderRadius=\"8px\"\n                as={Link}\n                to={`/uni/${currencyId(currency0)}/${currencyId(currency1)}`}\n                width=\"100%\"\n              >\n                <Trans>Manage liquidity in rewards pool</Trans>\n              </ButtonPrimary>\n            )}\n          </AutoColumn>\n        )}\n      </AutoColumn>\n    </StyledPositionCard>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { AutoColumn } from 'components/Column'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst TextWrapper = styled.div`\n  border: 1px solid ${({ theme }) => theme.neutral3};\n  padding: 16px 12px;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nexport function V2Unsupported() {\n  return (\n    <AutoColumn gap=\"lg\" justify=\"center\">\n      <AutoColumn gap=\"md\" style={{ width: '100%' }}>\n        <TextWrapper>\n          <ThemedText.BodySecondary color=\"neutral2\" textAlign=\"center\">\n            <Trans>Uniswap V2 is not available on this network.</Trans>\n          </ThemedText.BodySecondary>\n        </TextWrapper>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import styled from 'styled-components'\n\nimport uImage from '../../assets/images/big_unicorn.png'\nimport noise from '../../assets/images/noise.png'\nimport xlUnicorn from '../../assets/images/xl_uni.png'\nimport { AutoColumn } from '../Column'\n\nexport const DataCard = styled(AutoColumn)<{ disabled?: boolean }>`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #2172e5 100%);\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n`\n\nexport const CardBGImage = styled.span<{ desaturate?: boolean }>`\n  background: url(${uImage});\n  width: 1000px;\n  height: 600px;\n  position: absolute;\n  border-radius: 12px;\n  opacity: 0.4;\n  top: -100px;\n  left: -100px;\n  transform: rotate(-15deg);\n  user-select: none;\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardBGImageSmaller = styled.span<{ desaturate?: boolean }>`\n  background: url(${xlUnicorn});\n  width: 1200px;\n  height: 1200px;\n  position: absolute;\n  border-radius: 12px;\n  top: -300px;\n  left: -300px;\n  opacity: 0.4;\n  user-select: none;\n\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardNoise = styled.span`\n  background: url(${noise});\n  background-size: cover;\n  mix-blend-mode: overlay;\n  border-radius: 12px;\n  width: 100%;\n  height: 100%;\n  opacity: 0.15;\n  position: absolute;\n  top: 0;\n  left: 0;\n  user-select: none;\n`\n\nexport const CardSection = styled(AutoColumn)<{ disabled?: boolean }>`\n  padding: 1rem;\n  z-index: 1;\n  opacity: ${({ disabled }) => disabled && '0.4'};\n`\n\nexport const Break = styled.div`\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n`\n","export const DEFAULT_COLOR = [35, 43, 43]\n\nexport const predefinedTokenColors: { [key: string]: number[] } = {\n  // old WBTC\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599/logo.png':\n    [240, 146, 65],\n  // new WBTC\n  'https://assets.coingecko.com/coins/images/7598/large/wrapped_bitcoin_wbtc.png?1548822744': [240, 146, 65],\n  // DAI\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x6B175474E89094C44Da98b954EedeAC495271d0F/logo.png':\n    [250, 176, 27],\n  // UNI\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984/logo.png':\n    [230, 53, 140],\n  // BUSD\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x4Fabb145d64652a948d72533023f6E7A623C7C53/logo.png':\n    [239, 186, 9],\n  // AI-X\n  'https://s2.coinmarketcap.com/static/img/coins/64x64/26984.png': [41, 161, 241],\n  // ETH\n  'https://token-icons.s3.amazonaws.com/eth.png': [73, 112, 213],\n  // HARRYPOTTERSHIBAINUBITCOIN\n  'https://assets.coingecko.com/coins/images/30323/large/hpos10i_logo_casino_night-dexview.png?1684117567': [\n    222, 49, 16,\n  ],\n  // PEPE\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x6982508145454Ce325dDbE47a25d4ec3d2311933/logo.png':\n    [62, 174, 20],\n  // Unibot V2\n  'https://s2.coinmarketcap.com/static/img/coins/64x64/25436.png': [74, 10, 79],\n  // UNIBOT v1\n  'https://assets.coingecko.com/coins/images/30462/small/logonoline_%281%29.png?1687510315': [74, 10, 79],\n  // USDC\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png':\n    [0, 102, 217],\n  // HEX\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x2b591e99afE9f32eAA6214f7B7629768c40Eeb39/logo.png':\n    [249, 63, 140],\n  // MONG\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x1ce270557C1f68Cfb577b856766310Bf8B47FD9C/logo.png':\n    [169, 109, 255],\n  // ARB\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0xB50721BCf8d664c30412Cfbc6cf7a15145234ad1/logo.png':\n    [41, 161, 241],\n  // PSYOP\n  'https://s2.coinmarketcap.com/static/img/coins/64x64/25422.png': [232, 143, 0],\n  // MATIC\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0/logo.png':\n    [169, 109, 255],\n  // TURBO\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0xA35923162C49cF95e6BF26623385eb431ad920D3/logo.png':\n    [189, 110, 41],\n  // AIDOGE\n  'https://assets.coingecko.com/coins/images/29852/large/photo_2023-04-18_14-25-28.jpg?1681799160': [41, 161, 241],\n  // SIMPSON\n  'https://assets.coingecko.com/coins/images/30243/large/1111.png?1683692033': [232, 143, 0],\n  // OX\n  'https://assets.coingecko.com/coins/images/30604/large/Logo2.png?1685522119': [41, 89, 217],\n  // ANGLE\n  'https://assets.coingecko.com/coins/images/19060/large/ANGLE_Token-light.png?1666774221': [255, 85, 85],\n  // APE\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x4d224452801ACEd8B2F0aebE155379bb5D594381/logo.png':\n    [5, 74, 169],\n  // GUSD\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x056Fd409E1d7A124BD7017459dFEa2F387b6d5Cd/logo.png':\n    [0, 164, 189],\n  // OGN\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0x8207c1FfC5B6804F6024322CcF34F29c3541Ae26/logo.png':\n    [5, 74, 169],\n  // RPL\n  'https://raw.githubusercontent.com/Uniswap/assets/master/blockchains/ethereum/assets/0xD33526068D116cE69F19A9ee46F0bd304F21A51f/logo.png':\n    [255, 123, 79],\n}\n","import { Buffer } from 'buffer'\nimport JPEG from 'jpeg-js'\nimport PNG from 'png-ts'\n\nimport { DEFAULT_COLOR, predefinedTokenColors } from '../constants/tokenColors'\n\nexport async function getColor(image: string | undefined, checkDistance = false) {\n  if (!image) {\n    return DEFAULT_COLOR\n  }\n  if (image in predefinedTokenColors) {\n    return predefinedTokenColors[image]\n  }\n  try {\n    const data = await fetch(image)\n    const buffer = await data.arrayBuffer()\n    const arrayBuffer = Buffer.from(buffer)\n\n    const type = data.headers.get('content-type') ?? ''\n    return getAverageColor(arrayBuffer, type, checkDistance)\n  } catch (e) {\n    return DEFAULT_COLOR\n  }\n}\n\nfunction getAverageColor(arrayBuffer: Uint8Array, type: string, checkDistance: boolean) {\n  let pixels\n  switch (type) {\n    case 'image/png': {\n      const image = PNG.load(arrayBuffer)\n      pixels = image.decode()\n      break\n    }\n    case 'image/jpeg' || 'image/jpg': {\n      const jpeg = JPEG.decode(arrayBuffer, { useTArray: true })\n      pixels = jpeg.data\n      break\n    }\n    default: {\n      return DEFAULT_COLOR\n    }\n  }\n\n  const pixelCount = pixels.length / 4\n\n  let transparentPixels = 0\n\n  let r = 0\n  let g = 0\n  let b = 0\n\n  for (let i = 0; i < pixelCount; i++) {\n    if (pixels[i * 4 + 3] === 0) {\n      transparentPixels++\n      continue\n    }\n    r += pixels[i * 4]\n    g += pixels[i * 4 + 1]\n    b += pixels[i * 4 + 2]\n  }\n\n  r = Math.floor(r / (pixelCount - transparentPixels))\n  g = Math.floor(g / (pixelCount - transparentPixels))\n  b = Math.floor(b / (pixelCount - transparentPixels))\n\n  if (checkDistance) {\n    const distance = Math.sqrt(Math.pow(r - 255, 2) + Math.pow(g - 255, 2) + Math.pow(b - 255, 2))\n\n    if (distance < 50) {\n      return DEFAULT_COLOR\n    }\n  }\n\n  return [r, g, b]\n}\n","import { ChainId, Token } from '@uniswap/sdk-core'\nimport { DEFAULT_COLOR } from 'constants/tokenColors'\nimport useTokenLogoSource from 'hooks/useAssetLogoSource'\nimport { darken, lighten, rgb } from 'polished'\nimport { useEffect, useState } from 'react'\nimport { TokenFromList } from 'state/lists/tokenFromList'\nimport { useTheme } from 'styled-components'\nimport { getColor } from 'utils/getColor'\nimport { hex } from 'wcag-contrast'\n\n// The WCAG AA standard color contrast threshold\nconst MIN_COLOR_CONTRAST_THRESHOLD = 3\n\n/**\n * Compares a given color against the background color to determine if it passes the minimum contrast threshold.\n * @param color The hex value of the extracted color\n * @param backgroundColor The hex value of the background color to check contrast against\n * @returns either 'sporeWhite' or 'sporeBlack'\n */\nfunction passesContrast(color: string, backgroundColor: string): boolean {\n  const contrast = hex(color, backgroundColor)\n  return contrast >= MIN_COLOR_CONTRAST_THRESHOLD\n}\n\nfunction URIForEthToken(address: string) {\n  return `https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/${address}/logo.png`\n}\n\n/**\n * Retrieves the average color from a token's symbol using various sources.\n *\n * @param {Token} token - The token for which to fetch the color.\n * @param {string} primarySrc - Primary source URL for color retrieval (optional).\n *\n * @returns {Promise< | null>} A promise that resolves to a color string or null if color cannot be determined.\n */\nasync function getColorFromToken(token: Token, primarySrc?: string): Promise<string | null> {\n  const wrappedToken = token as TokenFromList\n  let color: string | null = null\n\n  try {\n    if (primarySrc) {\n      const colorArray = await getColor(primarySrc)\n      color = colorArray === DEFAULT_COLOR ? null : convertColorArrayToString(colorArray)\n    }\n\n    if (!color && wrappedToken?.logoURI) {\n      const colorArray = await getColor(wrappedToken.logoURI)\n      color = colorArray === DEFAULT_COLOR ? null : convertColorArrayToString(colorArray)\n    }\n\n    if (!color && token.chainId === ChainId.MAINNET) {\n      const colorArray = await getColor(URIForEthToken(wrappedToken.address))\n      color = colorArray === DEFAULT_COLOR ? null : convertColorArrayToString(colorArray)\n    }\n\n    return color\n  } catch (error) {\n    console.warn(`Unable to load logoURI (${token.symbol}): ${primarySrc}, ${wrappedToken.logoURI}`)\n    return null\n  }\n}\n\nfunction convertColorArrayToString([red, green, blue]: number[]): string {\n  return rgb({ red, green, blue })\n}\n\nexport function useColor(token?: Token, backgroundColor?: string, makeLighter?: boolean) {\n  const theme = useTheme()\n  const [color, setColor] = useState(theme.accent1)\n  const [src] = useTokenLogoSource(token?.address, token?.chainId, token?.isNative)\n\n  useEffect(() => {\n    let stale = false\n\n    if (token) {\n      getColorFromToken(token, src).then((tokenColor) => {\n        if (!stale && tokenColor !== null) {\n          if (backgroundColor) {\n            let increment = 0.1\n            while (!passesContrast(tokenColor, backgroundColor)) {\n              tokenColor = makeLighter ? lighten(increment, tokenColor) : darken(increment, tokenColor)\n              increment += 0.1\n            }\n          }\n          setColor(tokenColor)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor(theme.accent1)\n    }\n  }, [backgroundColor, makeLighter, src, theme.accent1, token])\n\n  return color\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { SUPPORTED_V2POOL_CHAIN_IDS } from 'constants/chains'\n\nexport function useNetworkSupportsV2() {\n  const { chainId } = useWeb3React()\n  return chainId && SUPPORTED_V2POOL_CHAIN_IDS.includes(chainId)\n}\n","import { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Currency): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.isToken ? token.address : undefined, false)\n\n  const totalSupplyStr: string | undefined = useSingleCallResult(contract, 'totalSupply')?.result?.[0]?.toString()\n\n  return useMemo(\n    () => (token?.isToken && totalSupplyStr ? CurrencyAmount.fromRawAmount(token, totalSupplyStr) : undefined),\n    [token, totalSupplyStr]\n  )\n}\n","import { Interface } from '@ethersproject/abi'\nimport { Currency, CurrencyAmount, V2_FACTORY_ADDRESSES } from '@uniswap/sdk-core'\nimport IUniswapV2PairJSON from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { computePairAddress, Pair } from '@uniswap/v2-sdk'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairJSON.abi)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function useV2Pairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const tokens = useMemo(\n    () => currencies.map(([currencyA, currencyB]) => [currencyA?.wrapped, currencyB?.wrapped]),\n    [currencies]\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA &&\n          tokenB &&\n          tokenA.chainId === tokenB.chainId &&\n          !tokenA.equals(tokenB) &&\n          V2_FACTORY_ADDRESSES[tokenA.chainId]\n          ? computePairAddress({ factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId], tokenA, tokenB })\n          : undefined\n      }),\n    [tokens]\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(\n          CurrencyAmount.fromRawAmount(token0, reserve0.toString()),\n          CurrencyAmount.fromRawAmount(token1, reserve1.toString())\n        ),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function useV2Pair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  const inputs: [[Currency | undefined, Currency | undefined]] = useMemo(() => [[tokenA, tokenB]], [tokenA, tokenB])\n  return useV2Pairs(inputs)[0]\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { asSupportedChain } from 'constants/chains'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = asSupportedChain(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n"],"names":["FixedHeightRow","styled","RowBetween","StyledPositionCard","LightCard","theme","bgColor","transparentize","surface2","MinimalPositionCard","pair","showUnwrapped","border","account","useWeb3React","currency0","token0","unwrappedToken","currency1","token1","showMore","setShowMore","useState","userPoolBalance","useTokenBalance","undefined","liquidityToken","totalPoolTokens","useTotalSupply","poolTokenPercentage","JSBI","quotient","Percent","token0Deposited","token1Deposited","getLiquidityValue","GrayCard","AutoColumn","gap","RowFixed","Text","fontWeight","fontSize","onClick","DoubleCurrencyLogo","margin","size","symbol","toSignificant","toFixed","marginLeft","ThemedText","DeprecatedSubHeader","style","textAlign","span","role","aria-label","FullPositionCard","stakedBalance","userDefaultPoolBalance","add","backgroundColor","useColor","CardNoise","AutoRow","Dots","marginRight","ButtonEmpty","padding","$borderRadius","width","ChevronUp","height","minWidth","ChevronDown","CurrencyLogo","currency","ButtonSecondary","ExternalLink","href","BIG_INT_ZERO","marginTop","ButtonPrimary","as","Link","to","address","currencyId","TextWrapper","div","neutral3","V2Unsupported","justify","BodySecondary","color","DataCard","CardBGImage","uImage","desaturate","CardBGImageSmaller","xlUnicorn","noise","CardSection","disabled","Break","DEFAULT_COLOR","predefinedTokenColors","async","getColor","image","checkDistance","data","fetch","buffer","arrayBuffer","Buffer","from","type","pixels","PNG","load","decode","JPEG","useTArray","pixelCount","length","transparentPixels","r","g","b","i","Math","floor","sqrt","pow","getAverageColor","headers","get","e","MIN_COLOR_CONTRAST_THRESHOLD","passesContrast","hex","convertColorArrayToString","red","green","blue","rgb","token","makeLighter","useTheme","setColor","accent1","src","useTokenLogoSource","chainId","isNative","useEffect","stale","primarySrc","wrappedToken","colorArray","logoURI","ChainId","MAINNET","error","console","warn","getColorFromToken","then","tokenColor","increment","lighten","darken","useNetworkSupportsV2","SUPPORTED_V2POOL_CHAIN_IDS","includes","contract","useTokenContract","isToken","totalSupplyStr","useSingleCallResult","result","toString","useMemo","CurrencyAmount","fromRawAmount","PAIR_INTERFACE","Interface","IUniswapV2PairJSON","useV2Pairs","currencies","tokens","map","currencyA","currencyB","wrapped","pairAddresses","tokenA","tokenB","equals","V2_FACTORY_ADDRESSES","computePairAddress","factoryAddress","results","useMultipleContractSingleData","reserves","loading","PairState","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","EXISTS","Pair","useV2Pair","formattedChainId","asSupportedChain","WRAPPED_NATIVE_CURRENCY","nativeOnChain"],"sourceRoot":""}