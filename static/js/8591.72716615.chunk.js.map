{"version":3,"file":"static/js/8591.72716615.chunk.js","mappings":"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","sources":["graphql/thegraph/FeeTierDistributionQuery.ts","hooks/useFeeTierDistribution.ts","components/FeeSelector/FeeTierPercentageBadge.tsx","components/FeeSelector/shared.tsx","components/FeeSelector/FeeOption.tsx","components/FeeSelector/index.tsx","../node_modules/react-feather/dist/icons/minus.js","components/InputStepCounter/InputStepCounter.tsx","components/RangeSelector/index.tsx","lib/hooks/useApproval.ts","hooks/useApproveCallback.ts","hooks/useIsArgentWallet.ts","pages/AddLiquidity/styled.tsx","pages/AppBody.tsx","utils/getTickToPrice.ts","state/mint/v3/utils.ts","state/mint/v3/hooks.tsx","utils/unwrappedToken.ts","../node_modules/react-feather/dist/icons/plus.js"],"sourcesContent":["import { ApolloError, useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport { useMemo } from 'react'\n\nimport { FeeTierDistributionQuery } from './__generated__/types-and-hooks'\nimport { apolloClient } from './apollo'\n\nconst query = gql`\n  query FeeTierDistribution($token0: String!, $token1: String!) {\n    _meta {\n      block {\n        number\n      }\n    }\n    asToken0: pools(\n      orderBy: totalValueLockedToken0\n      orderDirection: desc\n      where: { token0: $token0, token1: $token1 }\n    ) {\n      feeTier\n      totalValueLockedToken0\n      totalValueLockedToken1\n    }\n    asToken1: pools(\n      orderBy: totalValueLockedToken0\n      orderDirection: desc\n      where: { token0: $token1, token1: $token0 }\n    ) {\n      feeTier\n      totalValueLockedToken0\n      totalValueLockedToken1\n    }\n  }\n`\n\nexport default function useFeeTierDistributionQuery(\n  token0: string | undefined,\n  token1: string | undefined,\n  interval: number\n): { error?: ApolloError; isLoading: boolean; data: FeeTierDistributionQuery } {\n  const {\n    data,\n    loading: isLoading,\n    error,\n  } = useQuery(query, {\n    variables: {\n      token0: token0?.toLowerCase(),\n      token1: token1?.toLowerCase(),\n    },\n    pollInterval: interval,\n    client: apolloClient,\n  })\n\n  return useMemo(\n    () => ({\n      error,\n      isLoading,\n      data,\n    }),\n    [data, error, isLoading]\n  )\n}\n","import { Currency, Token } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport ms from 'ms'\nimport { useMemo } from 'react'\n\nimport useFeeTierDistributionQuery from '../graphql/thegraph/FeeTierDistributionQuery'\nimport { PoolState, usePool } from './usePools'\n\n// maximum number of blocks past which we consider the data stale\nconst MAX_DATA_BLOCK_AGE = 20\n\ninterface FeeTierDistribution {\n  isLoading: boolean\n  isError: boolean\n  largestUsageFeeTier?: FeeAmount\n\n  // distributions as percentages of overall liquidity\n  distributions?: Record<FeeAmount, number | undefined>\n}\n\nexport function useFeeTierDistribution(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): FeeTierDistribution {\n  const { isLoading, error, distributions } = usePoolTVL(currencyA?.wrapped, currencyB?.wrapped)\n\n  // fetch all pool states to determine pool state\n  const [poolStateVeryLow] = usePool(currencyA, currencyB, FeeAmount.LOWEST)\n  const [poolStateLow] = usePool(currencyA, currencyB, FeeAmount.LOW)\n  const [poolStateMedium] = usePool(currencyA, currencyB, FeeAmount.MEDIUM)\n  const [poolStateHigh] = usePool(currencyA, currencyB, FeeAmount.HIGH)\n\n  return useMemo(() => {\n    if (isLoading || error || !distributions) {\n      return {\n        isLoading,\n        isError: !!error,\n        distributions,\n      }\n    }\n\n    const largestUsageFeeTier = Object.keys(distributions)\n      .map((d) => Number(d))\n      .filter((d: FeeAmount) => distributions[d] !== 0 && distributions[d] !== undefined)\n      .reduce((a: FeeAmount, b: FeeAmount) => ((distributions[a] ?? 0) > (distributions[b] ?? 0) ? a : b), -1)\n\n    const percentages =\n      !isLoading &&\n      !error &&\n      distributions &&\n      poolStateVeryLow !== PoolState.LOADING &&\n      poolStateLow !== PoolState.LOADING &&\n      poolStateMedium !== PoolState.LOADING &&\n      poolStateHigh !== PoolState.LOADING\n        ? {\n            [FeeAmount.LOWEST]:\n              poolStateVeryLow === PoolState.EXISTS ? (distributions[FeeAmount.LOWEST] ?? 0) * 100 : undefined,\n            [FeeAmount.LOW]: poolStateLow === PoolState.EXISTS ? (distributions[FeeAmount.LOW] ?? 0) * 100 : undefined,\n            [FeeAmount.MEDIUM]:\n              poolStateMedium === PoolState.EXISTS ? (distributions[FeeAmount.MEDIUM] ?? 0) * 100 : undefined,\n            [FeeAmount.HIGH]:\n              poolStateHigh === PoolState.EXISTS ? (distributions[FeeAmount.HIGH] ?? 0) * 100 : undefined,\n          }\n        : undefined\n\n    return {\n      isLoading,\n      isError: !!error,\n      distributions: percentages,\n      largestUsageFeeTier: largestUsageFeeTier === -1 ? undefined : largestUsageFeeTier,\n    }\n  }, [isLoading, error, distributions, poolStateVeryLow, poolStateLow, poolStateMedium, poolStateHigh])\n}\n\nfunction usePoolTVL(token0: Token | undefined, token1: Token | undefined) {\n  const latestBlock = useBlockNumber()\n  const { isLoading, error, data } = useFeeTierDistributionQuery(token0?.address, token1?.address, ms(`30s`))\n\n  const { asToken0, asToken1, _meta } = data ?? {}\n\n  return useMemo(() => {\n    if (!latestBlock || !_meta || !asToken0 || !asToken1) {\n      return {\n        isLoading,\n        error,\n      }\n    }\n\n    if (latestBlock - (_meta?.block?.number ?? 0) > MAX_DATA_BLOCK_AGE) {\n      console.log(`Graph stale (latest block: ${latestBlock})`)\n      return {\n        isLoading,\n        error,\n      }\n    }\n\n    const all = asToken0.concat(asToken1)\n\n    // sum tvl for token0 and token1 by fee tier\n    const tvlByFeeTier = all.reduce<{ [feeAmount: number]: [number | undefined, number | undefined] }>(\n      (acc, value) => {\n        acc[value.feeTier][0] = (acc[value.feeTier][0] ?? 0) + Number(value.totalValueLockedToken0)\n        acc[value.feeTier][1] = (acc[value.feeTier][1] ?? 0) + Number(value.totalValueLockedToken1)\n        return acc\n      },\n      {\n        [FeeAmount.LOWEST]: [undefined, undefined],\n        [FeeAmount.LOW]: [undefined, undefined],\n        [FeeAmount.MEDIUM]: [undefined, undefined],\n        [FeeAmount.HIGH]: [undefined, undefined],\n      } as Record<FeeAmount, [number | undefined, number | undefined]>\n    )\n\n    // sum total tvl for token0 and token1\n    const [sumToken0Tvl, sumToken1Tvl] = Object.values(tvlByFeeTier).reduce(\n      (acc: [number, number], value) => {\n        acc[0] += value[0] ?? 0\n        acc[1] += value[1] ?? 0\n        return acc\n      },\n      [0, 0]\n    )\n\n    // returns undefined if both tvl0 and tvl1 are undefined (pool not created)\n    const mean = (tvl0: number | undefined, sumTvl0: number, tvl1: number | undefined, sumTvl1: number) =>\n      tvl0 === undefined && tvl1 === undefined ? undefined : ((tvl0 ?? 0) + (tvl1 ?? 0)) / (sumTvl0 + sumTvl1) || 0\n\n    const distributions: Record<FeeAmount, number | undefined> = {\n      [FeeAmount.LOWEST]: mean(\n        tvlByFeeTier[FeeAmount.LOWEST][0],\n        sumToken0Tvl,\n        tvlByFeeTier[FeeAmount.LOWEST][1],\n        sumToken1Tvl\n      ),\n      [FeeAmount.LOW]: mean(tvlByFeeTier[FeeAmount.LOW][0], sumToken0Tvl, tvlByFeeTier[FeeAmount.LOW][1], sumToken1Tvl),\n      [FeeAmount.MEDIUM]: mean(\n        tvlByFeeTier[FeeAmount.MEDIUM][0],\n        sumToken0Tvl,\n        tvlByFeeTier[FeeAmount.MEDIUM][1],\n        sumToken1Tvl\n      ),\n      [FeeAmount.HIGH]: mean(\n        tvlByFeeTier[FeeAmount.HIGH][0],\n        sumToken0Tvl,\n        tvlByFeeTier[FeeAmount.HIGH][1],\n        sumToken1Tvl\n      ),\n    }\n\n    return {\n      isLoading,\n      error,\n      distributions,\n    }\n  }, [_meta, asToken0, asToken1, isLoading, error, latestBlock])\n}\n","import { Trans } from '@lingui/macro'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport Badge from 'components/Badge'\nimport { useFeeTierDistribution } from 'hooks/useFeeTierDistribution'\nimport { PoolState } from 'hooks/usePools'\nimport React from 'react'\nimport { ThemedText } from 'theme/components'\n\nexport function FeeTierPercentageBadge({\n  feeAmount,\n  distributions,\n  poolState,\n}: {\n  feeAmount: FeeAmount\n  distributions: ReturnType<typeof useFeeTierDistribution>['distributions']\n  poolState: PoolState\n}) {\n  return (\n    <Badge>\n      <ThemedText.DeprecatedLabel fontSize={10}>\n        {!distributions || poolState === PoolState.NOT_EXISTS || poolState === PoolState.INVALID ? (\n          <Trans>Not created</Trans>\n        ) : distributions[feeAmount] !== undefined ? (\n          <Trans>{distributions[feeAmount]?.toFixed(0)}% select</Trans>\n        ) : (\n          <Trans>No data</Trans>\n        )}\n      </ThemedText.DeprecatedLabel>\n    </Badge>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ChainId, SUPPORTED_CHAINS } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport type { ReactNode } from 'react'\n\nexport const FEE_AMOUNT_DETAIL: Record<\n  FeeAmount,\n  { label: string; description: ReactNode; supportedChains: readonly ChainId[] }\n> = {\n  [FeeAmount.LOWEST]: {\n    label: '0.01',\n    description: <Trans>Best for very stable pairs.</Trans>,\n    supportedChains: [\n      ChainId.ARBITRUM_ONE,\n      ChainId.BNB,\n      ChainId.CELO,\n      ChainId.CELO_ALFAJORES,\n      ChainId.MAINNET,\n      ChainId.OPTIMISM,\n      ChainId.POLYGON,\n      ChainId.POLYGON_MUMBAI,\n      ChainId.AVALANCHE,\n      ChainId.BASE,\n    ],\n  },\n  [FeeAmount.LOW]: {\n    label: '0.05',\n    description: <Trans>Best for stable pairs.</Trans>,\n    supportedChains: SUPPORTED_CHAINS,\n  },\n  [FeeAmount.MEDIUM]: {\n    label: '0.3',\n    description: <Trans>Best for most pairs.</Trans>,\n    supportedChains: SUPPORTED_CHAINS,\n  },\n  [FeeAmount.HIGH]: {\n    label: '1',\n    description: <Trans>Best for exotic pairs.</Trans>,\n    supportedChains: SUPPORTED_CHAINS,\n  },\n}\n","import { Trans } from '@lingui/macro'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { ButtonRadioChecked } from 'components/Button'\nimport { AutoColumn } from 'components/Column'\nimport { useFeeTierDistribution } from 'hooks/useFeeTierDistribution'\nimport { PoolState } from 'hooks/usePools'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { useFormatter } from 'utils/formatNumbers'\n\nimport { FeeTierPercentageBadge } from './FeeTierPercentageBadge'\nimport { FEE_AMOUNT_DETAIL } from './shared'\n\nconst ResponsiveText = styled(ThemedText.DeprecatedLabel)`\n  line-height: 16px;\n  font-size: 14px;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 12px;\n    line-height: 12px;\n  `};\n`\n\ninterface FeeOptionProps {\n  feeAmount: FeeAmount\n  active: boolean\n  distributions: ReturnType<typeof useFeeTierDistribution>['distributions']\n  poolState: PoolState\n  onClick: () => void\n}\n\nexport function FeeOption({ feeAmount, active, poolState, distributions, onClick }: FeeOptionProps) {\n  const { formatDelta } = useFormatter()\n\n  return (\n    <ButtonRadioChecked active={active} onClick={onClick}>\n      <AutoColumn gap=\"sm\" justify=\"flex-start\">\n        <AutoColumn justify=\"flex-start\" gap=\"6px\">\n          <ResponsiveText>\n            <Trans>{formatDelta(parseFloat(FEE_AMOUNT_DETAIL[feeAmount].label))}</Trans>\n          </ResponsiveText>\n          <ThemedText.DeprecatedMain fontWeight={485} fontSize=\"12px\" textAlign=\"left\">\n            {FEE_AMOUNT_DETAIL[feeAmount].description}\n          </ThemedText.DeprecatedMain>\n        </AutoColumn>\n\n        {distributions && (\n          <FeeTierPercentageBadge distributions={distributions} feeAmount={feeAmount} poolState={poolState} />\n        )}\n      </AutoColumn>\n    </ButtonRadioChecked>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { FeePoolSelectAction, LiquidityEventName } from '@uniswap/analytics-events'\nimport { Currency } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { sendAnalyticsEvent, useTrace } from 'analytics'\nimport { ButtonGray } from 'components/Button'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween } from 'components/Row'\nimport { useFeeTierDistribution } from 'hooks/useFeeTierDistribution'\nimport { PoolState, usePools } from 'hooks/usePools'\nimport usePrevious from 'hooks/usePrevious'\nimport { DynamicSection } from 'pages/AddLiquidity/styled'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { Box } from 'rebass'\nimport styled, { keyframes } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { useFormatter } from 'utils/formatNumbers'\n\nimport { FeeOption } from './FeeOption'\nimport { FeeTierPercentageBadge } from './FeeTierPercentageBadge'\nimport { FEE_AMOUNT_DETAIL } from './shared'\n\nconst pulse = (color: string) => keyframes`\n  0% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n\n  70% {\n    box-shadow: 0 0 0 2px ${color};\n  }\n\n  100% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n`\nconst FocusedOutlineCard = styled(Card)<{ pulsing: boolean }>`\n  border: 1px solid ${({ theme }) => theme.surface3};\n  animation: ${({ pulsing, theme }) => pulsing && pulse(theme.accent1)} 0.6s linear;\n  align-self: center;\n`\n\nconst Select = styled.div`\n  align-items: flex-start;\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 8px;\n`\n\nexport default function FeeSelector({\n  disabled = false,\n  feeAmount,\n  handleFeePoolSelect,\n  currencyA,\n  currencyB,\n}: {\n  disabled?: boolean\n  feeAmount?: FeeAmount\n  handleFeePoolSelect: (feeAmount: FeeAmount) => void\n  currencyA?: Currency\n  currencyB?: Currency\n}) {\n  const { chainId } = useWeb3React()\n  const trace = useTrace()\n  const { formatDelta } = useFormatter()\n\n  const { isLoading, isError, largestUsageFeeTier, distributions } = useFeeTierDistribution(currencyA, currencyB)\n\n  // get pool data on-chain for latest states\n  const pools = usePools([\n    [currencyA, currencyB, FeeAmount.LOWEST],\n    [currencyA, currencyB, FeeAmount.LOW],\n    [currencyA, currencyB, FeeAmount.MEDIUM],\n    [currencyA, currencyB, FeeAmount.HIGH],\n  ])\n\n  const poolsByFeeTier: Record<FeeAmount, PoolState> = useMemo(\n    () =>\n      pools.reduce(\n        (acc, [curPoolState, curPool]) => {\n          acc = {\n            ...acc,\n            ...{ [curPool?.fee as FeeAmount]: curPoolState },\n          }\n          return acc\n        },\n        {\n          // default all states to NOT_EXISTS\n          [FeeAmount.LOWEST]: PoolState.NOT_EXISTS,\n          [FeeAmount.LOW]: PoolState.NOT_EXISTS,\n          [FeeAmount.MEDIUM]: PoolState.NOT_EXISTS,\n          [FeeAmount.HIGH]: PoolState.NOT_EXISTS,\n        }\n      ),\n    [pools]\n  )\n\n  const [showOptions, setShowOptions] = useState(false)\n  const [pulsing, setPulsing] = useState(false)\n\n  const previousFeeAmount = usePrevious(feeAmount)\n\n  const recommended = useRef(false)\n\n  const handleFeePoolSelectWithEvent = useCallback(\n    (fee: FeeAmount) => {\n      sendAnalyticsEvent(LiquidityEventName.SELECT_LIQUIDITY_POOL_FEE_TIER, {\n        action: FeePoolSelectAction.MANUAL,\n        ...trace,\n      })\n      handleFeePoolSelect(fee)\n    },\n    [handleFeePoolSelect, trace]\n  )\n\n  useEffect(() => {\n    if (feeAmount || isLoading || isError) {\n      return\n    }\n\n    if (!largestUsageFeeTier) {\n      // cannot recommend, open options\n      setShowOptions(true)\n    } else {\n      setShowOptions(false)\n\n      recommended.current = true\n      sendAnalyticsEvent(LiquidityEventName.SELECT_LIQUIDITY_POOL_FEE_TIER, {\n        action: FeePoolSelectAction.RECOMMENDED,\n        ...trace,\n      })\n\n      handleFeePoolSelect(largestUsageFeeTier)\n    }\n  }, [feeAmount, isLoading, isError, largestUsageFeeTier, handleFeePoolSelect, trace])\n\n  useEffect(() => {\n    setShowOptions(isError)\n  }, [isError])\n\n  useEffect(() => {\n    if (feeAmount && previousFeeAmount !== feeAmount) {\n      setPulsing(true)\n    }\n  }, [previousFeeAmount, feeAmount])\n\n  return (\n    <AutoColumn gap=\"16px\">\n      <DynamicSection gap=\"md\" disabled={disabled}>\n        <FocusedOutlineCard pulsing={pulsing} onAnimationEnd={() => setPulsing(false)}>\n          <RowBetween>\n            <AutoColumn id=\"add-liquidity-selected-fee\">\n              {!feeAmount ? (\n                <>\n                  <ThemedText.DeprecatedLabel>\n                    <Trans>Fee tier</Trans>\n                  </ThemedText.DeprecatedLabel>\n                  <ThemedText.DeprecatedMain fontWeight={485} fontSize=\"12px\" textAlign=\"left\">\n                    <Trans>The % you will earn in fees.</Trans>\n                  </ThemedText.DeprecatedMain>\n                </>\n              ) : (\n                <>\n                  <ThemedText.DeprecatedLabel className=\"selected-fee-label\">\n                    <Trans>{formatDelta(parseFloat(FEE_AMOUNT_DETAIL[feeAmount].label))} fee tier</Trans>\n                  </ThemedText.DeprecatedLabel>\n                  <Box style={{ width: 'fit-content', marginTop: '8px' }} className=\"selected-fee-percentage\">\n                    {distributions && (\n                      <FeeTierPercentageBadge\n                        distributions={distributions}\n                        feeAmount={feeAmount}\n                        poolState={poolsByFeeTier[feeAmount]}\n                      />\n                    )}\n                  </Box>\n                </>\n              )}\n            </AutoColumn>\n\n            <ButtonGray onClick={() => setShowOptions(!showOptions)} width=\"auto\" padding=\"4px\" $borderRadius=\"6px\">\n              {showOptions ? <Trans>Hide</Trans> : <Trans>Edit</Trans>}\n            </ButtonGray>\n          </RowBetween>\n        </FocusedOutlineCard>\n\n        {chainId && showOptions && (\n          <Select>\n            {[FeeAmount.LOWEST, FeeAmount.LOW, FeeAmount.MEDIUM, FeeAmount.HIGH].map((_feeAmount, i) => {\n              const { supportedChains } = FEE_AMOUNT_DETAIL[_feeAmount]\n              if (supportedChains.includes(chainId)) {\n                return (\n                  <FeeOption\n                    feeAmount={_feeAmount}\n                    active={feeAmount === _feeAmount}\n                    onClick={() => handleFeePoolSelectWithEvent(_feeAmount)}\n                    distributions={distributions}\n                    poolState={poolsByFeeTier[_feeAmount]}\n                    key={i}\n                  />\n                )\n              }\n              return null\n            })}\n          </Select>\n        )}\n      </DynamicSection>\n    </AutoColumn>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Minus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nMinus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nMinus.displayName = 'Minus';\nexport default Minus;","import { Trans } from '@lingui/macro'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { ButtonGray } from 'components/Button'\nimport { OutlineCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { ReactNode, useCallback, useEffect, useState } from 'react'\nimport { Minus, Plus } from 'react-feather'\nimport styled, { keyframes } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { Input as NumericalInput } from '../NumericalInput'\n\nconst pulse = (color: string) => keyframes`\n  0% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n\n  70% {\n    box-shadow: 0 0 0 2px ${color};\n  }\n\n  100% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n`\n\nconst InputRow = styled.div`\n  display: flex;\n`\n\nconst SmallButton = styled(ButtonGray)`\n  border-radius: 8px;\n  padding: 4px;\n`\n\nconst FocusedOutlineCard = styled(OutlineCard)<{ active?: boolean; pulsing?: boolean }>`\n  border-color: ${({ active, theme }) => active && theme.deprecated_stateOverlayPressed};\n  padding: 12px;\n  animation: ${({ pulsing, theme }) => pulsing && pulse(theme.accent1)} 0.8s linear;\n`\n\nconst StyledInput = styled(NumericalInput)<{ usePercent?: boolean }>`\n  background-color: transparent;\n  font-weight: 535;\n  text-align: left;\n  width: 100%;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 16px;\n  `};\n`\n\nconst InputColumn = styled(AutoColumn)`\n  width: 100%;\n`\n\nconst InputTitle = styled(ThemedText.DeprecatedSmall)`\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 12px;\n  font-weight: 535;\n`\n\nconst ButtonLabel = styled(ThemedText.DeprecatedWhite)<{ disabled: boolean }>`\n  color: ${({ theme, disabled }) => (disabled ? theme.neutral2 : theme.neutral1)} !important;\n  display: flex;\n`\n\ninterface StepCounterProps {\n  value: string\n  onUserInput: (value: string) => void\n  decrement: () => string\n  increment: () => string\n  decrementDisabled?: boolean\n  incrementDisabled?: boolean\n  feeAmount?: FeeAmount\n  label?: string\n  width?: string\n  locked?: boolean // disable input\n  title: ReactNode\n  tokenA?: string\n  tokenB?: string\n}\n\nconst StepCounter = ({\n  value,\n  decrement,\n  increment,\n  decrementDisabled = false,\n  incrementDisabled = false,\n  width,\n  locked,\n  onUserInput,\n  title,\n  tokenA,\n  tokenB,\n}: StepCounterProps) => {\n  //  for focus state, styled components doesnt let you select input parent container\n  const [active, setActive] = useState(false)\n\n  // let user type value and only update parent value on blur\n  const [localValue, setLocalValue] = useState('')\n  const [useLocalValue, setUseLocalValue] = useState(false)\n\n  // animation if parent value updates local value\n  const [pulsing, setPulsing] = useState<boolean>(false)\n\n  const handleOnFocus = () => {\n    setUseLocalValue(true)\n    setActive(true)\n  }\n\n  const handleOnBlur = useCallback(() => {\n    setUseLocalValue(false)\n    setActive(false)\n    onUserInput(localValue) // trigger update on parent value\n  }, [localValue, onUserInput])\n\n  // for button clicks\n  const handleDecrement = useCallback(() => {\n    setUseLocalValue(false)\n    onUserInput(decrement())\n  }, [decrement, onUserInput])\n\n  const handleIncrement = useCallback(() => {\n    setUseLocalValue(false)\n    onUserInput(increment())\n  }, [increment, onUserInput])\n\n  useEffect(() => {\n    if (localValue !== value && !useLocalValue) {\n      setTimeout(() => {\n        setLocalValue(value) // reset local value to match parent\n        setPulsing(true) // trigger animation\n        setTimeout(function () {\n          setPulsing(false)\n        }, 1800)\n      }, 0)\n    }\n  }, [localValue, useLocalValue, value])\n\n  return (\n    <FocusedOutlineCard pulsing={pulsing} active={active} onFocus={handleOnFocus} onBlur={handleOnBlur} width={width}>\n      <InputRow>\n        <InputColumn justify=\"flex-start\">\n          <InputTitle fontSize={12} textAlign=\"center\">\n            {title}\n          </InputTitle>\n          <StyledInput\n            className=\"rate-input-0\"\n            value={localValue}\n            fontSize=\"20px\"\n            disabled={locked}\n            onUserInput={(val) => {\n              setLocalValue(val)\n            }}\n          />\n          <InputTitle fontSize={12} textAlign=\"left\">\n            <Trans>\n              {tokenB} per {tokenA}\n            </Trans>\n          </InputTitle>\n        </InputColumn>\n\n        <AutoColumn gap=\"8px\">\n          {!locked && (\n            <SmallButton data-testid=\"increment-price-range\" onClick={handleIncrement} disabled={incrementDisabled}>\n              <ButtonLabel disabled={incrementDisabled} fontSize=\"12px\">\n                <Plus size={18} />\n              </ButtonLabel>\n            </SmallButton>\n          )}\n          {!locked && (\n            <SmallButton data-testid=\"decrement-price-range\" onClick={handleDecrement} disabled={decrementDisabled}>\n              <ButtonLabel disabled={decrementDisabled} fontSize=\"12px\">\n                <Minus size={18} />\n              </ButtonLabel>\n            </SmallButton>\n          )}\n        </AutoColumn>\n      </InputRow>\n    </FocusedOutlineCard>\n  )\n}\n\nexport default StepCounter\n","import { Trans } from '@lingui/macro'\nimport { Currency, Price, Token } from '@uniswap/sdk-core'\nimport StepCounter from 'components/InputStepCounter/InputStepCounter'\nimport { AutoRow } from 'components/Row'\nimport { Bound } from 'state/mint/v3/actions'\n\n// currencyA is the base token\nexport default function RangeSelector({\n  priceLower,\n  priceUpper,\n  onLeftRangeInput,\n  onRightRangeInput,\n  getDecrementLower,\n  getIncrementLower,\n  getDecrementUpper,\n  getIncrementUpper,\n  currencyA,\n  currencyB,\n  feeAmount,\n  ticksAtLimit,\n}: {\n  priceLower?: Price<Token, Token>\n  priceUpper?: Price<Token, Token>\n  getDecrementLower: () => string\n  getIncrementLower: () => string\n  getDecrementUpper: () => string\n  getIncrementUpper: () => string\n  onLeftRangeInput: (typedValue: string) => void\n  onRightRangeInput: (typedValue: string) => void\n  currencyA?: Currency | null\n  currencyB?: Currency | null\n  feeAmount?: number\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n}) {\n  const tokenA = (currencyA ?? undefined)?.wrapped\n  const tokenB = (currencyB ?? undefined)?.wrapped\n  const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB)\n\n  const leftPrice = isSorted ? priceLower : priceUpper?.invert()\n  const rightPrice = isSorted ? priceUpper : priceLower?.invert()\n\n  return (\n    <AutoRow gap=\"md\">\n      <StepCounter\n        value={ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] ? '0' : leftPrice?.toSignificant(8) ?? ''}\n        onUserInput={onLeftRangeInput}\n        decrement={isSorted ? getDecrementLower : getIncrementUpper}\n        increment={isSorted ? getIncrementLower : getDecrementUpper}\n        decrementDisabled={leftPrice === undefined || ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]}\n        incrementDisabled={leftPrice === undefined || ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]}\n        feeAmount={feeAmount}\n        label={leftPrice ? `${currencyB?.symbol}` : '-'}\n        title={<Trans>Low price</Trans>}\n        tokenA={currencyA?.symbol}\n        tokenB={currencyB?.symbol}\n      />\n      <StepCounter\n        value={ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] ? '∞' : rightPrice?.toSignificant(8) ?? ''}\n        onUserInput={onRightRangeInput}\n        decrement={isSorted ? getDecrementUpper : getIncrementLower}\n        increment={isSorted ? getIncrementUpper : getDecrementLower}\n        incrementDisabled={rightPrice === undefined || ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]}\n        decrementDisabled={rightPrice === undefined || ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]}\n        feeAmount={feeAmount}\n        label={rightPrice ? `${currencyB?.symbol}` : '-'}\n        tokenA={currencyA?.symbol}\n        tokenB={currencyB?.symbol}\n        title={<Trans>High price</Trans>}\n      />\n    </AutoRow>\n  )\n}\n","import { MaxUint256 } from '@ethersproject/constants'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { InterfaceEventName } from '@uniswap/analytics-events'\nimport { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { sendAnalyticsEvent } from 'analytics'\nimport { useTokenContract } from 'hooks/useContract'\nimport { useTokenAllowance } from 'hooks/useTokenAllowance'\nimport { getTokenAddress } from 'lib/utils/analytics'\nimport { useCallback, useMemo } from 'react'\nimport { calculateGasMargin } from 'utils/calculateGasMargin'\n\nexport enum ApprovalState {\n  UNKNOWN = 'UNKNOWN',\n  NOT_APPROVED = 'NOT_APPROVED',\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n}\n\nfunction useApprovalStateForSpender(\n  amountToApprove: CurrencyAmount<Currency> | undefined,\n  spender: string | undefined,\n  useIsPendingApproval: (token?: Token, spender?: string) => boolean\n): ApprovalState {\n  const { account } = useWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n\n  const { tokenAllowance } = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useIsPendingApproval(token, spender)\n\n  return useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency.isNative) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!tokenAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if tokenAllowance is\n    return tokenAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, pendingApproval, spender, tokenAllowance])\n}\n\nexport function useApproval(\n  amountToApprove: CurrencyAmount<Currency> | undefined,\n  spender: string | undefined,\n  useIsPendingApproval: (token?: Token, spender?: string) => boolean\n): [\n  ApprovalState,\n  () => Promise<\n    | { response: TransactionResponse; tokenAddress: string; spenderAddress: string; amount: CurrencyAmount<Currency> }\n    | undefined\n  >\n] {\n  const { chainId } = useWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n\n  // check the current approval status\n  const approvalState = useApprovalStateForSpender(amountToApprove, spender, useIsPendingApproval)\n\n  const tokenContract = useTokenContract(token?.address)\n\n  const approve = useCallback(async () => {\n    function logFailure(error: Error | string): undefined {\n      console.warn(`${token?.symbol || 'Token'} approval failed:`, error)\n      return\n    }\n\n    // Bail early if there is an issue.\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      return logFailure('approve was called unnecessarily')\n    } else if (!chainId) {\n      return logFailure('no chainId')\n    } else if (!token) {\n      return logFailure('no token')\n    } else if (!tokenContract) {\n      return logFailure('tokenContract is null')\n    } else if (!amountToApprove) {\n      return logFailure('missing amount to approve')\n    } else if (!spender) {\n      return logFailure('no spender')\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens which restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.quotient.toString())\n    })\n\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.quotient.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response) => {\n        const eventProperties = {\n          chain_id: chainId,\n          token_symbol: token?.symbol,\n          token_address: getTokenAddress(token),\n        }\n        sendAnalyticsEvent(InterfaceEventName.APPROVE_TOKEN_TXN_SUBMITTED, eventProperties)\n        return {\n          response,\n          tokenAddress: token.address,\n          spenderAddress: spender,\n          amount: amountToApprove,\n        }\n      })\n      .catch((error: Error) => {\n        logFailure(error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, chainId])\n\n  return [approvalState, approve]\n}\n","import { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { ApprovalState, useApproval } from 'lib/hooks/useApproval'\nimport { useCallback } from 'react'\n\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks'\nimport { TransactionType } from '../state/transactions/types'\nexport { ApprovalState } from 'lib/hooks/useApproval'\n\nfunction useGetAndTrackApproval(getApproval: ReturnType<typeof useApproval>[1]) {\n  const addTransaction = useTransactionAdder()\n  return useCallback(() => {\n    return getApproval().then((pending) => {\n      if (pending) {\n        const { response, tokenAddress, spenderAddress: spender, amount } = pending\n        addTransaction(response, {\n          type: TransactionType.APPROVAL,\n          tokenAddress,\n          spender,\n          amount: amount.quotient.toString(),\n        })\n      }\n    })\n  }, [addTransaction, getApproval])\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount<Currency>,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const [approval, getApproval] = useApproval(amountToApprove, spender, useHasPendingApproval)\n  return [approval, useGetAndTrackApproval(getApproval)]\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { NEVER_RELOAD, useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useArgentWalletDetectorContract } from './useContract'\n\nexport default function useIsArgentWallet(): boolean {\n  const { account } = useWeb3React()\n  const argentWalletDetector = useArgentWalletDetectorContract()\n  const inputs = useMemo(() => [account ?? undefined], [account])\n  const call = useSingleCallResult(argentWalletDetector, 'isArgentWallet', inputs, NEVER_RELOAD)\n  return Boolean(call?.result?.[0])\n}\n","import { AutoColumn } from 'components/Column'\nimport { Input } from 'components/NumericalInput'\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 26px 16px;\n`\n\nexport const ScrollablePage = styled.div`\n  padding: 20px 8px 0px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    margin: 0 auto;\n  `};\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    padding: 48px 8px 0px;\n  }\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    padding-top: 20px;\n  }\n`\n\nexport const DynamicSection = styled(AutoColumn)<{ disabled?: boolean }>`\n  opacity: ${({ disabled }) => (disabled ? '0.2' : '1')};\n  pointer-events: ${({ disabled }) => (disabled ? 'none' : 'initial')};\n`\n\nexport const StyledInput = styled(Input)`\n  background-color: ${({ theme }) => theme.surface1};\n  text-align: left;\n  font-size: 18px;\n  width: 100%;\n`\n\n/* two-column layout where DepositAmount is moved at the very end on mobile. */\nexport const ResponsiveTwoColumns = styled.div<{ wide: boolean }>`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding-top: 20px;\n\n  border-top: 1px solid ${({ theme }) => theme.surface3};\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    margin-top: 0;\n  `};\n`\n\nexport const MediumOnly = styled.div`\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    display: none;\n  `};\n`\n","import { PropsWithChildren } from 'react'\nimport styled from 'styled-components'\nimport { Z_INDEX } from 'theme/zIndex'\n\ninterface BodyWrapperProps {\n  $margin?: string\n  $maxWidth?: string\n}\n\nexport const BodyWrapper = styled.main<BodyWrapperProps>`\n  position: relative;\n  margin-top: ${({ $margin }) => $margin ?? '0px'};\n  max-width: ${({ $maxWidth }) => $maxWidth ?? '420px'};\n  width: 100%;\n  background: ${({ theme }) => theme.surface1};\n  border-radius: 16px;\n  border: 1px solid ${({ theme }) => theme.surface3};\n  margin-top: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  z-index: ${Z_INDEX.default};\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody(props: PropsWithChildren<BodyWrapperProps>) {\n  return <BodyWrapper {...props} />\n}\n","import { Price, Token } from '@uniswap/sdk-core'\nimport { tickToPrice } from '@uniswap/v3-sdk'\n\nexport function getTickToPrice(baseToken?: Token, quoteToken?: Token, tick?: number): Price<Token, Token> | undefined {\n  if (!baseToken || !quoteToken || typeof tick !== 'number') {\n    return undefined\n  }\n  return tickToPrice(baseToken, quoteToken, tick)\n}\n","import { Price, Token } from '@uniswap/sdk-core'\nimport {\n  encodeSqrtRatioX96,\n  FeeAmount,\n  nearestUsableTick,\n  priceToClosestTick,\n  TICK_SPACINGS,\n  TickMath,\n} from '@uniswap/v3-sdk'\nimport JSBI from 'jsbi'\n\nexport function tryParsePrice(baseToken?: Token, quoteToken?: Token, value?: string) {\n  if (!baseToken || !quoteToken || !value) {\n    return undefined\n  }\n\n  if (!value.match(/^\\d*\\.?\\d+$/)) {\n    return undefined\n  }\n\n  const [whole, fraction] = value.split('.')\n\n  const decimals = fraction?.length ?? 0\n  const withoutDecimals = JSBI.BigInt((whole ?? '') + (fraction ?? ''))\n\n  return new Price(\n    baseToken,\n    quoteToken,\n    JSBI.multiply(JSBI.BigInt(10 ** decimals), JSBI.BigInt(10 ** baseToken.decimals)),\n    JSBI.multiply(withoutDecimals, JSBI.BigInt(10 ** quoteToken.decimals))\n  )\n}\n\nexport function tryParseTick(\n  baseToken?: Token,\n  quoteToken?: Token,\n  feeAmount?: FeeAmount,\n  value?: string\n): number | undefined {\n  if (!baseToken || !quoteToken || !feeAmount || !value) {\n    return undefined\n  }\n\n  const price = tryParsePrice(baseToken, quoteToken, value)\n\n  if (!price) {\n    return undefined\n  }\n\n  let tick: number\n\n  // check price is within min/max bounds, if outside return min/max\n  const sqrtRatioX96 = encodeSqrtRatioX96(price.numerator, price.denominator)\n\n  if (JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)) {\n    tick = TickMath.MAX_TICK\n  } else if (JSBI.lessThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO)) {\n    tick = TickMath.MIN_TICK\n  } else {\n    // this function is agnostic to the base, will always return the correct tick\n    tick = priceToClosestTick(price)\n  }\n\n  return nearestUsableTick(tick, TICK_SPACINGS[feeAmount])\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Price, Rounding, Token } from '@uniswap/sdk-core'\nimport {\n  encodeSqrtRatioX96,\n  FeeAmount,\n  nearestUsableTick,\n  Pool,\n  Position,\n  priceToClosestTick,\n  TICK_SPACINGS,\n  TickMath,\n  tickToPrice,\n} from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePool } from 'hooks/usePools'\nimport JSBI from 'jsbi'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ReactNode, useCallback, useMemo } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { getTickToPrice } from 'utils/getTickToPrice'\n\nimport { BIG_INT_ZERO } from '../../../constants/misc'\nimport { PoolState } from '../../../hooks/usePools'\nimport { useCurrencyBalances } from '../../connection/hooks'\nimport { AppState } from '../../reducer'\nimport {\n  Bound,\n  Field,\n  setFullRange,\n  typeInput,\n  typeLeftRangeInput,\n  typeRightRangeInput,\n  typeStartPriceInput,\n} from './actions'\nimport { tryParseTick } from './utils'\n\nexport function useV3MintState(): AppState['mintV3'] {\n  return useAppSelector((state) => state.mintV3)\n}\n\nexport function useV3MintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n  onLeftRangeInput: (typedValue: string) => void\n  onRightRangeInput: (typedValue: string) => void\n  onStartPriceInput: (typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  const onLeftRangeInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeLeftRangeInput({ typedValue }))\n      const paramMinPrice = searchParams.get('minPrice')\n      if (!paramMinPrice || (paramMinPrice && paramMinPrice !== typedValue)) {\n        searchParams.set('minPrice', typedValue)\n        setSearchParams(searchParams)\n      }\n    },\n    [dispatch, searchParams, setSearchParams]\n  )\n\n  const onRightRangeInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeRightRangeInput({ typedValue }))\n      const paramMaxPrice = searchParams.get('maxPrice')\n      if (!paramMaxPrice || (paramMaxPrice && paramMaxPrice !== typedValue)) {\n        searchParams.set('maxPrice', typedValue)\n        setSearchParams(searchParams)\n      }\n    },\n    [dispatch, searchParams, setSearchParams]\n  )\n\n  const onStartPriceInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeStartPriceInput({ typedValue }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n    onLeftRangeInput,\n    onRightRangeInput,\n    onStartPriceInput,\n  }\n}\n\nexport function useV3DerivedMintInfo(\n  currencyA?: Currency,\n  currencyB?: Currency,\n  feeAmount?: FeeAmount,\n  baseCurrency?: Currency,\n  // override for existing position\n  existingPosition?: Position\n): {\n  pool?: Pool | null\n  poolState: PoolState\n  ticks: { [bound in Bound]?: number | undefined }\n  price?: Price<Token, Token>\n  pricesAtTicks: {\n    [bound in Bound]?: Price<Token, Token> | undefined\n  }\n  pricesAtLimit: {\n    [bound in Bound]?: Price<Token, Token> | undefined\n  }\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  dependentField: Field\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  position?: Position\n  noLiquidity?: boolean\n  errorMessage?: ReactNode\n  invalidPool: boolean\n  outOfRange: boolean\n  invalidRange: boolean\n  depositADisabled: boolean\n  depositBDisabled: boolean\n  invertPrice: boolean\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n} {\n  const { account } = useWeb3React()\n\n  const { independentField, typedValue, leftRangeTypedValue, rightRangeTypedValue, startPriceTypedValue } =\n    useV3MintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // currencies\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA,\n      [Field.CURRENCY_B]: currencyB,\n    }),\n    [currencyA, currencyB]\n  )\n\n  // formatted with tokens\n  const [tokenA, tokenB, baseToken] = useMemo(\n    () => [currencyA?.wrapped, currencyB?.wrapped, baseCurrency?.wrapped],\n    [currencyA, currencyB, baseCurrency]\n  )\n\n  const [token0, token1] = useMemo(\n    () =>\n      tokenA && tokenB ? (tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]) : [undefined, undefined],\n    [tokenA, tokenB]\n  )\n\n  // balances\n  const balances = useCurrencyBalances(\n    account ?? undefined,\n    useMemo(() => [currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]], [currencies])\n  )\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // pool\n  const [poolState, pool] = usePool(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B], feeAmount)\n  const noLiquidity = poolState === PoolState.NOT_EXISTS\n\n  // note to parse inputs in reverse\n  const invertPrice = Boolean(baseToken && token0 && !baseToken.equals(token0))\n\n  // always returns the price with 0 as base token\n  const price: Price<Token, Token> | undefined = useMemo(() => {\n    // if no liquidity use typed value\n    if (noLiquidity) {\n      const parsedQuoteAmount = tryParseCurrencyAmount(startPriceTypedValue, invertPrice ? token0 : token1)\n      if (parsedQuoteAmount && token0 && token1) {\n        const baseAmount = tryParseCurrencyAmount('1', invertPrice ? token1 : token0)\n        const price =\n          baseAmount && parsedQuoteAmount\n            ? new Price(\n                baseAmount.currency,\n                parsedQuoteAmount.currency,\n                baseAmount.quotient,\n                parsedQuoteAmount.quotient\n              )\n            : undefined\n        return (invertPrice ? price?.invert() : price) ?? undefined\n      }\n      return undefined\n    } else {\n      // get the amount of quote currency\n      return pool && token0 ? pool.priceOf(token0) : undefined\n    }\n  }, [noLiquidity, startPriceTypedValue, invertPrice, token1, token0, pool])\n\n  // check for invalid price input (converts to invalid ratio)\n  const invalidPrice = useMemo(() => {\n    const sqrtRatioX96 = price ? encodeSqrtRatioX96(price.numerator, price.denominator) : undefined\n    return (\n      price &&\n      sqrtRatioX96 &&\n      !(\n        JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO) &&\n        JSBI.lessThan(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)\n      )\n    )\n  }, [price])\n\n  // used for ratio calculation when pool not initialized\n  const mockPool = useMemo(() => {\n    if (tokenA && tokenB && feeAmount && price && !invalidPrice) {\n      const currentTick = priceToClosestTick(price)\n      const currentSqrt = TickMath.getSqrtRatioAtTick(currentTick)\n      return new Pool(tokenA, tokenB, feeAmount, currentSqrt, JSBI.BigInt(0), currentTick, [])\n    } else {\n      return undefined\n    }\n  }, [feeAmount, invalidPrice, price, tokenA, tokenB])\n\n  // if pool exists use it, if not use the mock pool\n  const poolForPosition: Pool | undefined = pool ?? mockPool\n\n  // lower and upper limits in the tick space for `feeAmoun<Trans>\n  const tickSpaceLimits = useMemo(\n    () => ({\n      [Bound.LOWER]: feeAmount ? nearestUsableTick(TickMath.MIN_TICK, TICK_SPACINGS[feeAmount]) : undefined,\n      [Bound.UPPER]: feeAmount ? nearestUsableTick(TickMath.MAX_TICK, TICK_SPACINGS[feeAmount]) : undefined,\n    }),\n    [feeAmount]\n  )\n\n  // parse typed range values and determine closest ticks\n  // lower should always be a smaller tick\n  const ticks = useMemo(() => {\n    return {\n      [Bound.LOWER]:\n        typeof existingPosition?.tickLower === 'number'\n          ? existingPosition.tickLower\n          : (invertPrice && typeof rightRangeTypedValue === 'boolean') ||\n            (!invertPrice && typeof leftRangeTypedValue === 'boolean')\n          ? tickSpaceLimits[Bound.LOWER]\n          : invertPrice\n          ? tryParseTick(token1, token0, feeAmount, rightRangeTypedValue.toString())\n          : tryParseTick(token0, token1, feeAmount, leftRangeTypedValue.toString()),\n      [Bound.UPPER]:\n        typeof existingPosition?.tickUpper === 'number'\n          ? existingPosition.tickUpper\n          : (!invertPrice && typeof rightRangeTypedValue === 'boolean') ||\n            (invertPrice && typeof leftRangeTypedValue === 'boolean')\n          ? tickSpaceLimits[Bound.UPPER]\n          : invertPrice\n          ? tryParseTick(token1, token0, feeAmount, leftRangeTypedValue.toString())\n          : tryParseTick(token0, token1, feeAmount, rightRangeTypedValue.toString()),\n    }\n  }, [\n    existingPosition,\n    feeAmount,\n    invertPrice,\n    leftRangeTypedValue,\n    rightRangeTypedValue,\n    token0,\n    token1,\n    tickSpaceLimits,\n  ])\n\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks || {}\n\n  // specifies whether the lower and upper ticks is at the exteme bounds\n  const ticksAtLimit = useMemo(\n    () => ({\n      [Bound.LOWER]: feeAmount && tickLower === tickSpaceLimits.LOWER,\n      [Bound.UPPER]: feeAmount && tickUpper === tickSpaceLimits.UPPER,\n    }),\n    [tickSpaceLimits, tickLower, tickUpper, feeAmount]\n  )\n\n  // mark invalid range\n  const invalidRange = Boolean(typeof tickLower === 'number' && typeof tickUpper === 'number' && tickLower >= tickUpper)\n\n  const pricesAtLimit = useMemo(() => {\n    return {\n      [Bound.LOWER]: getTickToPrice(token0, token1, tickSpaceLimits.LOWER),\n      [Bound.UPPER]: getTickToPrice(token0, token1, tickSpaceLimits.UPPER),\n    }\n  }, [token0, token1, tickSpaceLimits.LOWER, tickSpaceLimits.UPPER])\n\n  // always returns the price with 0 as base token\n  const pricesAtTicks = useMemo(() => {\n    return {\n      [Bound.LOWER]: getTickToPrice(token0, token1, ticks[Bound.LOWER]),\n      [Bound.UPPER]: getTickToPrice(token0, token1, ticks[Bound.UPPER]),\n    }\n  }, [token0, token1, ticks])\n  const { [Bound.LOWER]: lowerPrice, [Bound.UPPER]: upperPrice } = pricesAtTicks\n\n  // liquidity range warning\n  const outOfRange = Boolean(\n    !invalidRange && price && lowerPrice && upperPrice && (price.lessThan(lowerPrice) || price.greaterThan(upperPrice))\n  )\n\n  // amounts\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseCurrencyAmount(\n    typedValue,\n    currencies[independentField]\n  )\n\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n    // we wrap the currencies just to get the price in terms of the other token\n    const wrappedIndependentAmount = independentAmount?.wrapped\n    const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n    if (\n      independentAmount &&\n      wrappedIndependentAmount &&\n      typeof tickLower === 'number' &&\n      typeof tickUpper === 'number' &&\n      poolForPosition\n    ) {\n      // if price is out of range or invalid range - return 0 (single deposit will be independent)\n      if (outOfRange || invalidRange) {\n        return undefined\n      }\n\n      const position: Position | undefined = wrappedIndependentAmount.currency.equals(poolForPosition.token0)\n        ? Position.fromAmount0({\n            pool: poolForPosition,\n            tickLower,\n            tickUpper,\n            amount0: independentAmount.quotient,\n            useFullPrecision: true, // we want full precision for the theoretical position\n          })\n        : Position.fromAmount1({\n            pool: poolForPosition,\n            tickLower,\n            tickUpper,\n            amount1: independentAmount.quotient,\n          })\n\n      const dependentTokenAmount = wrappedIndependentAmount.currency.equals(poolForPosition.token0)\n        ? position.amount1\n        : position.amount0\n      return dependentCurrency && CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\n    }\n\n    return undefined\n  }, [\n    independentAmount,\n    outOfRange,\n    dependentField,\n    currencyB,\n    currencyA,\n    tickLower,\n    tickUpper,\n    poolForPosition,\n    invalidRange,\n  ])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(() => {\n    return {\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }\n  }, [dependentAmount, independentAmount, independentField])\n\n  // single deposit only if price is out of range\n  const deposit0Disabled = Boolean(\n    typeof tickUpper === 'number' && poolForPosition && poolForPosition.tickCurrent >= tickUpper\n  )\n  const deposit1Disabled = Boolean(\n    typeof tickLower === 'number' && poolForPosition && poolForPosition.tickCurrent <= tickLower\n  )\n\n  // sorted for token order\n  const depositADisabled =\n    invalidRange ||\n    Boolean(\n      (deposit0Disabled && poolForPosition && tokenA && poolForPosition.token0.equals(tokenA)) ||\n        (deposit1Disabled && poolForPosition && tokenA && poolForPosition.token1.equals(tokenA))\n    )\n  const depositBDisabled =\n    invalidRange ||\n    Boolean(\n      (deposit0Disabled && poolForPosition && tokenB && poolForPosition.token0.equals(tokenB)) ||\n        (deposit1Disabled && poolForPosition && tokenB && poolForPosition.token1.equals(tokenB))\n    )\n\n  // create position entity based on users selection\n  const position: Position | undefined = useMemo(() => {\n    if (\n      !poolForPosition ||\n      !tokenA ||\n      !tokenB ||\n      typeof tickLower !== 'number' ||\n      typeof tickUpper !== 'number' ||\n      invalidRange\n    ) {\n      return undefined\n    }\n\n    // mark as 0 if disabled because out of range\n    const amount0 = !deposit0Disabled\n      ? parsedAmounts?.[tokenA.equals(poolForPosition.token0) ? Field.CURRENCY_A : Field.CURRENCY_B]?.quotient\n      : BIG_INT_ZERO\n    const amount1 = !deposit1Disabled\n      ? parsedAmounts?.[tokenA.equals(poolForPosition.token0) ? Field.CURRENCY_B : Field.CURRENCY_A]?.quotient\n      : BIG_INT_ZERO\n\n    if (amount0 !== undefined && amount1 !== undefined) {\n      return Position.fromAmounts({\n        pool: poolForPosition,\n        tickLower,\n        tickUpper,\n        amount0,\n        amount1,\n        useFullPrecision: true, // we want full precision for the theoretical position\n      })\n    } else {\n      return undefined\n    }\n  }, [\n    parsedAmounts,\n    poolForPosition,\n    tokenA,\n    tokenB,\n    deposit0Disabled,\n    deposit1Disabled,\n    invalidRange,\n    tickLower,\n    tickUpper,\n  ])\n\n  let errorMessage: ReactNode | undefined\n  if (!account) {\n    errorMessage = <Trans>Connect wallet</Trans>\n  }\n\n  if (poolState === PoolState.INVALID) {\n    errorMessage = errorMessage ?? <Trans>Invalid pair</Trans>\n  }\n\n  if (invalidPrice) {\n    errorMessage = errorMessage ?? <Trans>Invalid price input</Trans>\n  }\n\n  if (\n    (!parsedAmounts[Field.CURRENCY_A] && !depositADisabled) ||\n    (!parsedAmounts[Field.CURRENCY_B] && !depositBDisabled)\n  ) {\n    errorMessage = errorMessage ?? <Trans>Enter an amount</Trans>\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    errorMessage = <Trans>Insufficient {currencies[Field.CURRENCY_A]?.symbol} balance</Trans>\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    errorMessage = <Trans>Insufficient {currencies[Field.CURRENCY_B]?.symbol} balance</Trans>\n  }\n\n  const invalidPool = poolState === PoolState.INVALID\n\n  return {\n    dependentField,\n    currencies,\n    pool,\n    poolState,\n    currencyBalances,\n    parsedAmounts,\n    ticks,\n    price,\n    pricesAtTicks,\n    pricesAtLimit,\n    position,\n    noLiquidity,\n    errorMessage,\n    invalidPool,\n    invalidRange,\n    outOfRange,\n    depositADisabled,\n    depositBDisabled,\n    invertPrice,\n    ticksAtLimit,\n  }\n}\n\nexport function useRangeHopCallbacks(\n  baseCurrency: Currency | undefined,\n  quoteCurrency: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  tickLower: number | undefined,\n  tickUpper: number | undefined,\n  pool?: Pool | undefined | null\n) {\n  const dispatch = useAppDispatch()\n\n  const baseToken = useMemo(() => baseCurrency?.wrapped, [baseCurrency])\n  const quoteToken = useMemo(() => quoteCurrency?.wrapped, [quoteCurrency])\n\n  const getDecrementLower = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickLower === 'number' && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickLower - TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickLower === 'number') && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent - TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    return ''\n  }, [baseToken, quoteToken, tickLower, feeAmount, pool])\n\n  const getIncrementLower = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickLower === 'number' && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickLower + TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickLower === 'number') && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent + TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    return ''\n  }, [baseToken, quoteToken, tickLower, feeAmount, pool])\n\n  const getDecrementUpper = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickUpper === 'number' && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickUpper - TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickUpper === 'number') && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent - TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    return ''\n  }, [baseToken, quoteToken, tickUpper, feeAmount, pool])\n\n  const getIncrementUpper = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickUpper === 'number' && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickUpper + TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickUpper === 'number') && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent + TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    return ''\n  }, [baseToken, quoteToken, tickUpper, feeAmount, pool])\n\n  const getSetFullRange = useCallback(() => {\n    dispatch(setFullRange())\n  }, [dispatch])\n\n  return { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange }\n}\n","import { Currency } from '@uniswap/sdk-core'\nimport { asSupportedChain } from 'constants/chains'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = asSupportedChain(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Plus = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }));\n});\nPlus.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlus.displayName = 'Plus';\nexport default Plus;"],"names":["query","gql","MAX_DATA_BLOCK_AGE","useFeeTierDistribution","currencyA","currencyB","isLoading","error","distributions","token0","token1","latestBlock","useBlockNumber","data","interval","loading","useQuery","variables","toLowerCase","pollInterval","client","apolloClient","useMemo","useFeeTierDistributionQuery","address","ms","asToken0","asToken1","_meta","block","number","console","log","tvlByFeeTier","concat","reduce","acc","value","feeTier","Number","totalValueLockedToken0","totalValueLockedToken1","FeeAmount","LOWEST","undefined","LOW","MEDIUM","HIGH","sumToken0Tvl","sumToken1Tvl","Object","values","mean","tvl0","sumTvl0","tvl1","sumTvl1","usePoolTVL","wrapped","poolStateVeryLow","usePool","poolStateLow","poolStateMedium","poolStateHigh","isError","largestUsageFeeTier","keys","map","d","filter","a","b","percentages","PoolState","LOADING","EXISTS","FeeTierPercentageBadge","feeAmount","poolState","Badge","ThemedText","DeprecatedLabel","fontSize","NOT_EXISTS","INVALID","toFixed","FEE_AMOUNT_DETAIL","label","description","supportedChains","ChainId","ARBITRUM_ONE","BNB","CELO","CELO_ALFAJORES","MAINNET","OPTIMISM","POLYGON","POLYGON_MUMBAI","AVALANCHE","BASE","SUPPORTED_CHAINS","ResponsiveText","styled","theme","deprecated_mediaWidth","deprecated_upToSmall","FeeOption","active","onClick","formatDelta","useFormatter","ButtonRadioChecked","AutoColumn","gap","justify","parseFloat","DeprecatedMain","fontWeight","textAlign","FocusedOutlineCard","Card","surface3","pulsing","color","accent1","keyframes","Select","div","FeeSelector","disabled","handleFeePoolSelect","chainId","useWeb3React","trace","useTrace","pools","usePools","poolsByFeeTier","curPoolState","curPool","fee","showOptions","setShowOptions","useState","setPulsing","previousFeeAmount","usePrevious","recommended","useRef","handleFeePoolSelectWithEvent","useCallback","sendAnalyticsEvent","LiquidityEventName","SELECT_LIQUIDITY_POOL_FEE_TIER","action","FeePoolSelectAction","MANUAL","useEffect","current","RECOMMENDED","DynamicSection","onAnimationEnd","RowBetween","id","className","Box","style","width","marginTop","ButtonGray","padding","$borderRadius","_feeAmount","i","includes","_extends","InputRow","SmallButton","OutlineCard","deprecated_stateOverlayPressed","StyledInput","NumericalInput","InputColumn","InputTitle","DeprecatedSmall","neutral2","ButtonLabel","DeprecatedWhite","neutral1","decrement","increment","decrementDisabled","incrementDisabled","locked","onUserInput","title","tokenA","tokenB","setActive","localValue","setLocalValue","useLocalValue","setUseLocalValue","handleOnBlur","handleDecrement","handleIncrement","setTimeout","onFocus","onBlur","val","data-testid","Plus","size","Minus","RangeSelector","priceLower","priceUpper","onLeftRangeInput","onRightRangeInput","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","ticksAtLimit","isSorted","sortsBefore","leftPrice","invert","rightPrice","AutoRow","StepCounter","Bound","LOWER","UPPER","toSignificant","symbol","useApproval","amountToApprove","spender","useIsPendingApproval","token","currency","isToken","approvalState","account","tokenAllowance","useTokenAllowance","pendingApproval","isNative","ApprovalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useApprovalStateForSpender","tokenContract","useTokenContract","approve","async","logFailure","warn","useExact","estimatedGas","estimateGas","MaxUint256","catch","quotient","toString","gasLimit","calculateGasMargin","then","response","eventProperties","chain_id","token_symbol","token_address","getTokenAddress","InterfaceEventName","APPROVE_TOKEN_TXN_SUBMITTED","tokenAddress","spenderAddress","amount","useGetAndTrackApproval","getApproval","addTransaction","useTransactionAdder","pending","type","TransactionType","APPROVAL","useApproveCallback","approval","useHasPendingApproval","useIsArgentWallet","argentWalletDetector","useArgentWalletDetectorContract","inputs","call","useSingleCallResult","NEVER_RELOAD","Boolean","result","Wrapper","ScrollablePage","deprecated_upToMedium","breakpoint","md","sm","Input","surface1","ResponsiveTwoColumns","MediumOnly","BodyWrapper","main","$margin","$maxWidth","Z_INDEX","default","AppBody","props","getTickToPrice","baseToken","quoteToken","tick","tickToPrice","tryParseTick","price","match","whole","fraction","split","decimals","length","withoutDecimals","JSBI","Price","tryParsePrice","sqrtRatioX96","encodeSqrtRatioX96","numerator","denominator","TickMath","MAX_SQRT_RATIO","MAX_TICK","MIN_SQRT_RATIO","MIN_TICK","priceToClosestTick","nearestUsableTick","TICK_SPACINGS","useV3MintState","useAppSelector","state","mintV3","useV3MintActionHandlers","noLiquidity","dispatch","useAppDispatch","onFieldAInput","typedValue","typeInput","field","Field","CURRENCY_A","onFieldBInput","CURRENCY_B","searchParams","setSearchParams","useSearchParams","typeLeftRangeInput","paramMinPrice","get","set","typeRightRangeInput","paramMaxPrice","onStartPriceInput","typeStartPriceInput","useV3DerivedMintInfo","baseCurrency","existingPosition","independentField","leftRangeTypedValue","rightRangeTypedValue","startPriceTypedValue","dependentField","currencies","balances","useCurrencyBalances","currencyBalances","pool","invertPrice","equals","priceOf","parsedQuoteAmount","tryParseCurrencyAmount","baseAmount","invalidPrice","mockPool","currentTick","currentSqrt","getSqrtRatioAtTick","Pool","poolForPosition","tickSpaceLimits","ticks","tickLower","tickUpper","invalidRange","pricesAtLimit","pricesAtTicks","lowerPrice","upperPrice","outOfRange","greaterThan","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","position","Position","fromAmount0","amount0","useFullPrecision","fromAmount1","amount1","dependentTokenAmount","CurrencyAmount","fromRawAmount","parsedAmounts","deposit0Disabled","tickCurrent","deposit1Disabled","depositADisabled","depositBDisabled","BIG_INT_ZERO","fromAmounts","errorMessage","currencyAAmount","currencyBAmount","invalidPool","useRangeHopCallbacks","quoteCurrency","Rounding","ROUND_UP","getSetFullRange","setFullRange","unwrappedToken","formattedChainId","asSupportedChain","WRAPPED_NATIVE_CURRENCY","nativeOnChain"],"sourceRoot":""}